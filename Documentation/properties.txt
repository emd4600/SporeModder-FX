bool=Property type. A boolean value, either 'false' or 'true'.
char=Property type. A character.
wchar=Property type. A unicode character.
int8=Property type. An integer number from -128 to 127.
uint8=Property type. An unsigned integer number from 0 to 255.
int16=Property type. An integer number from -32768 to 32767.
uint16=Property type. An unsigned integer number from 0 to 65535.
int32=Property type. An integer number from -2147483648 to 2147483647.
uint32=Property type. An unsigned integer number from 0 to 4294967295.
int64=Property type. An integer number from -9.223372e+18 to 9.223372e+18.
uint64=Property type. An unsigned integer number from 0 to 1.8446744e+19.
float=Property type. A real number, single-precision.
double=Property type. A real number, double-precision.
string8=Property type. A string of text.
string16=Property type. A string of unicode text.
key=Property type. A value that describes a resource key: (group!instance.type)
texts=Array property type. A single piece of text that supports localization tables: (tableID!instanceID) "My text".
vector2=Property type. 2 real numbers: (x, y)
vector3=Property type. 3 real numbers: (x, y, z)
vector4=Property type. 4 real numbers: (x, y, z, w)
colorRGB=Property type. 3 real numbers representing an opaque color, in the range [0, 1]: (r, g, b)
colorRGBA=Property type. 3 real numbers representing a color, in the range [0, 1]: (r, g, b, opacity)
transforms=Array property type. Each line represents a transformation: -offset (x,y,z) -scale scaleFactor -rotateXYZ (angleX,angleY,angleZ)
bboxs=Array property type. A single line representing the boundaries of an object: (minX, minY, minZ) (maxX, maxY, maxZ)

bools=Array property type. Multiple boolean values, either 'false' or 'true'.
chars=Array property type. Multiple characters.
wchars=Array property type. Multiple unicode characters.
int8s=Array property type. Multiple integer numbers from -128 to 127.
uint8s=Array property type. Multiple unsigned integer numbers from 0 to 255.
int16s=Array property type. Multiple integer numbers from -32768 to 32767.
uint16s=Array property type. Multiple unsigned integer numbers from 0 to 65535.
int32s=Array property type. Multiple integer numbers from -2147483648 to 2147483647.
uint32s=Array property type. Multiple unsigned integer numbers from 0 to 4294967295.
int64s=Array property type. Multiple integer numbers from -9.223372e+18 to 9.223372e+18.
uint64s=Array property type. Multiple unsigned integer numbers from 0 to 1.8446744e+19.
floats=Array property type. Multiple real numbers, single-precision.
doubles=Array property type. Multiple real numbers, double-precision.
string8s=Array property type. Multiple strings of text.
string16s=Array property type. Multiple strings of unicode text.
keys=Array property type. Multiple lines that describe resource keys: (group!instance.type)
vector2s=Array property type. Multiple lines of 2 real numbers: (x, y)
vector3s=Array property type. Multiple lines of 3 real numbers: (x, y, z)
vector4s=Array property type. Multiple lines of 4 real numbers: (x, y, z, w)
colorRGBs=Array property type. Multiple lines of 3 real numbers representing opaque colors, in the range [0, 1]: (r, g, b)
colorRGBAs=Array property type. Multiple lines of 3 real numbers representing colors, in the range [0, 1]: (r, g, b, opacity)

description=[string16]["No description"] Description of the property list. Excluded from binary format.
template=[key]
parent=[key]
ExtensionMap=[string16s]
DefaultGroup=[key]
OptionListTarget=[key]
OptionIDs=[uint32s]
OptionStartSettings=[uint32s]
OptionEndSettings=[uint32s]
packageTitle=[text] Title for this package for display in UI etc.
packagePriority=[int32] Database priority for this package.
packageRequirements=[uint32s] Requirements for this package. (e.g. editors, main game, ...).
packageID=[key] ID to use for entitlement checks.
packageBlessCheck=[bool]
packageProductKey=[string16]
packageRegistryKey=[string16]
packageEntitleCheck=[bool]
packageSignature=[uint32s] Signature for this package. must be first available property ID for technical reasons.
packageSteamAppID=[uint32] ID to use for Steam entitlement checks.
openingMovies=[keys]
movieFadeOutLength=[float]
preloadTextures=[keys]
tiledScrollPanelCenter=[bool]
tiledScrollPanelScaleX=[bool]
tiledScrollPanelScaleY=[bool]
tiledScrollPanelKeepAspectRatio=[bool]
tiledScrollPanelTilesPerRow=[uint32]
tiledScrollPanelMarginX=[float]
tiledScrollPanelMarginY=[float]
tiledScrollPanelGapX=[float]
tiledScrollPanelGapY=[float]
UILocalizedResourceGroups_TypeID_CSS=[uint32s]
UILocalizedResourceGroups_TypeID_OTF=[uint32s]
UILocalizedResourceGroups_TypeID_TTF=[uint32s]
hintConditionsPresent=[keys]
hintConditionsAbsent=[keys]
hintConditionsCancel=[keys]
hintPeriod=[float]
hintLife=[float]
hintFadeTimeIn=[float]
hintFadeTimeOut=[float]
hintWait=[float]
hintPriority=[int32]
hintText=[text]
hintIcon=[key]
hintFlashWindow=[key]
hintType=[key]
hintTextColor=[uint32]
hintAlwaysShow=[bool][false] When the user turns off hints, they cannot turn off these ones.
hintMustDo=[bool][false]
IdleThreshold=[int32] How many seconds being idle trigger a hint in SPG.
browserFilterName=[text]
browserFilterButtonGraphic=[keys]
browserFilterButtonAtlasedIconID=[key] Mutually exclusive with browserFilterButtonGraphic, used for atlased icons.
browserFilterData=[key]
browserFilterChildrenFilters=[keys]
browserFilterArcheTypeID=[key]
browserFilterParameterIDs=[keys]
browserFilterMakeNewEditor=[key]
browserFilterMakeNewOutfitterEditor=[key]
sporepediaConfigSelectedFilterID=[key]
sporepediaConfigRootFilterID=[key]
sporepediaConfigEnableSelectionButton=[bool]
sporepediaConfigEnableEditButton=[bool]
sporepediaConfigEnablePublishButton=[bool]
sporepediaConfigEnableBanDeleteButton=[bool]
sporepediaConfigEnableCloseButton=[bool]
sporepediaConfigShowPreviousFeed=[bool]
sporepediaConfigLockFilterUI=[bool]
sporepediaConfigFilterUIVisibility=[bool]
sporepediaConfigEditorTypeOverride=[key]
sporepediaConfigForceExpandCategories=[keys]
sporepediaConfigSelectedFeed=[key]
sporepediaConfigEditorForMakeNew=[key]
sporepediaConfigEnableMakeNewButton=[bool]
sporepediaConfigEditorForMakeNewComesFromCurrentFilter=[bool]
sporepediaConfigEditorForOutfitter=[key]
sporepediaConfigEnableOutfitButton=[bool]
sporepediaConfigCallToActionMessage=[text]
sporepediaConfigFeedListID=[key]
sporepediaConfigExpandCategories=[bool]
sporepediaConfigSporeGuideConfigID=[key]
sporepediaConfigFilterUnbakeableAssets=[bool]
sporepediaConfigVerbTrayTypeOverride=[key]
sporepediaConfigCreatureAbilityRolloverVerbTray=[key] Extra rollover window to display more information on creatures.
browserAllowSortByAppPack=[bool]
browserAllowSortByTime=[bool]
browserAllowSortByDownloadTime=[bool]
browserAllowSortByTitle=[bool]
browserAllowSortByAuthor=[bool]
browserAllowSortByType=[bool]
browserAllowSortByPublished=[bool]
browserAllowSortByRelationship=[bool]
browserAllowSortByVehicleHealth=[bool]
browserAllowSortByVehicleMilitaryPower=[bool]
browserAllowSortByVehicleCulturalPower=[bool]
browserAllowSortByVehicleEconomicPower=[bool]
browserAllowSortByVehicleSpeed=[bool]
browserAllowSortByCreatureOmnivore=[bool]
browserAllowSortByCreatureCarnivore=[bool]
browserAllowSortByCreatureHerbivore=[bool]
browserAllowSortByCreatureAttack=[bool]
browserAllowSortByCreatureSocial=[bool]
browserAllowSortByAdventureRecentlyPlayed=[bool]
browserAllowSortByAdventureLockedAvatar=[bool]
browserAllowSortByAdventurePlayCount=[bool]
browserAllowSortByAdventureRating=[bool]
browserAllowSortByAdventureDifficulty=[bool]
browserAllowSortByAdventureSporePoints=[bool]
browserDefaultSort=[key]
browserSortDefaultAllowState=[bool]
browserSortAllowChildrenType=[key]
browserSortCompareMethods=[keys]
browserSortLayoutButton=[key]
feedListCategories=[keys]
feedListHideSingleCategoryHeader=[bool]
feedListItems=[keys]
feedListCategoryName=[text]
feedListCategoryVisibleInBuddiesOnly=[bool]
feedListItemType=[key]
feedListItemName=[text]
feedListItemOTDBQueryType=[key]
feedListItemTelemetryQueryType=[key]
feedListItemSporeguideStringTable=[key]
feedListItemWebpageURLID=[key]
feedListItemMessageID=[key]
feedListItemSubscriptionType=[int32]
feedListItemNeedsRefreshing=[bool]
feedListItemIconKey=[key]
feedListItemHeader=[text]
feedListItemAllowMakeNew=[bool]
feedListItemRootFilterID=[key]
feedListItemSelectedFilterID=[key]
feedListItemBlinkForNewAssets=[bool]
feedListItemKeyList=[keys]
feedListItemUniqueID=[uint32]
feedListItemGroupID=[uint32]
sporepediaShow=[bool][false]
sporepediaName=[text]
sporepediaAssetType=[key]
sporepediaBackdropImage=[key]
shoppingCancelButton=[bool][true] Should this shopping window have a cancel button or not.
shoppingOKButton=[bool][true] Should this shopping window have an OK button or not.
shoppingUILayoutID=[key] Instance ID for UI layout.
shoppingSizeSmall=[vector2] Size of the main shopping window at 800x600.
shoppingSizeLarge=[vector2] Size of the main shopping window at 1024x768 and above.
shoppingCanEditExisting=[bool] True means there will be an "edit" button in the preview pane.
shoppingAssetIcon=[key] Icon for asset type, to be displayed in shopping.
shoppingAssetName=[text] Name of asset type, to be displayed in shopping.
shoppingAssetDescription=[text] Description of asset type, to be displayed in shopping.
shoppingCanMakeNew=[bool][true] Means there will be a "make new" button in the preview pane.
shoppingBanButton=[bool][true] Means there will be a "ban" button in the preview pane.
shoppingDeleteButton=[bool][true] Means there will be a "delete" button in the preview pane.
shoppingPublishButton=[bool][true] Means there will be a "publish" button in the preview pane.
shoppingTutorialInstance=[key] Instance ID for the shopping tutorial file.
shoppingEditorTypeOverride=[key] Instance ID for the editor prop file to use to edit these shopping items.
editorName=[text] Name of what this editor edits, ie "Creature", "Vehicle", "UFO", etc.
editorDefaultModelName=[text] Default name for new models.
editorNamePrompt=[text] Text shown for the naming window.
editorAllowNameEdit=[bool] Allow name editing in this editor.
editorRandomNameType=[key] Enum tNameType used for the randomize button in the editor, or 0 for no randomize button.
editorCameraUI=[key] Ui camera, controls initial state and constraints on user camera inside editor.
editorCameraPalette=[key] Palette camera, this is the camera that will be used to take thumbnails and display 3d swatches in the editor.
editorCameraThumbnail=[key] Thumbnail camera, when editor asset is saved, this is the camera used to generate the thumbnail.
editorCameraTurntableStyle=[bool] Used mainly for cell editor.
editorBoundSize=[float] The width of the space that the model skin is constrained to.
editorFeetBoundSize=[float] The width of the space that the feet are constrained to.
editorMaxHeight=[float] The height of the cylinder.
editorMinHeight=[float] The base of the cylinder.
editorPedestalModel=[key] The key for the rdx9 file to be used for the pedestal in the editor.
editorTestEnvironmentModel=[key] The key for the rdx9 file to be used for the test environment in the editor.
editorSkyBoxEffect=[key] The key for the sky box effect.
editorSwatchBackgroundEffect=[key] The key for an additional effect to play inside a swatch representation of this asset.
editorBackgroundModel=[key] The key for the rdx9 file to be used for the background in the editor.
editorDaisType=[uint32] Used by audio system to play different footsteps based on type of material used in the dais construction:).
editorDaisRadius=[float] Used by audio system to determine if foot is on dais or floor.
editorLight=[key] The name of the light to be used by the editor.
editorPaintModeLight=[key] The name of the light to be used by the editor in paint mode.
editorUseSymmetry=[bool][true] If the model has symmetry enabled by default.
editorAllowAsymmetry=[bool][false] If this editor allows asymmetry mode or not.
editorCellPinningToRigBlocks=[bool][false] Causes blocks to pin to both the skin and rigblocks in the cell editors.
editorUseSkin=[bool][true] If the model uses skin by default.
editorUseSpine=[bool][true] If the model uses the spine by default.
editorInitSpine=[bool][true] If the model inits the spine by default.
editorVertebraModel=[key] The model (prop file) that this editor uses as the vertebra.
editorVertebraWidth=[float] Spacing between vertebra.
editorSkinResolutionRealtime=[float]
editorSkinResolutionHighQuality=[float]
editorShowVertebrae=[bool][true] If the model shows the vertebra by default.
editorUILayoutFileName=[key] The name of the layout file expected to be in the default layout directory.
editorSaveExtension=[key] The save extension key which will be parsed both into a key and a three letter extension.
editorSaveDirectory=[key] The save directory key.
editorEnabledManipulators=[keys] The list of keys that correspond to the manipulator classes to enable for this editor.
editorOnlyEditFromPalette=[bool][true] Only blocks which are present in the palette can be modified if this flag is set.
editorModelTypes=[keys] The list of model types that this editor supports, ie. VehicleMilitaryAir, VehicleEconomicLand, BuildingIndustry, BuildingHouse, etc.
editorStartupModel=[keys] If present, will load this model on startup by default.
editorUseAnimWorld=[bool] Whether this editor should initialize an anim world or not.
editorDisableAnimations=[bool] Whether this editor should allow animations.
editorDisableCreatureAnimIK=[bool] Used for cell editor, turns off certain features of anim IK.
editorUseShadows=[bool][false] Whether shadows are on or off by default.
editorShadowLight=[key] Key to a prop file containing shadow camera parameters.
editorStatsFile=[key] Key to a prop file declaring which stats are visible for this editor.
editorPaintSwatchModel=[key] Key to a model used for generating paint swatches.
editorVerbIconFile=[key] Key to a verb icon config for this editor.
editorCurrencyIcon=[key] Key to png icon for editor currency.
editorCurrencyChar=[uint32] Unicode character for editor currency.
editorDefaultPaintTheme=[key] Which paint theme to use when placing a new block by default (only affects non-skin editors such as building/vehicle).
editorDefaultSkinPaintScripts=[uint32s] Which skinpaint scripts to apply to a new model by default (only instance IDs matter).
editorDefaultInitialBudget=[int32] Starting budget, only used if no budget is passed in when the editor is launched by an external app.
editorMoveModelToGround=[bool][false] Tells the editor to move the edited object to the ground (so its lowest point touches the ground).
editorMoveModelToCenterOfMass=[bool][false] Tells the editor to move the origin of the object to the center of mass.
editorBackgroundMusicPatch=[key] The key to the sound patch to play for the background music.
editorSwatchBackgroundMusicPatch=[key] The key to the sound patch to play for the background music in the asset browser.
editorMinimumLeglessCreatureHeight=[float] The minimum height a legless creature is allowed to be on load.
editorMouseWheelTimeout=[float] The amount of idle time it takes for a mouse wheel operation to register finished.
editorMouseWheelDistanceThreshold=[float] The distance the mouse has to travel for a mouse wheel operation to register finished.
editorAnimationInterruptDistance=[float] The distance the mouse has to travel to interrupt a reactive animation.
editorCreatureIdleActivationTime=[float] Time to wait before starting animated creature (in milliseconds).
editorSubtractPartsCostOnLoad=[bool][false] If this is true, subtract cost of all rigblocks on model load.
editorSpineScalingNeighborInfluence=[int32] Number of neighbors to influence when scaling the spine.
editorPlayModeEntryEffectID=[key]
editorPlayModeExitEffectID=[key]
editorPlayModeBackgroundSet=[int32]
editorBuyItemEffectID=[key]
editorSellItemEffectID=[key]
editorEscrowEffectID=[key]
editorScreenEffectsDistance=[float] Distance from camera to play screen space FX.
editorZCorp3D2RealWorldRatio=[float] Ratio between 3d and real world for z-corp printing testing.
editorPartsPalette=[key] New palette data layout.
editorPaintPalette=[key] New palette data layout.
editorShowAbilityIcons=[bool][true] Show any ability icons in editor palettes.
editorShowBoneLengthHandles=[bool][false] Tells the editor whether or not to show the bone length handle.
editorPreserveLineage=[bool][true] Whether to save the parent key to newly saved assets.
editorComplexityLimit=[int32] Maximum complexity of blocks allowed in this editor.
editorBoneComplexityLimit=[int32] Maximum bone complexity of blocks allowed in this editor.
editorMaxBakedBlocks=[int32] Maximum number of baked blocks allowed in this editor.
editorMaxGeomScore=[float] Maximum geometric score (from vertices/indices) allowed in this editor.
editorMaxBlockCount=[int32] The absolute max number of blocks a model may have. cannot be turned off by freedom cheat.
editorViewableComplexityFlags=[uint32] Which complexity limits to show in meter, 0x1 = Block complexity, 0x2 = Bone complexity, 0x4 = baked block complexity.
editorAssembledContentDirectory=[string] String pointing to directory that contains assembled content for current editor type.
editorSpineHandleTuningFile=[key]
editorBallConnectorHandleTuningFile=[key]
editorRotationBallHandleTuningFile=[key]
editorRotationRingHandleTuningFile=[key]
editorDeformHandleTuningFile=[key]
editorUseBoundsForDelete=[bool][true] Has the editor use the bounds as a deletion option.
editorModelTranslationOptions=[uint32] Translation flags.
editorModelTranslationLoadOptions=[uint32] Translation flags to be applied on load.
editorTranslateModelOnSave=[bool] Tells the editor to apply the translation options on save.
editorTransition=[key] Points to a prop file detailing how to transition.
editorMinPlayableHeight=[float] Min height a model has to be to be playable.
editorMinPlayableWidth=[float] Min width a model has to be to be playable.
editorMinPlayableDepth=[float] Min depth a model has to be to be playable.
editorMinPlayableHeightAboveGround=[float] Min depth a model has to be to be playable.
editorPlayModeEnabled=[bool] Is the play mode button enabled or greyed out?.
editorBaseConfigUnlocks=[uint32s] Array of palette categories number of parts to randomly unlock (currently called only in certain instances).
editorSwatchPedestalModel=[key] Rdx9 to be loaded as pedestal while viewing model inside a swatch.
editorSwatchBackgroundModel=[key] Rdx9 to be loaded as background while viewing model inside a swatch.
editorSwatchCameraUI=[key]
editorSporepediaConfigID=[key] The id for the sporepedia config to launch from the editor.
editorSporepediaCanSwitchConfigID=[key] The id for the sporepedia config to launch from the editor when you can switch editors.
editorDefaultBrainLevel=[int32] The default brain level for the editor (where applicaple).
editorBudgetTooltip=[text] String id of the budget tooltip.
editorMaxBudget=[int32] The max budget for a given editor or planner.
editorAllowPublish=[bool] Whether this config has the ability to publish, regardless of whether it is requested.
editorMinimumLoadBudget=[int32] The minimum budget to go down to on the load of a model.
editorTransitionAnimation=[key] The animation to play on an editor transition.
editorTransitionEffect=[key] The effect to play on an editor transition.
editorTransitionHideUI=[bool] Tells us to hide the UI on transition.
editorTransitionCenterCamera=[bool] Whether or not to center the camera on transition.
editorTutorialPartMode=[key] Instance ID for part mode tutorial.
editorTutorialPlayMode=[key] Instance ID for play mode tutorial.
editorTutorialPaintMode=[key] Instance ID for paint mode tutorial.
editorRolloverGlowColor=[colorRGBA]
editorSelectedGlowColor=[colorRGBA]
editorRolloverSelectedGlowColor=[colorRGBA]
editorCSABrowserURL=[string16]
editorCSATrialPartsPalette=[key] To filter out parts from validity and palette in Trial version.
editorCSATrialPaintPalette=[key] To filter out paint swatches from validity and palette in Trial version.
editorGeomInfoKeys=[keys]
editorGeomInfoScores=[floats]
editorModelPropertiesTemplate=[key]
tuningDistanceFromOriginalPosition=[float]
tuningChangeInPreviousLimb=[float]
tuningChangeInNextLimb=[float]
tuningDistanceFromCameraPlane=[float]
tuningChangeInDistanceFromParallelPlane=[float]
tuningArmAngle=[float]
tuningBoneLength=[float]
tuningChangeInDistanceFromSymmetryPlane=[float]
tuningPlaneOfSymmetryAlignment=[float]
tuningArmAngleChange=[float]
tuningCameraAngle=[float]
tuningInvalidLength=[float]
tuningUpperLimbLength=[float]
tuningLowerLimbLength=[float]
tuningSnapToCardinalOrientations=[bool][false] Snaps limbs to cardinal orientations.
tuningEditorHandleColorDefault=[colorRGB]
tuningEditorOverdrawHandleColorDefault=[colorRGB]
tuningEditorHandleColorRollover=[colorRGB]
tuningEditorOverdrawHandleColorRollover=[colorRGB]
tuningEditorHandleColorActive=[colorRGB]
tuningEditorOverdrawHandleColorActive=[colorRGB]
tuningEditorHandleAlphaDefault=[float]
tuningEditorOverdrawHandleAlphaDefault=[float]
tuningEditorHandleAlphaRollover=[float]
tuningEditorOverdrawHandleAlphaRollover=[float]
tuningEditorHandleAlphaActive=[float]
tuningEditorOverdrawHandleAlphaActive=[float]
tuningEditorHandleDefaultScale=[float]
tuningEditorHandleDefaultModel=[key]
tuningEditorHandleDefaultOverdrawModel=[key]
tuningEditorHandleHasOverdraw=[bool]
tuningEditorHandleAnimateInTime=[float]
tuningEditorHandleAnimateOutTime=[float]
tuningEditorHandleFadeInTime=[float]
tuningEditorHandleFadeOutTime=[float]
tuningSpineHandleColor=[colorRGB] Color of unselected spine handle.
tuningSpineHandleSize=[float] Scale used on spine handle.
tuningSpineHandleAlpha=[float] Alpha on an unselected spine handle.
tuningSpineHandleOverdrawAlpha=[float] Alpha on an unselected overdraw spine handle.
tuningSpineHandleDistance=[float] Distance between last vertebra and spine handle.
tuningVertebraTorsoRolloverColor=[colorRGBA] Vertebra color when torso is rolled over.
tuningVertebraTorsoSelectedColor=[colorRGBA] Vertebra color when torso is selected (but vertebra is not).
tuningVertebraHighlightColor=[colorRGBA] Vertebra color when a vertebra is highlighted.
tuningVertebraUnselectedColor=[colorRGBA] Vertebra color when vertebra should be hidden (used to fade to and from).
tuningVertebraFadeTime=[float] Seconds for vertebra to fade from full to zero.
editorPlayModeLight=[key] The name of the light to be used by playmode.
editorPlayModeCollisionBG=[key]
editorCrossFadeSnap=[key]
editorBGThumbNail=[key]
editorBGEntryEffect=[key]
editorBGOrder=[int32]
editorBGLighting=[key]
editorPlayAnimName=[key]
editorPlayAnimBabyName=[key]
editorPlayAnimBabySpeed=[float]
editorPlayAnimBabyDelay=[float]
editorAnimInfo=[keys]
editorButtonImageNormal=[key]
editorButtonImageDisabled=[key]
editorButtonImageHighlighted=[key]
editorButtonImageActive=[key]
editorButtonImageIcon=[key]
animButtonTooltip=[text]
editorAnimPanelOrder=[int32]
editorAnimPanelIcon=[key]
editorAnimPanelIconShadow=[key]
paintMaterialDiffuse=[key]
paintMaterialNMapSpec=[key]
paintMaterialEmissive=[key]
paintThemePaints=[keys]
paintThemeColor1s=[colorRGBs]
paintThemeColor2s=[colorRGBs]
paintThemeRegionFilter=[bools]
paintThemeOverrideThumbnail=[key]
paintScriptID=[key]
paintMaterialSpecExponent=[float]
paintMaterialSpecStrength=[float]
paintMaterialGlossiness=[float]
paintMaterialInvBumpiness=[float]
paintMaterialBumpiness=[float]
paintMaterialCol1BlendFactor=[float]
paintMaterialCol2BlendFactor=[float]
paintMaterialDefaultColor1=[colorRGB]
paintMaterialDefaultColor2=[colorRGB]
paintRegionMapping=[int32s]
modelDiffuseTexture=[key]
modelNMapSpecTexture=[key]
modelEmissiveTexture=[key]
verbTrayCollection=[key] Points to the file that specifies the verb tray collection.
verbTrayCollectionSporepediaLargeCard=[key] Points to the file that specifies the verb tray collection for the large card layout in sporepedia.
verbTrayCollectionSporepediaLargeCardWithHealth=[key] Alternate stats setup.
verbTrayCollectionSporepediaSmallCard=[key] Points to the file that specifies the verb tray collection for the large shopping swatch.
verbTrayCollectionSporepediaSmallCardWithHealth=[key] Alternate stats setup.
verbTrayLayout=[key] Points to the layout file for the verb icon tray.
verbTrayOverrideIconLayout=[bool] Uses the "verbIconLayout" prop from the verb tray instead of individual abilities.
verbIconLayout=[key] Points to the layout file for a single verb icon.
verbIconStaticLayout=[key] Points to the layout file for a single verb icon.
verbIconGameLayout=[key] Points to the layout file for a single verb icon.
verbIcons=[keys] Array of abilities for a verb icon tray. The order in the array defines the order in the tray.
verbTrayJustification=[key] Left, Right, Top, or Bottom.
verbTraySoundKey=[key] The uint32 key under which to send the value of the tray to the sound system.
verbCollectionAnimateValues=[bool][false] Used to make verbs animate when they change.
verbCollectionLayoutStyle=[key] Fill, Centered, Justified.
verbIconImageGroup=[key] Specifies the group to go to find the icons.
verbTrayIcon=[key] Specifies the image for the base of a verb tray.
verbIconCategory=[key] The verb icon category a given ability is in.
verbTrayRepresentativeAnimation=[key] Animation id that the tray should play if it's the highest tray total.
verbTrayOverrideCategory=[key] Category the verb tray should pull its level from instead of adding up the contents of its tray.
verbIconShowRollover=[bool][true] Turns the rollovers on and off.
verbIconShowLevel=[bool][true] Has the verb icon display the level.
verbIconShowZeroLevel=[bool][false] Has the verb icon display itself it its value is zero.
verbIconHasCharge=[bool][false] Whether the verb icon has a charge meter.
verbIconForceEnabled=[bool][false] If the verb icon should force itself to be enabled.
verbTrayIsHealthBar=[bool][false] Turns the verb tray into a health bar.
verbIconRolloverImage=[key] The key for the image to be used in rollovers.
verbTrayShowVerbIconWhenCollapsed=[bool][false] Has the tray show the first verb icon if not showing verb icons.
verbIconRepresentativeAnimation=[key] Animation id a verb should play to show off the verb icon.
verbIconTriggerKey=[int32] The ascii value of the key that triggers this ability. -1 means "use the tray index" and -2 means "no hot key".
verbIconIgnoreTriggerKey=[bool][false] If the verb icon should ignore the trigger key.
verbIconUseDescription=[bool][true] If we should show the description or the name in rollovers.
verbIconAlertID=[key] If this icon is showing on a collapsed tray, show the alert window.
verbCollectionLayout=[key] Layout key pointing to the layout to load for vehicle verb treatment.
verbCollectionIsVehicleStats=[bool][false] Turns stats into vehicle stats.
verbIconColor=[colorRGBA] The color to tint bars and pills.
verbIconRolloverLevelImageID=[key] The ID of the image to use in the "level" window.
verbIconRolloverLevelLayoutID=[key] The id of the layout to use in the "level" window.
paletteItemRolloverShowLevel=[bool] Show the level in the palette item rollover.
verbIconRolloverShowLevel=[bool] Show the level in the actual stat rollover on the right.
verbIconShowPercent=[bool] Show the percent instead of the value.
verbIconShowPercentInRollover=[bool] Show the percent instead of the value in the rollover.
verbIconValueString=[text] The string to use to write the value. uses the token ~icon_amount~ to display the value.
verbIconPaletteOverrideName=[text] A string to override the name of the ability in the palette override.
verbIconRolloverShowIcon=[bool] Turns the icon on and off in the part rollover.
verbIconEnforceMaxLevel=[bool]
verbIconMaxLevel=[int32]
verbIconPaletteOverrideIconID=[key]
verbIconImageLayout=[key] The layout file that contains the verb images.
verbTrayIconID=[key] The image id for a verb tray.
verbIconImageID=[key] The guid ID of the image in the layout.
verbIconTraySmallCardOverrideImageID=[key] Image ID to use in the rollover, only for small asset cards (use regular image if this isn't specified).
verbIconTrayOverrideImageID=[key] Image ID to use in the rollover (use regular image if this isn't specified).
verbIconLockedImageKey=[key] The image key to use when the palette item that owns this ability is locked.
verbTrayLargeSwatchCollection=[key] Verb tray collection layout for the large shopping swatch.
verbTraySmallSwatchCollection=[key] Verb tray collection layout for the small shopping swatch.
verbTrayTypeToSingleOut=[key] The verb tray type to single out and special case.
verbIconRolloverLayout=[key] The layout file to use for the verb icon rollover.
verbTrays=[keys] Array of verb tray prop files to display.
verbTrayName=[text] Name of the verb tray.
verbTrayDescription=[text] Description of the verb tray.
verbIconsSize=[float]
verbIconsNumRows=[int32]
verbIconsNumColumns=[int32]
verbIconsSpeed=[float]
verbIconsFadeTimeMS=[int32]
skinpaintDiffuseTexture=[key]
skinpaintSpecBumpTexture=[key]
skinpaintTintMaskTexture=[key]
skinpaintMaxOcclusion=[float]
skinpaintIgnoreParticles=[bool]
colorpickerImageGroupID=[key]
colorpickerImageFrame=[key]
colorpickerImageFrameGlow=[key]
colorpickerImageShine=[key]
colorpickerImageExpansionBackground=[key]
colorpickerImageColor=[key]
colorpickerDoubleClickInterval=[int32]
colorpickerRolloverMaxTime=[float]
colorpickerMouseDownMaxTime=[float]
colorpickerSelectMaxTime=[float]
colorpickerMaxInflation=[float]
colorpickerExpansionSatMax=[float]
colorpickerExpansionSatExponent=[float]
colorpickerExpansionValMax=[float]
colorpickerExpansionValExponent=[float]
colorpickerExpansionSize=[float]
colorpickerGapPercent=[float]
colorpickerNumExpansionSwatches=[int32] Must be odd number.
colorpickerExpansionCatchUpSpeed=[float]
colorpickerColors=[colorRGBs]
colorpickerAddCustomColor=[bool]
colorpickerAddDefaultColor=[bool]
colorPickerAllowExpansion=[bool]
colorPickerDefaultColorWindowSizePercent=[float]
colorPickerDefaultColorWindowGapPercent=[float]
colorPickerImageDefaultColor=[key]
colorpickerImageDefaultFrame=[key]
colorpickerImageDefaultFrameGlow=[key]
colorpickerImageDefaultShine=[key]
palettePaletteLayoutFile=[key]
palettePaletteThumbnailGroupID=[key]
palettePalettePages=[keys]
palettePaletteStartupCategory=[int32]
paletteCategoryLayoutFile=[key]
paletteCategorySequenceNumber=[uint32]
paletteCategoryName=[text]
paletteCategoryIcon=[key]
paletteCategoryIconList=[keys]
paletteCategoryPaintByNumber=[bool]
paletteCategoryForceHasPages=[bool]
paletteCategoryRegionFilter=[key]
paletteCategorySkinPaintIndex=[uint32]
paletteCategoryParentCategory=[key]
palettePageLayoutFile=[key]
palettePageSequenceNumber=[uint32]
palettePageParentCategory=[key]
palettePageFilter=[key]
palettePageSetId=[int32]
palettePageNumRows=[int32]
palettePageNumColumns=[int32]
palettePageHorizontalSpacing=[float]
palettePageVerticalSpacing=[float]
palettePageHorizontalOffset=[float]
palettePageVerticalOffset=[float]
palettePageIgnoreOverrideThumbnailGroup=[bool]
palettePageNoResolutionScale=[bool]
palettePageUseRelativeLayout=[bool]
palettePageBorder=[vector4] Left, top, right, bottom.
palettePageItemPercentageWidth=[float]
palettePageItemAspectRatio=[float][1.0]
palettePageUseAbsoluteItemSize=[bool]
palettePageUseAbsoluteBorderSizes=[bool]
palettePageItemMaxPercentageHeight=[float] Don't let the palette scale the height greater than this percent.
palettePagePartParentPage=[key]
palettePagePartItems=[keys]
palettePagePartItemRows=[int32s]
palettePagePartItemColumns=[int32s]
palettePagePartPriority=[int32][0]
paletteSetName=[text]
paletteSetButtonLayout=[key]
paletteSetButtonIcon=[key]
paletteSetButtonBackgroundIcon=[key]
paletteSetSequenceNumber=[int32]
paletteContentPackName=[text] DJM - This is mainly for the CSA packs, where we're adding more data to an existing page.
paletteItemHeight=[float]
paletteItemWidth=[float]
paletteItemType=[key]
paletteItemIsDraggable=[bool][true]
paletteItemImage=[key] Key to a texture (that will display in the palette).
paletteItemModelType=[key] If this palette item happens to be an editor model, this will point to the model type.
paletteItemModelKey=[key] Used to point the palette item at a static model.
paletteItemTriggerBehavior=[key] None, Drag, Click: used to specify how the item triggers.
paletteItemVehicleType=[int32] Corridsponds to eVehicleLocomotion, Land=0, Sea=1, Air=2.
modelGonzagoClassID=[key]
paletteAssetSwatchHeaderIcon=[key]
paletteAssetSwatchLockedIcon=[key]
paletteAssetSwatchNewIcon=[keys]
paletteAssetSwatchBackgroundImage=[key]
paletteAssetSwatchLockedBackgroundImage=[key]
paletteAssetSwatchEditable=[bool]
paletteAssetSwatchLargeNewTooltip=[text]
paletteAssetSwatchNewTooltip=[text]
paletteAssetSwatchEditTooltip=[text]
paletteAssetSwatchLoadTooltip=[text]
paletteAssetSwatchLockedText=[text]
paletteOutfitSwatchHeaderText=[text]
paletteOutfitWhichEditor=[key]
paletteTribeToolUpgradeList=[keys]
paletteTribeToolImageList=[keys]
paletteTribeToolDisabledImageList=[keys]
paletteTribeToolFirstPurchasableTool=[int32]
paletteItemHeaderIconID=[key]
paletteItemPlacedAsset=[key]
paletteItemResourceKey=[key]
animRespondsToEvent=[keys]
animRequiredBlocks=[keys]
animTriggerOnBlock=[keys]
animName=[string]
animID=[uint32]
animRuntimeList=[int32s]
animInterruptible=[bool][true]
animConditionFOURCC=[string8]
statsPosition=[vector2]
statsCaptions=[texts]
statsTooltips=[texts]
statsIcons=[keys]
statsExampleAnimations=[keys]
statsMaxDots=[int32s]
statsAlwaysDisplay=[bools]
statsIcons=[keys]
statsAbilityIDs=[int32s]
plannerNamePrompt=[text]
animbuttonAnimationName=[strings]
animbuttonEvents=[keys]
animbuttonGraphic=[keys]
animbuttonCaption=[strings]
ThumbnailEffect=[int32] 2 # 0 - dropshadow, 1 no dropshadow, 2 skew shadow.
ThumbnailShadowSkew=[vector2] (-0.4, -0.5).
ThumbnailShadowWidening=[float] 0.1.
ThumbnailLowering=[float] 0.65.
ThumbnailImageScale=[float] 0.85.
babyJointSize=[float]
babyBoneLength=[float]
babyBoneSize=[float]
babyBoneThickness=[float]
babySpineSize=[float]
babySpineThickness=[float]
babyMouthSize=[float]
babyGrasperSize=[float]
babySenseSize=[float]
babyAttackSize=[float]
babyFlySize=[float]
babyWalkSize=[float]
babyDetailSize=[float]
babyMouthHandles=[float]
babyGrasperHandles=[float]
babySenseHandles=[float]
babyAttackHandles=[float]
babyFlyHandles=[float]
babyWalkHandles=[float]
babyDetailHandles=[float]
consequenceTraitName=[text]
consequenceTraitDescription=[text]
consequenceTraitIcon=[key]
consequenceTraitUnlocksSuperpowers=[keys]
consequenceTraitGame=[key] Which game does this trait belong to.
consequenceTraitColor=[colorRGB]
consequenceSuperPowerName=[text]
consequenceSuperPowerDescription=[text]
consequenceSuperPowerIcon=[key]
consequenceSuperPowerGame=[key]
consequenceSuperPowerType=[key]
modelBoundingRadius=[float] Overrides normal version from the associated mesh(es).
modelBoundingBox=[bbox] Overrides normal version from the associated mesh(es).
modelDefaultBoundingRadius=[float] Acts as a default, if there is no model.
modelDefaultBoundingBox=[bbox] Acts as a default, if there is no model.
modelOffset=[vector3]
modelScale=[float]
modelColor=[colorRGBA]
modelRotation=[vector3] Euler angles specified in degrees.
modelMeshLOD0=[key] High LOD mesh to use.
modelMeshLOD1=[key]
modelMeshLOD2=[key]
modelMeshLOD3=[key]
modelMeshLowRes=[key] Used in lowres mode.
modelMeshHull=[key] Physics hull for the editor.
modelMeshLODHi=[key] "LOD -1" super high-lod mesh.
modelMeshAnimSharing=[int32s] Information about how animation data can be shared.
modelMeshUseHavokMesh=[bool] Create a havok mesh in the editor?.
modelLODDistances=[floats]
modelHavokShape=[key] Shape used for CRG.
modelSprite0=[key] Id of a 4-view side sprite texture to be loaded.
modelSprite1=[key] Id of a top-view sprite texture to be loaded.
modelHACKStaticMesh=[int32] Best guess by baker as to which part of the output.
modelZCorpMinScale=[float][1.0] Minimum scale for printing in zcorp.
modelEffect=[keys] Effect to attach to model.
modelEffects=[keys] List of effects to attach to model.
modelEffectTransforms=[transforms] Corresponding effect transforms.
modelEffectSeed=[uint32] If present, seed to use for effects.
modelEffectRange=[float] If present and non-zero, effects are turned off outside this range.
modelEffectWorld=[keys] World to put the effect in.
modelEffectWorlds=[keys] World to put the effect in.
modelLightStrength=[floats] Light sizes.
modelLightColor=[vector3s] Light colors.
modelLightColour=[vector3s] Light colours.
modelLightSize=[floats] Light sizes.
modelLightOffset=[vector3s] Offsets relative to model.
modelLightStrengths=[floats] Light sizes.
modelLightColors=[vector3s] Light colors.
modelLightColours=[vector3s] Light colours.
modelLightSizes=[floats] Light sizes.
modelLightOffsets=[vector3s] Offsets relative to model.
modelBakeTextureSize=[int32] Stick this in editorModel prop to control diffuse map sizes.
modelBakeQuality=[int32] 0, 1, 2 for diffuse only, diffuse + bakeInfo, diffuse + bakeInfo + normalMap.
modelAmbientOcclusion=[bool] Bake with ambient occlusion? Pour some of that special sauce? hmm?.
modelBakeTextureDXT=[int32] 0 = no compression, 100-199 = DXT1, 300-399 = DXT3, 500-599 = DXT5.
modelBakeTextureDilate=[bool] On = dilate texture to avoid alpha blend issues (doubles mip cost).
modelBakeMeshBudget=[int32] Meshes to transform per frame.
modelQuantizeScales=[floats] Relative decimation rate.
modelQuantizeTypeTags=[int32s] 0..255 tag.
modelQuantizeBoneDir=[int32s] 8 = don't collapse bones, 4 = z, 2 = y, 1 = x: don't collapse differently signed normals in those axes.
modelLODFactor0=[float] Specific LOD factor to use for this model's LOD0 (highest LOD).
modelLODFactor1=[float] Specific LOD factor to use for this model's LOD1.
modelLODFactor2=[float] Specific LOD factor to use for this model's LOD2.
modelLODFactor3=[float] Specific LOD factor to use for this model's LOD3.
modelLODFlags0=[uint32] LOD flags for generating this model's LOD0.
modelLODFlags1=[uint32] LOD flags for generating this model's LOD1.
modelLODFlags2=[uint32] LOD flags for generating this model's LOD2.
modelLODFlags3=[uint32] LOD flags for generating this model's LOD3.
modelPaintDecalTexture=[key] Decal to place.
modelPaintDecalParams=[vector3] Params: (size, rotation, alpha).
modelPaintDecalColor=[colorRGB] (r, g, b).
modelPaintDecalAlpha=[float] A.
modelUsesDeadColor=[bool] True if the decal should be modulated with the dead color before being writtin into the terrain's color texture.
modelDeadColorAmount=[float] How much dead color to apply in the range [0..1].
modelStampTexture=[key] Height texture for terrain stamp.
modelStampParams=[vector3] Params: (size, rotation, intensity).
modelLevelParams=[vector3] Params for gaussian terrain levelling: (size, rotation, intensity).
modelLevelRange=[vector2] Range parameters.
modelLevelTexture=[key] Texture for terrain levelling.
modelLevelToWater=[bool] Level to water height plus a bit instead of current terrain height.
modelRelevel=[bool] Relevel when height field changes.
modelPreloads=[keys] List of models to preload, as per cIModelWorld::PreloadModels().
modelName=[string16] Name of original baked model.
modelUnderwaterAlways=[bool] True if the model should always be rendered into the underwater buffer.
modelUnderwaterNever=[bool] True if the model should never be rendered into the underwater buffer.
modelNoDepthTestUnderwater=[bool] True if the model should always render above the seabed in the underwater buffer.
CityPadTextureSize=[int32]
HorizonCullFactor=[float] For setting non-default horizon cull.
modelSound=[uint32] Sound to start when model is high LOD visible.
modelMaxWidth=[vector3] Maximum size for a category of model (buildings, vehicles, etc).
modelMinWidth=[vector3] Minimum size for a category of model (buildings, vehicles, etc).
modelOverrideFootprintRadius=[float] The 2d footprint radius you want to use.
modelFootprintVertices=[vector2s] Array of local space vertices to use for the 2D projected footprint.
modelOverrideBounds=[bool] If this is on, will set the override bounds flag on the model.
modelSymmetrySnapDelta=[float] The distance from the center at which a part is no longer symmetric.
modelReplaceSnapDelta=[float] The distance from the center at which a part snaps to replace another part.
modelSymmetryRotationSnapAngle=[float] The angle at which a part is no longer symmetric.
modelRigBlockType=[key] The type (door, eye, window, roof, etc.) of the block.
modelPinningType=[key][0xb6f87eb0] Sets the pinning type for the given model: PinningGeometry (default) or PinningPhysics.
modelForcePinningAgainstType=[key][0xb6f87eb0] Sets the pinning type for the given model: PinningGeometry (default) or PinningPhysics.
modelHasBallConnector=[bool][true] Whether model has a ball connector or not.
modelIsVertebra=[bool][true] Whether model has a ball connector or not.
modelIsPlantRoot=[bool][false] If a block is a root block for the flora editor.
modelHasSocketConnector=[bool][true] Whether model has a socket connector or not.
modelMinSocketConnectorOffset=[vector3] REQUIRED: minimum offset from origin for the socket, if non-animated bone set both of these to the same value.
modelMaxSocketConnectorOffset=[vector3] OPTIONAL for animated bones: maximim offset from origin for the socket, if non-animated bone set both of these to the same value.
modelOrientToSurfaces=[bool][true] Does dragging this object around make it pin to surfaces?.
modelUseDummyBlocks=[bool][true] Specifies whether a block should fill sockets with dummy blocks.
modelIsNullBlock=[bool][false] Flags a block as a null block (used as place holders on limbs).
modelUseHullForBBox=[bool][false] If true, will use the hull object for all bbox calculations.
modelOrientWhenSnapped=[bool][true]
modelBaseFile=[key] Optional file specifies a different prop file to be used for the base (-1) side.
modelSymmetricFile=[key] Optional file specifies a different prop file to be used when cloning for symmetry.
modelCenterFile=[key] Optional file specifies a different prop file to be used for blocks on the plane of symmetry.
modelRightFile=[key] Optional file specifies a different prop file to be used for right-handed blocks for symmetry.
modelLeftFile=[key] Optional file specifies a prop file to be used for left-handed blocks for symmetry.
modelPaletteGroup=[key] Key specifies palette group (movement, head, details, etc).
modelMinScale=[float][0.40] Minimum uniform scaling allowed in the editor.
modelMaxScale=[float][3.0] Maximum uniform scaling allowed in the editor.
modelMinBallConnectorScale=[float][0.40] Minimum ball connector scaling allowed in the editor.
modelMaxBallConnectorScale=[float][3.0] Maximum ball connector scaling allowed in the editor.
modelMinMuscleFile=[key] Path to min muscle prop file.
modelMaxMuscleFile=[key] Path to max muscle prop file.
modelUseSkin=[bool]
modelHasRotationRingHandle=[bool] Does it have a rotation ring handle for controlling object roll.
modelHasRotationBallHandle=[bool] Does it have a rotation ball handle for controlling object pitch, yaw.
modelRotationBallHandleOffset=[vector3] Offset from object origin to place the rotation ball handle.
modelRemainUpright=[bool] Forces the block to remain upright while pinning.
modelMoveBottomEdgeToSurface=[bool] Forces the bottom of the block to align with the surface of the object it's pinned to.
modelStayAboveGround=[bool] Forces the block to remain above the ground or whatever is below it.
modelPointForward=[bool] Forces the block to point forward while pinning.
modelPrice=[int32] How much this block sells for in the editor, also makes block appear "tuned" if set.
modelPaletteRotation=[vector3]
modelAlternativeStaticModel=[key] Key of alternate model to show spinning in the palette (and for thumbnail capture).
modelAlternativeStaticEffectModel=[key] Key of alternate model to show in the place of an animated effect in render windows without effects.
modelStaticEffectKeys=[keys] Array of keys for the effects that have alternative static models.
modelRunTimeBoneCount=[int32] Number of runtime bones this model has.
modelTool=[key] ID of tool associated with model, used to associate rigblocks with in-game tools.
modelTools=[keys] List of tools associated with model.
modelToolTransforms=[transforms] Corresponding list of transforms associated with tool list.
modelToolAnimGroups=[int32s] Corresponding list of animation groups for that tool.
modelWindowTransforms=[transforms] List of transforms associated with windows on buildings.
modelDoorTransforms=[transforms] List of transforms associated with doors on buildings.
modelSoundScale=[string8] The sound a model should play when it gets scaled.
modelSoundRotation=[string8] The sound a model should play when it gets rotated.
modelSoundMorphX=[string8] The sound a model should make when its X morph handle is pulled.
modelSoundMorphY=[string8] The sound a model should make when its Y morph handle is pulled.
modelSoundMorphZ=[string8] The sound a model should make when its Z morph handle is pulled.
modelHideDeformHandles=[bool][false] Forces the deform handles of a block to be hidden.
modelHideRotationHandles=[bool][false] Forces the rotation handles of a block to be hidden.
modelSnapDownTo=[keys] Array of block types for the given block to snap to vertically.
modelStayAbove=[keys] Array of block types for the given block to snap to vertically.
modelAlignLateralWith=[keys] Array of block types for the given block to align laterally with.
modelAlignHeightWith=[keys] Array of block types for the given block to align height with.
modelAlignXYWith=[keys] Array of block types for the given block to align XY with.
modelSnapToParentCenter=[bool][false] Snap block to the center of the parent.
modelSnapToParentSnapVectors=[bool][false] Snap block to the lateral center of the parent.
modelSnapToParentTypes=[keys] Parent types to apply snap to.
modelTypesToInteractWith=[keys] Block types that this block can pin/stack on.
modelTypesNotToInteractWith=[keys] Block types that this block should not pin/stack on.
modelSnapToCenterOfEditor=[bool][false] Snap the block to the center of the editor.
modelTypesToSnapReplace=[keys] Block types that this block can snap replace.
modelCellAllowOnTopOfBody=[bool][false] Allow the block to go on top of the body.
modelPreferToBeOnPlaneOfSymmetry=[bool][false] Makes the model stick to the plane of symmetry more (it'll come in on the plane from the palette, and stuff).
modelCanBeParentless=[bool][false] Allows the block to be left on the ground or in the air without a parent.
modelBottomEdgeDistanceAdjustment=[float] A constant amount to move a block using modelMoveBottomEdgeToSurface out from the surface.
modelBoundsCheckOnlyForDelete=[bool][false] Tells the editors to only check the bounds when marking this block invalid.
modelIgnoreForStatsCalculation=[bool][false] Informs stats calculator to ignore this block.
modelActLikeFinOnPlaneOfSymmetry=[bool][false] Makes a part act like a fin on the plane of symmetry (with positive X facing forward).
modelUseHullForPicking=[bool][false] Uses the hull instead of the visibly geometry for picking against (mouse cursor picking, not manipulator picking).
modelComplexityScore=[int32] Complexity score for the rig block based on effects, bones, and limb segments.
modelSwatchRotation=[vector3] # euler angles specified in degrees.
modelDefaultChannelsBBox=[bbox] Bounding box for block.
modelWarpCursorToPinPoint=[bool][false] Moves the cursor to the pinning point on a block as the player manipulates it.
modelActsLikeGrasper=[bool][false]
modelActsLikeFoot=[bool][false]
modelUseInBaseCollisionCalc=[bool][true]
modelAllowAsymmetricalRotationOnPlaneOfSymmetry=[bool][false] If true then the when the model is rotated off the plane of symmetry its symmetric twin remains invisible.
modelNumberOfSnapAxes=[int32] Defines the number of axis to snap to (4 would be the cardinal axes, 0 would be a circle with no snapping).
modelCircularTopAlignment=[bool][false] Makes blocks aligning on the top of this block align their orientation circularly (instead of angularly).
modelRemainUprightOnTop=[bool][false] Remain upright, but only when on top of blocks.
modelSnapAxisPickHeightPercent=[float][0.5] The height up the structure to base the picks for the alignment (0 is bottom, 1 is top).
modelSnapAxisRotation=[float][0.0] Extra rotation to offset the snap axes by.
modelSnapAxes=[floats] Overrides modelNumberOfSnapAxes with had set axes.
modelDefaultMouseOffset=[vector3] Mouse offset to use when pulling block out of pallet.
modelDefaultScale=[float][1.0] The scale the block is set to in the palette.
modelIsAllowedOutOfBounds=[bool] Lets the model live outside the bounds.
modelToolOffset=[vector3] Offset from object origin for the tool placement hardpoint.
modelEditorInitialRotation=[vector3] Initial rotation coming off the palette, euler angles specified in degrees.
modelCreatureEffectOffset=[vector3] Effect attachment point offset for creature rigblocks.
modelCreatureEffectOffsetFixY=[float] 0-1 scale from min to max Y coordinates of deformed bounding box.
modelCreatureEffectOffsetFixZ=[float] 0-1 scale from min to max Z coordinates of deformed bounding box.
modelDoNotFlipBasedOnSurfaceNormalOnPlaneOfSymmetry=[bool][false] Makes parts not flip forward/backward on plane of symmetry when facing slightly backward.
modelThumbnailZoom=[float] Thumbnail zoom tweak, specify for each rigblock so automated thumbnail capture looks best.
modelJigglable=[bool][true] If animated procedurally, allow jiggles on this part, otherwise keep rigid to parent.
modelExtraJiggly=[bool][false] Make this part extra jiggly, if it is jigglable.
modelAllowTopBehaviors=[bool][false] Use to determine if a block should allow blocks to treat its top specially.
modelCellApplyBehaviorToUserRotation=[bool] Used to tell cell manipulators to apply orientation changes to the user orientation.
modelCellStalkEye=[bool] Property that tells the app it's a cell stalk eye.
creatureExtentsContributionScale=[float] Scale factor applied to block bounds before adding that blocks extents to the creature's extents.  used in determining how "big" a creature is.
modelShouldCheckParentlessForValidation=[bool][true] Special property to turn parentless checking off for validation.
modelStartAsymmetric=[bool] Makes a rigblock start out asymmetric.
modelRotationRingXAxis=[key]
modelRotationRingXAxisRotation=[float][0.0]
modelRotationRingXAxisOffset=[float][0.0]
modelRotationRingXAxisScale=[float][1.0]
modelRotationRingXAxisActLikeBall=[bool][false]
modelRotationRingYAxis=[key]
modelRotationRingYAxisRotation=[float][0.0]
modelRotationRingYAxisOffset=[float][0.0]
modelRotationRingYAxisScale=[float][1.0]
modelRotationRingYAxisActLikeBall=[bool][false]
modelRotationRingZAxis=[key]
modelRotationRingZAxisRotation=[float][0.0]
modelRotationRingZAxisOffset=[float][0.0]
modelRotationRingZAxisScale=[float][1.0]
modelRotationRingZAxisActLikeBall=[bool][false]
modelRotationRingXAxisIsHidden=[bool][false]
modelRotationRingYAxisIsHidden=[bool][false]
modelRotationRingZAxisIsHidden=[bool][false]
modelRotationBallHandleIsHidden=[bool][false]
modelRotationRingXAxisAllowHidden=[bool][true]
modelRotationRingYAxisAllowHidden=[bool][true]
modelRotationRingZAxisAllowHidden=[bool][true]
modelRotationBallHandleAllowHidden=[bool][true]
modelShowoffAnimation=[key] The animation to be played when showing off the part.
modelShowoffEffect=[key] The effect to be played when showing off the part.
modelHandleKeys=[keys] Array defining handle order for properties.
modelSoundParameters=[keys] Array defining handle order for properties.
modelAnimationSoundLinks=[keys] Array mapping animation keys to sounds.
modelHandleStretchSounds=[string8s] The data for the sound patch controlled by this handle.
modelHandleLinkedHandlesTemplate=[keys] Template default for the symmetric handle to link this handle to.
modelHandlePlacementTypesTemplate=[keys] Template default for the placement type for this handle.
modelHandleLinkedHandles=[keys] Individual overide for the symmetric handle to link this handle to.
modelHandlePlacementTypes=[keys] Individual overide for the placement type for this handle.
modelHandleIsHidden=[bools] Array defining which handles are hidden. if empty, all handles are not hidden.
modelMainAbilityList=[keys] Key list of abilities to show when item is unlocked.
modelLockedAbilityList=[keys] Key list of abilities to show when item locked.
modelCreateNewAbilityList=[keys] Key list of abilites for create new case in planners.
modelSellBackFactor=[float][1.0] Part sell back value multiplier for blocks  # DJM - NO LONGER SUPPORTED!.
modelBlockAssemblyFile=[key] File name for full assemblies. points to a .crt file.
modelBlockAssemblyBlockCount=[int32] Number of blocks contained in an assembly's .crt file.
modelDetailThreshold=[float] Threshold for baking -- rigblocks below this size are ignored.
modelRuntimeEffect=[keys] Effect to attach to model at runtime.
modelRuntimeEffects=[keys] Effects to attach to model at runtime.
modelNoAmbientOcclusion=[bool] For minerals only, should this part cast and receive AO.
modelCapabilityToPropFileMap=[keys] Maps capabilities to prop files: <capability id>!<propfile id>.
modelCapabilityAnimKeys=[keys] Array of anim keys a given capability has.
modelCapabilityDefaultAnimValues=[floats] Array of default anim values for a capability.
modelCapabilityDefaultAnimWeights=[floats] Array of default anim weights for a capability.
modelCapabilityPerch=[int32][0]
modelCapabilitySpine=[int32][1]
modelCapabilityLimb=[int32][1]
modelCapabilityNoStretch=[int32][1] Pseudo-cap to disallow ik solver stretching.
modelCapabilityGrasper=[int32][1]
modelCapabilityEar=[int32][1]
modelCapabilityEye=[int32][1]
modelCapabilityMouth=[int32][1]
modelCapabilityFoot=[int32][1]
modelCapabilitySlash=[int32][1]
modelCapabilityPoke=[int32][1]
modelCapabilityBash=[int32][1]
modelCapabilityFruit=[int32][1]
modelCapabilityFin=[int32][1]
modelCapabilityLiquid=[int32][1]
modelCapabilityDayVision=[int32][0]
modelCapabilityNightVision=[int32][0]
modelCapabilityCarnivorous=[int32][0]
modelCapabilityHerbivorous=[int32][0]
modelCapabilityDetail=[int32][0]
modelCapabilitySocial=[int32][0]
modelCapabilityHealth=[int32][0]
modelCapabilityStealth=[int32][0]
modelCapabilityCuteness=[int32][0]
modelCapabilityJump=[int32][0]
modelCapabilityBlock=[int32][0]
modelCapabilityCall=[int32][0]
modelCapabilityCreatureSpeed=[int32][0]
modelCapabilitySprint=[int32][0]
modelCapabilityWing=[int32][0]
modelCapabilitySense=[int32][0]
modelCapabilityMean=[int32][0]
modelCapabilityBite=[int32][0]
modelCapabilityCharge=[int32][0]
modelCapabilitySpit=[int32][0]
modelCapabilityStrike=[int32][0]
modelCapabilityDance=[int32][0]
modelCapabilityVocalize=[int32][0]
modelCapabilityFlaunt=[int32][0]
modelCapabilityPosture=[int32][0]
modelCapabilityGlide=[int32][0]
modelCapabilityTribeAttack=[int32][0]
modelCapabilityTribeSocial=[int32][0]
modelCapabilityTribeArmor=[int32][0]
modelCapabilityTribeGather=[int32][0]
modelCapabilityTribeFishing=[int32][0]
modelCapabilityEnergyRegen=[int32][0]
modelCapabilityAdventurerMissile=[vector3]
modelCapabilityAdventurerEnergyBlade=[vector3]
modelCapabilityAdventurerShieldGenerator=[int32][0]
modelCapabilityAdventurerHoloCharm=[vector3]
modelCapabilityAdventurerLightningSword=[vector3]
modelCapabilityAdventurerPulseGun=[vector3]
modelCapabilityAdventurerBattleArmor=[int32]
modelCapabilityAdventurerPoweredArmor=[int32]
modelCapabilityAdventurerAbsorptionShield=[int32]
modelCapabilityAdventurerHealthRegen=[int32]
modelCapabilityAdventurerHealthBonus=[int32]
modelCapabilityAdventurerSummonSwarm=[int32]
modelCapabilityAdventurerMindMeld=[int32]
modelCapabilityAdventurerPoisonBlade=[int32]
modelCapabilityAdventurerFreeze=[int32]
modelCapabilityAdventurerGracefulWaltz=[int32]
modelCapabilityAdventurerHarmoniousSong=[int32]
modelCapabilityAdventurerRoyalCharm=[int32]
modelCapabilityAdventurerRadiantPose=[int32]
modelCapabilityAdventurerSprintBurst=[int32]
modelCapabilityAdventurerHover=[int32]
modelCapabilityAdventurerStealthField=[int32]
modelCapabilityAdventurerJumpJet=[int32]
modelCapabilityAdventurerInspiringSong=[vector3]
modelCapabilityAdventurerStunningDance=[vector3]
modelCapabilityAdventurerConfettiPose=[vector3]
modelCapabilityAdventurerEnergyStorage=[int32]
modelAdventureCollidesWithCamera=[bool][false]
modelAdventureCameraAlphas=[bool][false]
eyeOverlayEffect=[string8]
itemUnlockLevel=[int32][1]
itemUnlockFindPercentage=[float][1.0]
itemUnlockEffect=[key]
associatedPartUnlocks=[keys] 1st array of associated blocks that will be unlocked.
associatedPartUnlocks2=[keys] 2nd array of associated blocks that will be unlocked.
numPartsToRandomlyUnlock=[int32][0] If set to > 0, the num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks=[keys] 1st array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock2=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks2=[keys] 2nd array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock3=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks3=[keys] 3rd array array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock4=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks4=[keys] 4th array array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock5=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks5=[keys] 5th array array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock6=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks6=[keys] 6th array array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock7=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks7=[keys] 7th array array of associated blocks that can be randomly unlocked.
numPartsToRandomlyUnlock8=[int32][0] Num (up to total num in rand part array) will be selected for unlock.
associatedRandomPartUnlocks8=[keys] 8th array array of associated blocks that can be randomly unlocked.
itemUnlockableIcon=[key] The image to put on the unlock symbol.
itemUnlockableLayout=[key] The layout that is the unlock symbol.
itemNotUnlockableIcon=[key] The image to put on the not-unlockable symbol.
itemNotUnlockableLayout=[key] The layout that is the not-unlockable symbol.
itemEnabledLockedRollover=[bool] Enables rollover on a locked item.
itemAlreadyOwnItIcon=[key] Icon id for the "already own it" icon overlay.
modelCapabilitySpeed=[int32][0]
modelCapabilityDefense=[int32][0]
modelCapabilityPower=[int32][0]
modelCapabilityMilitaryPower=[int32][0]
modelCapabilityReligiousPower=[int32][0]
modelCapabilityEconomicPower=[int32][0]
modelCapabilityCellFilter=[int32][0]
modelCapabilityCellSpike=[int32][0]
modelCapabilityCellJet=[int32][0]
modelCapabilityCellFlagella=[int32][0]
modelCapabilityCellJaw=[int32][0]
modelCapabilityCellElectric=[int32][0]
modelCapabilityCellPoison=[int32][0]
modelCapabilityCellCilia=[int32][0]
modelCapabilityCellPoker=[int32][0]
modelCapabilityCellEye=[int32][0]
modelCapabilityCellMouth=[int32][0]
modelCapabilityCellMovement=[int32][0]
modelCapabilityCellWeapon=[int32][0]
modelCapabilityCellWeaponCharging=[int32][0]
modelCapabilityCellGameSpeed=[int32][0]
modelAimPoints=[vector3s]
modelVehicleStatSpeed=[float][0.0]
modelVehicleStatPower=[float][0.0]
modelVehicleStatDefense=[float][0.0]
modelLocomotionHint=[uint32][0]
modelBakeRubble=[bool][false]
modelRubbleType=[int32][0]
modelBakeComplete=[bool][false]
modelBakeHighLODComplete=[bool][false]
modelBakeStatsBatches=[int32][0]
modelBakeStatsOrigBatches=[int32][0]
modelPrebakedAssembledContent=[bool][false]
modelCreatureStaticPoseAnim=[uint32s]
modelCreatureStaticPoseTime=[floats]
modelCreatureStaticPoseWeight=[floats]
modelBakeSprites=[bool][false] Triggers extra capture of top-down and cross-tree sprites.
modelFloraType=[int32][0] Flora variant type: 1/2/3 = small/medium/large.
modelFloraCutawayHeight=[float][2.8] Height for flora cutaway plane.
modelBakeLevel=[int32][0] 0 = full runtime block, 1 = single bone static, 2 = baked into parent.
modelCanUseIdentityColor=[bool][true]
muscleInterpolateDistance=[float][0.001]
muscleGroups=[keys] List of muscle files.
muscleRadii=[floats] Size of each metaball.
muscleOffsets=[vector3s] Offset from percentage computed position.
musclePercentages=[floats] Percentage along the muscle (0 is internal end, 1 is external end).
modelWindowEmissiveTexture=[key] Artist assigned texture to control night lights in building windows.
modelAlwaysShowSymmetry=[bool][false] Always show symmetric part, even when on plane of symmetry.
modelBlockUpgradesTo=[key] The block this block changes to, used for cell parts to creature game.
blockName=[text] Localization file and hash for the rig block name.
iconLarge=[key] Icon used for part unlock ui (large version).
iconSmall=[key] Icon used for part unlock ui (small version).
spineHavokMetricsEnabled=[bool]
spineHavokWorldSimType=[int32]
spineHavokWorldSolverTau=[float]
spineHavokWorldSolverDamp=[float]
spineHavokWorldNumSolverIters=[int32]
spineUseFewerAxialConstraints=[bool]
spineFrictionConstant=[float]
spineVertebraAllowedPenetrationDepth=[float]
spineVertebraMaxMassProportion=[float]
spineVertebraInertiaScale=[float]
spineVertebraHavokPaddingFactor=[float]
spineMinCollisionDeadZoneDistance=[int32]
spineChainTau=[float]
spineChainDamping=[float]
spineHingeAngularLimitsTauFactor=[float]
spineHingeMinAngleLimit=[float]
spineHingeMaxAngleLimit=[float]
spineHingeMinFlexFactor=[float]
spineHingeMaxFlexFactor=[float]
spineVertebraeScaleOfLeastFlexibility=[float]
spineNewVertebraRelativeScale=[float]
spineVelocityLimit=[float]
spineErrorRecoveryVelocityExponential=[float]
spineDampingMaxInfluenceDistance=[int32]
spineLooseLinearDamping=[float]
spineLooseAngularDamping=[float]
spineTightLinearDamping=[float]
spineTightAngularDamping=[float]
spineMouseSpringDamping=[float]
spineMouseSpringElasticity=[float]
spineMouseMaxForceFactor=[float]
cameraType=[uint32]
cameraName=[string16]
cameraBackgroundColor=[colorRGBA]
cameraMomentumScale=[float]
cameraZoomScale=[float]
cameraWheelZoomScale=[float] Separate scale for wheel zoom; if absent, uses cameraZoomScale.
cameraRotateScale=[float]
cameraTranslateScale=[float]
cameraPitchScale=[float]
cameraInitialZoom=[float]
cameraInitialPitch=[float]
cameraInitialHeading=[float]
cameraInitialOffsetX=[float]
cameraInitialOffsetY=[float]
cameraInitialTarget=[float]
cameraNearClip=[float]
cameraFarClip=[float]
cameraMinPitch=[float][0]
cameraMaxPitch=[float][90]
cameraExponential=[bool][false]
cameraExpPanScale=[float][1]
cameraPanSubjectPos=[bool][false] If true, pan the subject position instead of the screen offset.
cameraInitialFOV=[float][1]
cameraMaterialLODs=[vector4][(10000, 10000, 10000, 10000)]
cameraMinZoomDistance=[float][10]
cameraMaxZoomDistance=[float][200]
defaultMinChange=[float][0.05]
keyboardRotationSpeed=[float][1.0]
keyboardRotationLerpSteps=[uint32][20]
keyboardRotationLerpMinChange=[float][0.05]
keyboardTranslationSpeed=[float][0.0]
keyboardTranslationLerpSteps=[uint32][20]
keyboardTranslationLerpMinChange=[float][0.05]
keyboardZoomSpeed=[float][5.0]
keyboardZoomLerpSteps=[uint32][20]
keyboardZoomLerpMinChange=[float][0.05]
keyboardZoomScale=[float][1.0]
subjectTrackingDeadZoneMagnitude=[float][1.0]
rotationPitchRatioMax=[float][1.0]
cameraPitchScaling=[float][0.005]
continuousRotationScaling=[float][0.003]
maxRotationDelta=[float][3.0]
smoothCamZoomLevels=[floats][68.0 49.0 28.0 18.3 12.0]
smoothCamFOVLevels=[floats][32.2 28.6 23.0 22.3 21.8]
smoothCamNearClipLevels=[floats][1.0 1.0 1.0 1.0 1.0]
smoothCamFarClipLevels=[floats][500.0 500.0 500.0 500.0 500.0]
smoothCamMinPitchLevels=[floats][30.0 26.0 22.5 19.0 15.0]
smoothCamMaxPitchLevels=[floats][40.0 45.0 50.0 55.0 60.0]
smoothCamOrientations=[floats][10.0 55.0 100.0 145.0 190.0 235.0 280.0 325.0]
skylight=[colorRGB]
skylightStrength=[float] From 0.0 to 1.0, defines the intensity of the skylight. If this property is used then the skylight is enabled.
lightSunDir=[vector3]
lightSunColor=[colorRGB]
lightSunStrength=[float]
lightSkyDir=[vector3]
lightSkyColor=[colorRGB]
lightSkyStrength=[float]
lightFill1Dir=[vector3]
lightFill1Color=[colorRGB]
lightFill1Strength=[float]
lightFill2Dir=[vector3]
lightFill2Color=[colorRGB]
lightFill2Strength=[float]
shCoeffs=[colorRGBs] Array of raw sh coeffs.
shCoeffsScale=[colorRGB] Scale by (r, g, b).
shCoeffsZRM=[vector3] (zrotate, reflectInZ, multiply).
envHemiMap=[key] Devebec-style light probe image. Points to a .32bitImage resource
envHemiMapScale=[colorRGB] Scale by (r, g, b).
envHemiMapZRM=[vector3] (zrotate, reflectInZ, multiply).
envCubeMap=[key] HDR cubemap.
envCubeMapScale=[colorRGB] Scale by (r, g, b).
envCubeMapZRM=[vector3] (zrotate, reflectInZ, multiply).
atmosphere=[vector4s] List of (r, g, b, phase).
atmosphereScale=[colorRGB] Scale by (r, g, b).
atmosphereZRM=[vector3] (zrotate, reflectInZ, multiply).
shHemiLight=[vector3s] Upper hemisphere light, optionally lower hemisphere light.
shHemiLightScale=[colorRGB] Scale by (r, g, b).
shHemiLightZRM=[vector3] (zrotate, reflectInZ, multiply).
shAreaLights=[vector4s] List of (r, g, b, intensity) (dx, dy, dz, sharpness).
shAreaLightsScale=[colorRGB] Scale by (r, g, b).
shAreaLightsZRM=[vector3] (zrotate, reflectInZ, multiply).
diffBounce=[colorRGB]
specBounce=[colorRGB]
exposure=[float]
lightingCel=[float]
lightLargeModelRadius=[vector2] Bounding radius size beyond which we disable local lighting, or, (startR, endR), range over which we reduce local lighting to 0.
planetAtmosphere=[float] Global planet lighting multiplier -- 0 = off.
planetAtmosphereUpdateTheta=[float] How much sun dir has to change before a recalc.
planetAtmosphereOnly=[float] Multiplier on just the lighting contribution from the sky scattering.
planetBounceDiff=[float] How much 'diffuse' ground bounce we add in (also affected by terrain colour).
planetBounceSpec=[float] How much 'glossy' ground bounce we add in.
planetSunBoost=[vector4] Boost to sky scattering from the sun direction.
planetTransitionBoost=[vector4] Boost to sky scattering during dawn/dusk.
planetNightBoost=[vector4] Controls a directly-overhead 'moon light' at night.
planetDayStart=[float]
planetDayRange=[float]
planetNightStart=[float]
planetNightRange=[float]
planetCelRange=[vector2]
planetSaturation=[float]
planetFogStrength=[float]
terrainLightEnabled=[bool] Do lights automatically spawn terrain light decals?.
terrainLightStrength=[float] Global multiplier.
terrainLightSize=[float] Global multiplier.
terrainLightHeightDropoff=[float] 0 = none, otherwise multiplier.
shadowCameraRange=[vector2]
shadowScaleCurve=[floats]
shadowStrengthCurve=[floats]
shadowCasterDistance=[floats]
shadowDepthRange=[floats]
shadowNestScaleCurve=[floats]
shadowNestFactor=[floats]
shadowNestCameraRange=[vector2]
shadowAwayBias=[float] How much to push the shadow frustum away from us when viewing horizontally.
shadowHorizonFade=[vector2]
shadowNightLightStart=[float]
shadowTargetSnap=[float]
shadowDirSnap=[float]
shadowDirLerp=[float]
shadowScaleSnap=[float]
cameraSpaceLighting=[bool]
pointLightPos=[vector3] The position of the point light. If this property is used then the point light is enabled.
pointLightColor=[vector3] The color of the light emitted by the point light.
pointLightStrength=[float][1.0] The strength of the point light.
pointLightRadius=[float][10.0]
planetHeightMapRes=[uint32]
planetControlMapRes=[uint32]
kHighestTesselation=[uint32]
kHighestFaceQuadTesselation=[uint32]
kHighestAtmosphereFaceQuadTesselation=[uint32]
kNumLODs=[uint32]
kNumFaceLODs=[uint32]
kQuadDimPerFace=[uint32]
kFaceQuadLODDistance=[float]
kLODDistanceNormalizer=[float]
kLODTable=[floats]
kFaceLODTable=[floats]
kAtmosphereLODTable=[floats]
kUseLayer1=[bool]
kUseLayer2=[bool]
kUseAtmosphere=[bool]
kUseLowLODShaders=[bool]
kUseCamGeometricDistToQuad=[bool]
kOverrideGonzagoPlanetConfig=[bool]
kNumHeightMipMaps=[uint32]
kPlanetElevationTable=[floats]
kMinMaxAlt=[float]
kMidMaxAlt=[float]
kMaxMaxAlt=[float]
kMinCliffGradient=[float]
kMaxCliffGradient=[float]
kUseWaterRefraction=[bool]
kWaterRefractionStaticTexture=[bool]
kWaterRefractionMapSize=[uint32]
kSynthesizeAboveTexture=[bool]
kSynthesizeAboveTextureRes=[uint32]
kHeightmapTextureIsFloat=[bool]
kEffectAtmosphereLowRange=[vector2]
kEffectAtmosphereMedRange=[vector2]
kEffectAtmosphereHighRange=[vector2]
kEffectTemperatureLowRange=[vector2]
kEffectTemperatureMedRange=[vector2]
kEffectTemperatureHighRange=[vector2]
defaultTerrainEditorFlora=[keys]
kLODChunkRes=[uint32]
kLODMinProjSize=[float]
kLODMaxProjSize=[float]
kLODSeabedMinProjSize=[float]
kLODSeabedMaxProjSize=[float]
kNightLighting=[float]
kNightLightingMax=[float]
kIceNightLightingScale=[float]
kAtmLuminenceRange=[vector2]
kAtmThicknessByAtmosphereScore=[vector2s]
kBelowTexTiling=[float]
kWaterTexTiling=[float]
kCliffTexTiling=[float]
kFogByElevCreature=[vector3s]
kFogByElevTribe=[vector3s]
kFogByElevCiv=[vector3s]
kFogByElevSpace=[vector3s]
kFogDistBiasByTimeOfDay=[vector2s]
kFogDistBiasByAtmosphereScore=[vector3s]
kFogBiasByElev=[vector2s]
kFogMinDensity=[float]
kFogMaxDensity=[float]
kFogMinDistance=[float]
kFogNightScale=[float]
kAboveDetailHighTiling=[float]
kAboveDetailLowTiling=[float]
kMungeDebugMaps=[bool]
kMungeHeightMapScale=[float]
kMungeWindMapScale=[float]
kMungeTempMapScale=[float]
kMungeLatMapScale=[float]
kMungeAlphaNoiseStrength=[float]
kAboveColorRampSeaScaleBaseVal=[float]
kAboveColorRampSeaScaleScaleVal=[float]
kWaterPCAAnimationFPS=[float]
kLavaPCAAnimationFPS=[float]
kWaterFogMaxDist=[float]
kWaterFogMaxDepth=[float]
kNightLightingTint=[vector4]
kNightLumBlend=[float]
kNightDotOffset=[float]
kAmbientLevel=[float]
kDuskDawnStartEnd=[vector4]
kNightLightColor=[vector3]
kDuskLightColor=[vector3]
kDayLightColor=[vector3]
kNightShadowColor=[vector3]
kDuskShadowColor=[vector3]
kDayShadowColor=[vector3]
kParticleMaxDistance=[float]
kSkyScaleDist=[float]
kSkyBrightness=[float]
kTerrainScaleDist=[float]
kTerrainBrightness=[float]
kP1ScaleDensity=[float]
kP2ScaleDensity=[float]
kP3ScaleDensity=[float]
kP1Phase=[vector3]
kP1Brightness=[vector3]
kP2Phase=[vector3]
kP2Brightness=[vector3]
kP3Phase=[vector3]
kP3Brightness=[vector3]
terrainUserColorRockSaturationFactor=[float]
terrainUserColorBeachSaturationFactor=[float]
terrainUserColorCliffSaturationFactor=[float]
terrainUserColorWaterSaturationFactor=[float]
terrainUserColorAtmosphereSaturationFactor=[float]
terrainUserColorElevationMapSaturationFactor=[float]
terrainUserColorRockValueFactor=[float]
terrainUserColorBeachValueFactor=[float]
terrainUserColorCliffValueFactor=[float]
terrainUserColorWaterValueFactor=[float]
terrainUserColorAtmosphereValueFactor=[float]
terrainUserColorElevationMapValueFactor=[float]
terrainUserColorAutoGradientThreshold=[float]
terrainVersion=[uint32] Terrain version number.
terrainScriptModels=[keys] Terrain models for a particular script.
terrainScriptModelTransforms=[transforms] Transforms for the above.
terrainScriptModelIsResource=[bool] Whether model is a resource/honeypot.
terrainScriptModelType=[uint32] Type for the model, so game code can do cool stuff.
terrainScriptWTALevels=[vector3] Initial water height, temperature, atmosphere.
terrainScriptERLLevels=[vector3] Initial time, rotation, lock status (adv creator terrain ed).
terrainScriptPlanetInfo=[vector3] Terrain/dead/atmosphere types.
terrainScriptPlanetPlayerInfo=[vector3] The player modified info.
terrainScriptPlanetInfoSelect=[vector3s] List of terrain/dead/atmosphere types, one will be randomly selected for the terrainScriptPlanetInfo.
terrainAtmosphereType=[uint32] Atmosphere colour type, 0-16.
terrainWaterType=[uint32] Water colour type, 0-16.
terrainOverrideMode=[bool]
terrainCliffColor=[vector3] Terrain cliff color.
terrainBeachColor=[vector3] Terrain beach color.
terrainWaterColor=[vector3] Water colour.
terrainAtmosphereColor=[vector3] Atmosphere colour.
terrainElevationMapPercents=[floats] Terrain elevation map percentages, part of the gradient data.
terrainElevationMapColors=[vector3s] Terrain elevation map colors, part of the gradient data.
terrainHazardsEnable=[bool]
terrainWaveFreqAmp=[vector2] (frequency, amplitude) for water waves.
terrainPlayerModCount=[uint32] Count to enable consistency checks with cached planets.
terrainLegacyScript=[bool] If this is set, this script will not be selected for any new planet definitions.
terrainScriptAmbientEffects=[keys] Effects to run on this planet.
terrainScriptAmbientSoundEffects=[keys] List of sound effect keys to be played on planet entry for ambient sound.
terrainScriptAmbientBrushes=[keys] List of paint/height brushes to apply after terrain generation for flora etc.
terrainScriptAmbientEffectSelect1=[keys] List of ambient effects to randomly select one effect from.
terrainScriptAmbientEffectSelect2=[keys] List of ambient effects to randomly select one effect from.
terrainScriptAmbientEffectSelect3=[keys] List of ambient effects to randomly select one effect from.
terrainScriptAmbientEffectSelect4=[keys] List of ambient effects to randomly select one effect from.
terrainScriptEffectTimes=[floats] Times for above.
terrainScriptEffectSeeds=[uint32s]
terrainScriptEffectIntensities=[floats]
terrainScriptEffectWaterLevels=[floats] Water level at brush creation (adv creator terrain ed).
terrainPlayerEffects=[keys] Terrain modification effects from the player.
terrainPlayerEffectTransforms=[transforms]
terrainPlayerEffectTimes=[floats]
terrainPlayerEffectSeeds=[uint32s]
terrainPlayerEffectIntensities=[floats]
terrainPlayerGroundEffects=[key]
terrainModelFootprints=[keys] Game-model-attached footprints, e.g. cities, huts.
terrainModelFootprintTransforms=[transforms] Transforms for the above.
terrainThemeCliff=[key] Textures for live/dead planet.
terrainThemeLayer2=[key]
terrainThemeAboveDetail1=[key]
terrainThemeAboveDetail2=[key]
terrainThemeAboveDetailNoise=[key]
terrainThemeBelow=[key]
terrainThemeBeach=[key]
terrainThemeDetail1Low=[colorRGB]
terrainThemeDetail1Mid=[colorRGB]
terrainThemeDetail1High=[colorRGB]
terrainThemeDetail2Low=[colorRGB]
terrainThemeDetail2Mid=[colorRGB]
terrainThemeDetail2High=[colorRGB]
terrainThemeLightingState=[key]
terrainThemeSunColor=[colorRGB]
terrainThemeNightColor=[colorRGB]
terrainScriptSource=[key]
terrainAllowUnderwaterModels=[bool]
visualStyle=[key] A custom screen effect for the planet chosen in EP1 by player in edit mode.
ModelToLoad=[string]
MVHandleSize=[float]
gain=[float]
pan=[float]
pitch=[float]
mindistance=[float]
maxdistance=[float]
rolloff=[float]
streambuffersize=[uint32]
streambufferreadsize=[uint32]
is3d=[bool]
islooped=[bool]
samples=[keys]
fadein=[float]
fadeout=[float]
priority=[float]
autoduck=[bool]
duckcurve=[floats]
ducks=[bool]
attenuation=[floats]
primitives=[strings]
soundtype=[key]
enable=[float]
listeneroffset=[vector3]
startdelay=[float]
showmindistance=[bool]
footcurvenumlegstogain=[floats]
footcurveveltogain=[floats]
footcurvelentohipass=[floats]
footcurvemasstopitch=[floats]
footcurvefootsizetopitch=[floats]
footcurvemasstohipass=[floats]
footcurvemasstogain=[floats]
footcurvefootsizetogain=[floats]
footcurvefootsizetohipass=[floats]
atmospheric=[floats]
polyphony=[uint32]
streampoolguid=[key]
probability=[float]
dspchain=[strings]
syms=[strings]
dacoutputmode=[string]
ignorecontext=[bool]
voicetemplate=[key]
wetlevel=[float]
reverbtime=[float]
reverbspacesize=[float]
timeinvariantpitch=[float]
listeneroffset=[floats]
isaggregate=[bool]
foottype=[key]
weapontype=[key]
mouthtype=[key]
mouthPriority=[float]
soundId=[uint32]
soundPriority=[float]
time=[float]
buddyFeeds=[strings]
ShowNetworkBlinky=[bool][false]
otdbRefillThreshold=[int32s]
otdbRefillAmount=[int32s]
modelRigBlockAMTag=[string16]
classifierList=[int32s]
classifierTypes=[int32s]
classifierWeights=[floats]
AMTuningVersion=[uint32]
activeXactMin=[uint32]
activeXactMax=[uint32]
pollinatorHTTPTimeout=[uint32]
EntitlementApplied=[bool]
archetypeRefillThreshold=[uint32]
archetypeRefillAmount=[uint32]
EventTempFileMaxSize=[uint32]
EventUploadPeriodSeconds=[uint32]
automaticAchievement=[bool][false]
gameScopeAchievement=[bool][false]
accumulatorTriggerOp=[uint32][0] 0: >=, 1: >, 2: ==, 3: <, 4: <=, 5: !=.
accumulatorTriggerValue=[uint32]
achievementTitle=[text]
achievementDescription=[text]
achievementIcon=[key]
achievementLockedIcon=[key]
achievementCategory=[text]
achievementSecret=[bool][false]
achievementSubSort=[uint32][0]
WonLastCivGame=[bool]
WonSecondToLastCivGame=[bool]
InitialCameraPolarCoords=[vector3]
MaxVehicleStatLimit=[float]
MaxVehicleStatTotal=[float]
MilitaryLandCost=[float]
MilitaryAmphCost=[float]
MilitaryAirCost=[float]
CulturalLandCost=[float]
CulturalAmphCost=[float]
CulturalAirCost=[float]
DiplomaticLandCost=[float]
DiplomaticAmphCost=[float]
DiplomaticAirCost=[float]
HarvesterLandSpeed=[float]
HarvesterCost=[float]
VehicleCapPerCity=[int32]
HarvesterCapPerCity=[int32]
VehicleWeaponCycleTime=[float]
GiftAmountPerCreature=[float]
CityMapZoomLevel=[float]
HappinessForFood=[float]
HappinessForHousing=[float]
HappinessForStructure=[float]
HappinessForLifestyle=[float]
HappinessForCivicObject=[float]
CityHappinessForFood=[float]
CityHappinessForHousing=[float]
CityHappinessForStructure=[float]
CityHappinessForLifestyle=[float]
CityHappinessForCivicObject=[float]
CityHappinessForParty=[float]
MaxProtestorFraction=[float]
PopulationFedPerFarmWorker=[int32]
PopulationHappyPerEntertainmentBuilding=[int32]
PopulationHappyPerCivicObject=[int32]
SecondsHappyAfterParty=[int32]
MoneyPerIndustryWorkerPerSecond=[float]
MoneyPerMarketWorkerPerSecond=[float]
TimeInAlmostConvert=[float]
TimeInAlmostDestroy=[float]
TimeInConverted=[float]
ConvertCitizenRelationshipDelta=[float]
ConvertVehicleRelationshipDelta=[float]
BribeVehicleRelationshipDelta=[float]
SoundGateConvertingPos1=[key]
SoundGateConvertingPos2=[key]
SoundGateConvertingPos3=[key]
SoundGateConvertingNeg1=[key]
SoundGateConvertingNeg2=[key]
SoundGateConvertingNeg3=[key]
CityCivilianOverallScale=[float]
CityCivilianSizeRange=[float]
CityCivilianMinRadius=[float]
CityCivilianMaxRadius=[float]
MotiveMin=[float]
MotiveMax=[float]
MotiveHigh=[float]
MotiveLow=[float]
MotiveCritical=[float]
MotiveTakeAction=[float]
creatureHungerDrain=[float]
creatureStarvationPain=[float]
creatureRestingHealthRecovery=[float]
creatureHealingHealthRecovery=[float]
creaturePosseHealthRecovery=[float]
TribeHungerDrain=[float]
hungerDecayDelay=[float]
creatureHealthRecoveryNoDamageTime=[float]
creatureHealthRecoveryNoDamageMultiplier=[float]
creatureHungerCostForBuildNest=[float]
creatureHungerSatisfiedPerMeatPerSec=[float]
creatureHungerSatisfiedPerFruit=[float]
creatureHungerSatisfiedPerEgg=[float]
creatureStartingMotive_HealthMin=[float]
creatureStartingMotive_HealthMax=[float]
creatureStartingMotive_HungerMin=[float]
creatureStartingMotive_HungerMax=[float]
DiminishingReturn=[float]
ThresholdForDisplay=[float]
FeastDelta=[float]
FeastDuration=[uint32]
PartyDelta=[float]
PartyDuration=[uint32]
NewPositiveEventDelta=[float]
NewPositiveEventDuration=[uint32]
NewNegativeEventDelta=[float]
NewNegativeEventDuration=[uint32]
RecentAttackDelta=[float]
RecentAttackDuration=[uint32]
FoodShortageDelta=[float]
FoodSurplusDelta=[float]
CreaturesToFoodRatioMin=[float]
CreaturesToFoodRatioMax=[float]
HousingShortageDelta=[float]
HousingSurplusDelta=[float]
CreaturesToHousingRatioMin=[float]
CreaturesToHousingRatioMax=[float]
RubbleDelta=[float]
RubbleToUsefulBuildingRatioMin=[float]
RubbleToUsefulBuildingRatioMax=[float]
DecoNeed=[float]
DecoSurplusDelta=[float]
DecoShortageDelta=[float]
DecorationToNeedRatioMin=[float]
DecorationToNeedRatioMax=[float]
SleepEnergyDelta=[float]
SleepCost=[float]
SleepCostSpace=[float]
SleepCapacity=[int32]
SleepMinimumStay=[float]
SleepMaximumStay=[float]
RoomsPerHouse=[int32]
EntertainmentDelta=[float]
EntertainmentCost=[float]
EntertainmentCostSpace=[float]
EntertainmentCapacity=[int32]
RoomsPerEntertainment=[int32]
EntertainmentMinStay=[float]
EntertainmentMaxStay=[float]
CultureCost=[float]
CultureCapacity=[int32]
CultureMinimumStay=[float]
CultureMaximumStay=[float]
IndustryCost=[float]
IndustryCostSpace=[float]
IndustryCapacity=[int32]
IndustryMoneyDeltaCity=[float]
IndustryMoneyDeltaCiv=[float]
IndustryMoneyTime=[float]
IndustryMinimumStay=[float]
IndustryMaximumStay=[float]
FarmCost=[float]
FarmCapacity=[int32]
FarmFoodDeltaCity=[float]
FarmFoodDeltaCiv=[float]
FarmMinimumStay=[float]
FarmMaximumStay=[float]
MarketFoodBundleCapacity=[int32]
MarketCost=[float]
MarketCapacity=[int32]
MarketMinimumStay=[float]
MarketMaximumStay=[float]
MarketBundleSellPriceCity=[float]
MarketBundleSellPriceCiv=[float]
MarketBuyFoodCost=[float]
MarketMaxNPCsPerWorker=[int32]
MarketMoneyTime=[float]
MarketMoneyDeltaCity=[float]
MarketMoneyDeltaCiv=[float]
DiplomacyCost=[float]
DiplomacyMinimumStay=[float]
DiplomacyMaximumStay=[float]
DiplomacyCapacity=[int32]
MilitaryCost=[float]
DefenseCost=[float]
DefenseCostSpace=[float]
BuildingPadBorderSize=[float]
BuildingPadScale=[float]
CivicObjectCost=[float]
InitialWealth=[int32]
InitialCreatures=[int32]
InitialTribeCreatures=[int32]
InitialTribes=[int32]
CityHallMoney=[float]
CityHallMoneyTime=[float]
EasyRefundFraction=[float]
MediumRefundFraction=[float]
HardRefundFraction=[float]
HappinessTotalCalculationTime=[float]
HappinessUnitCalculationTime=[float]
HappinessBarRange=[float]
MaxCityUpgradeLevel=[int32]
EventLogTimeoutInMS_Red=[int32]
EventLogTimeoutInMS_Blue=[int32]
EventLogTimeoutInMS_Yellow=[int32]
HappyIdleThresholdCity=[float]
ProductivityThresholdCity=[float]
EntertainmentThresholdCity=[float]
HappyIdleThresholdCiv=[float]
ProductivityThresholdCiv=[float]
EntertainmentThresholdCiv=[float]
ProtestDuration=[float]
LurkDuration=[float]
LurkDetectRadius=[float]
WanderDuration=[float]
MaxDistanceForInteractWithTribes=[float]
PartySupplyTime=[float]
SmallPartyAttractedChance=[float]
SmallPartyAttractionRadius=[float]
SmallPartyCost=[int32]
SmallPartyCapacity=[int32]
SmallPartySupplies=[int32]
PartyBonusHappiness=[float]
PartyBonusDuration=[float]
MinDistanceBetweenCities=[float]
MinDistanceBetweenTribes=[float]
AngleForProtestGroup=[float]
AngleForSleepingGroup=[float]
AngleForIdleGroup=[float]
AngleForHappyIdleGroup=[float]
IdleAtCityHallMinDistance=[int32]
IdleAtCityHallMaxDistance=[int32]
RadiusFromCityHall=[float]
RoadCost=[int32]
RoadRefundFraction=[float]
RoadSpeedMultiplier=[float]
InterCityRoadInitialWidth=[float]
EstablishTempleSingTime=[float]
CounterConversionInterval=[float]
CityWallSinkDepth=[float]
WallBuildingBuffer=[float]
MinNumWallSegments=[float]
DistBetweenWallPosts=[float]
UseCityWalls=[bool]
UseCityPads=[bool]
RaidRelationshipEffect=[float]
TradeRelationshipEffect=[float]
RecruitingRelationshipEffect=[float]
GiftRelationshipEffect=[float]
VehicleGiftRelationshipEffect=[float]
VehicleTradeRelationshipEffect=[float]
VehicleGiftCost=[float]
FailedMissionRelationshipEffect=[float]
CivAttackRelationshipEffect=[float]
CivAttackTradePartnerRelationshipEffect=[float]
TimeBetweenAttacksForRelationshipPenalty=[float]
CityHallZoomOutScale=[float]
BuildingType1ZoomOutScale=[float]
BuildingType2ZoomOutScale=[float]
VehicleZoomOutScale=[float]
PlumpDistance=[float]
CityFlattenSize=[float]
CityUpgrade1=[float]
CityUpgrade2=[float]
ResourceRegenerationPerSecond=[float]
CostToBuyCityModifier=[float]
ConversionConversionGroupPowerModifier=[float]
ConversionConversionGroupSizeModifier=[float]
BaseConversionStrength=[float]
CrowdReationModifier=[float]
CrowdReationOffset=[float]
CrowdDPSOffset=[float]
CrowdDPSModifier=[float]
CrowdDPSBase=[float]
CrowdConvertOffset=[float]
HarvestMinLoad=[float]
HarvestMaxLoad=[float]
HarvestResourceLoss=[float]
MilitaryProb=[float]
CulturalProb=[float]
MilitaryProbMajorNPC=[float]
CulturalProbMajorNPC=[float]
MilitaryProbMinorNPC=[float]
CulturalProbMinorNPC=[float]
SecondsNextCity=[float]
CityHappyIncome=[float]
CityBoredIncome=[float]
CityTiredIncome=[float]
RelationshipEventCompliment=[floats]
RelationshipEventTrade=[floats]
RelationshipEventGift=[floats]
RelationshipEventBuyCityOver=[floats]
RelationshipEventJoinedAlliance=[floats]
RelationshipEventBribeNode=[floats]
RelationshipEventInsult=[floats]
RelationshipEventHostility=[floats]
RelationshipEventReligion=[floats]
RelationshipEventBuyCityUnder=[floats]
RelationshipEventDemandRejected=[floats]
RelationshipEventDeclaredWar=[floats]
RelationshipEventBrokeDeal=[floats]
RelationshipEventUsedNuclearWeapon=[floats]
RelationshipEventFoughtEnemy=[floats]
RelationshipEventTribeAttack=[floats]
RelationshipEventTribeKill=[floats]
RelationshipEventTribeRaid=[floats]
RelationshipEventTribeStealBaby=[floats]
RelationshipEventTribeAttackToolOrHut=[floats]
RelationshipEventTribeDestroyTool=[floats]
RelationshipEventTribeGift=[floats]
RelationshipEventTribeSocial=[floats]
RelationshipEventTribeRecruit=[floats]
RelationshipEventTribeConvert=[floats]
RelationshipEventTribeCheatGood=[floats]
RelationshipEventTribeCheatBad=[floats]
RelationshipEventTribeSocialPower=[floats]
RelationshipEventSpaceArchetypeMods=[floats]
RelationshipEventSpaceArchetypeNice=[floats]
RelationshipEventSpaceArchetypeMean=[floats]
RelationshipEventSpacePersonalityNice=[floats]
RelationshipEventSpacePersonalityMean=[floats]
RelationshipEventSpaceAvoidedContact=[floats]
RelationshipEventSpaceCommunicatedNice=[floats]
RelationshipEventSpaceCommunicatedMean=[floats]
RelationshipEventSpaceMissionStarted=[floats]
RelationshipEventSpaceMissionComplete=[floats]
RelationshipEventSpaceMissionFailed=[floats]
RelationshipEventSpaceMissionRejected=[floats]
RelationshipEventSpaceMissionAborted=[floats]
RelationshipEventSpaceGiveGift=[floats]
RelationshipEventSpaceBreakAlliance=[floats]
RelationshipEventSpaceCreateAlliance=[floats]
RelationshipEventSpaceStartedWar=[floats]
RelationshipEventSpaceTradeComplete=[floats]
RelationshipEventSpaceTradeDeclined=[floats]
RelationshipEventSpaceTradeRouteSpice=[floats]
RelationshipEventSpaceCityPanicked=[floats]
RelationshipEventSpaceTerraformWorsened=[floats]
RelationshipEventSpaceTerraformImproved=[floats]
RelationshipEventSpaceTerraformExtinction=[floats]
RelationshipEventSpaceDestroyBuilding=[floats]
RelationshipEventSpaceDestroyAllyUFO=[floats]
RelationshipEventSpaceBadToolUse=[floats]
RelationshipEventSpaceGoodToolUse=[floats]
RelationshipEventSpaceFloodCity=[floats]
RelationshipEventSpaceAbductCitizen=[floats]
RelationshipEventSpaceStealCommodity=[floats]
RelationshipEventSpaceUpliftedCiv=[floats]
RelationshipEventSpaceBadSystemPurchaseOffer=[floats]
RelationshipEventSpaceGoodSystemPurchaseOffer=[floats]
RelationshipEventSpaceBadPeaceOffer=[floats]
RelationshipEventSpaceGoodPeaceOffer=[floats]
RelationshipEventSpaceCapturedASystem=[floats]
RelationshipEventSpaceWasAtWar=[floats]
RelationshipEventSpacePushedTooFar=[floats]
RelationshipEventSpaceEmbassyBonus=[floats]
RelationshipEventSpaceDestroyUFO=[floats]
RelationshipEventSpaceBeNice=[floats]
RelationshipEventSpaceBeNasty=[floats]
RelationshipEventSpaceWitholdTribute=[floats]
RelationshipEventSpaceAcceptGift=[floats]
RelationshipEventSpaceCheatGood=[floats]
RelationshipEventSpaceCheatBad=[floats]
RelationshipEventSpaceNewEmpireAndCTMGOwner=[floats]
RelationshipEventSpaceSuperPower=[floats]
RelationshipEventSpaceAlliedWithGrob=[floats]
RelationshipEventSpaceCommittedAtrocity=[floats]
RelationshipSpaceDecayPeriod=[uint32]
RelationshipCivDecayPeriod=[uint32]
RelationshipTribeDecayPeriod=[uint32]
RelationshipDispositionThreshold=[float][0]
AdventureMissionKeys=[keys]
AdventureMissionRequirements=[int32s]
ContextCivilization=[float]
ContextCity=[float]
ContextTribe=[float]
ContextForeignCity=[float]
AiHawk=[float]
AiDove=[float]
AiPreacher=[float]
CommunityMax_Tribe1=[int32]
CommunityMax_Tribe2=[int32]
CommunityMax_Tribe3=[int32]
CommunityMax_City1=[int32]
CommunityMax_City2=[int32]
CommunityMax_Civ1=[int32]
CommunityMax_Civ2=[int32]
PlanBuildBuilding=[float]
PlanWorkerTask=[float]
PlanBuildVehicle=[float]
PlanVehicleTask=[float]
PlanBuyTool=[float]
PlanInteractionTask=[float]
PlanTribeCheatTask=[float]
BuildingTypeHouse=[float]
BuildingTypeFarm=[float]
BuildingTypeFactory=[float]
BuildingTypeMarket=[float]
BuildingTypeMilitary=[float]
BuildingTypeTemple=[float]
BuildingTypeTurret=[float]
BuildingTypeCityHall=[float]
BuildingTypeEntertainment=[float]
BuildingTypeDiplomatic=[float]
BuildingTypeCivicObject=[float]
ToolClub=[float]
ToolAxe=[float]
ToolSpear=[float]
ToolHorn=[float]
ToolMaraca=[float]
ToolDidgeridoo=[float]
ToolHeal=[float]
ToolGather=[float]
ToolFish=[float]
ToolFirepit=[float]
UpgradeHut=[float]
CheatTribeMember=[float]
CheatTribeFood=[float]
TaskGatherFruit=[float]
TaskTribeRecruitTribe=[float]
TaskTribeAttackTribe=[float]
TaskTribeRaidTribe=[float]
TaskHunt=[float]
TaskMate=[float]
TaskTribeGiftTribe=[float]
TaskThrowParty=[float]
TaskFish=[float]
TaskIdle=[float]
TaskRest=[float]
TaskEat=[float]
TaskSellBundle=[float]
TaskRecruitTribe=[float]
TaskAttackTribe=[float]
TaskRaidTribe=[float]
TaskWorkAtFarm=[float]
TaskBuyBundle=[float]
TaskWorkAtFactory=[float]
TaskGiftTribe=[float]
TaskUseEntertainment=[float]
TaskSellFoodMarket=[float]
TaskBuyFoodmarket=[float]
TaskWorkMarket=[float]
VehicleTypeMilitary=[float]
VehicleTypeMissionary=[float]
VehicleTypeTrade=[float]
VehicleTypeHarvester=[float]
VehicleLand=[float]
VehicleAmphibious=[float]
VehicleAir=[float]
TaskEstablishMission=[float]
TaskCultureConvoy=[float]
TaskAttackCity=[float]
TaskTradeWithCity=[float]
TaskGiftCity=[float]
TaskEstablishTradeRoute=[float]
TaskBuyCity=[float]
TribeMode=[int32]
CityMode=[int32]
CivMode=[int32]
SpaceMode=[int32]
CitySpecialtyProduction=[int32]
CitySpecialtyDefense=[int32]
CitySpecialtyHappiness=[int32]
SizeTribe1=[float]
SizeTribe2=[float]
SizeTribe3=[float]
SizeCity1=[float]
SizeCity2=[float]
SizeCiv1=[float]
SizeCiv2=[float]
SizeCiv3=[float]
CreatureHealth=[int32]
VehicleHealth=[int32]
BuildingHealth=[int32]
AaShotsPerTurret=[int32]
SdrBeamLifetime=[float]
newTribeFood=[int32]
timeBeforeBabyGrowsUp=[float]
babyGrowthBoost=[float]
criticalhealthlevel=[int32]
tribePopulationStart=[int32]
tribeMatingTimers=[int32s]
carryBundleAmountMax=[float]
costFoodStorage1=[float]
costFoodStorage2=[float]
costFoodStorage3=[float]
tribeGotoWaitTime=[float]
tribeRepairDelay=[uint32]
ToolLevel1Cost=[int32]
ToolLevel2Cost=[int32]
ToolLevel3Cost=[int32]
tribeFlavorIdleMin=[int32]
tribeFlavorIdleMax=[int32]
tribeHutLevel1Health=[float]
tribeHutLevel2Health=[float]
tribeHutLevel3Health=[float]
tribeToolHealth=[float]
tribeToolHiDamage=[float]
tribeToolLoDamage=[float]
tribeHutHiDamage=[float]
tribeHutLoDamage=[float]
tribeSpeed1=[float]
tribeSpeed2=[float]
tribeSpeed3=[float]
tribeSpeed4=[float]
citySpeed1=[float]
citySpeed2=[float]
citySpeed3=[float]
citySpeed4=[float]
civSpeed1=[float]
civSpeed2=[float]
civSpeed3=[float]
civSpeed4=[float]
tribeGridScale=[float]
herbivoreHutList=[keys]
carnivoreHutList=[keys]
omnivoreHutList=[keys]
npcHutList=[keys]
herbivoreUnpackEffects=[keys]
carnivoreUnpackEffects=[keys]
omnivoreUnpackEffects=[keys]
hutDamageHiKey=[key]
hutDamageMdKey=[key]
hutDamageLoKey=[key]
toolDamageHiKey=[key]
toolDamageMdKey=[key]
toolDamageLoKey=[key]
toolAbility=[key]
ToolPositions=[vector3s]
TribeChatAreas=[vector3s]
animalPenPosition=[vector3]
eggPenPosition=[vector3]
totemPolePosition=[vector3]
foodMatPosition=[vector3]
modelDocksOffset=[vector3]
Turrets=[vector3s]
Side_Gates=[vector3s]
Main_Gate=[vector3]
Freight_Gate=[vector3]
Harvest_Gate=[vector3]
Sea_Gate=[vector3]
First_Boat_Pos=[vector3]
City_Hall=[vector3]
Buildings=[vector3s]
Decorations=[vector3s]
Plazas=[vector3s]
radiusInner=[float]
radiusOuter=[float]
BuildingLink0=[bools]
BuildingLink1=[bools]
BuildingLink2=[bools]
BuildingLink3=[bools]
BuildingLink4=[bools]
BuildingLink5=[bools]
BuildingLink6=[bools]
BuildingLink7=[bools]
BuildingLink8=[bools]
BuildingLink9=[bools]
BuildingLink10=[bools]
BuildingLink11=[bools]
BuildingLink12=[bools]
BuildingLink13=[bools]
BuildingLink14=[bools]
BuildingLink15=[bools]
InlandModelSmall=[key]
InlandModelLarge=[key]
CoastalModelSmall=[key]
CoastalModelLarge=[key]
DockModelSmall=[key]
DockModelLarge=[key]
TurretModel=[key]
TurretThumbnail=[key]
TurretModelDestroyed=[key]
InlandModelSmallIntroEffectID=[uint32]
InlandModelLargeIntroEffectID=[uint32]
CoastalModelSmallIntroEffectID=[uint32]
CoastalModelLargeIntroEffectID=[uint32]
InlandModelSmallRemoveEffectID=[uint32]
InlandModelLargeRemoveEffectID=[uint32]
CoastalModelSmallRemoveEffectID=[uint32]
CoastalModelLargeRemoveEffectID=[uint32]
InlandModelSmallRebuildEffectID=[uint32]
InlandModelLargeRebuildEffectID=[uint32]
CoastalModelSmallRebuildEffectID=[uint32]
CoastalModelLargeRebuildEffectID=[uint32]
turret_muzzle_position=[vector3]
cityHallDiasHeight=[float]
wallStyleCityPadTexture=[key]
wallStyleCityPadTileScale=[float]
wallStyleCityPadBorderWidth=[float]
wallStyleDefaultBuildingPadMaterial=[key]
wallStyleDefaultBuildingPadTexture=[key]
wallStyleCityHallPadTexture=[key]
wallStyleHousePadTexture=[key]
wallStyleFarmPadTexture=[key]
wallStyleIndustryPadTexture=[key]
wallStyleMarketPadTexture=[key]
wallStyleEntertainmentPadTexture=[key]
wallStyleDefensePadTexture=[key]
wallStyleMilitaryTexture=[key]
wallStyleCulturePadTexture=[key]
wallStyleDiplomacyPadTexture=[key]
wallStyleGatePadTexture=[key]
wallStyleListNames=[strings]
wallStyleListLevel1=[keys]
wallStyleListLevel2=[keys]
wallStyleListLevel3=[keys]
wallStyleListIcons=[keys]
CivicFlora=[keys]
CivicLamps=[keys]
CivicMisc=[keys]
SpiceMinePumpOffset=[vector3]
SpiceMinePumpRadius=[float]
numSectionsPerHair=[int32]
hairLength=[float]
hairWidth=[float]
hairDensity=[float]
hairPrintThickness=[float]
hairPrintModeOn=[bool]
weatherStormThreshold=[float]
weatherLowAtmoEffect=[uint32]
weatherMidAtmoEffect=[uint32]
weatherHighAtmoEffect=[uint32]
weatherLoopBoxAtmoEffect=[uint32]
weatherLoopBoxGroundEffect=[uint32]
weatherIceAmbientEffect=[uint32]
weatherColdAmbientEffect=[uint32]
weatherWarmAmbientEffect=[uint32]
weatherHotAmbientEffect=[uint32]
weatherLavaAmbientEffect=[uint32]
weatherEvaporationEffect=[uint32]
weatherFreezeEffect=[uint32]
weatherIceCloudColor=[vector3]
weatherColdCloudColor=[vector3]
weatherWarmCloudColor=[vector3]
weatherHotCloudColor=[vector3]
weatherLavaCloudColor=[vector3]
weatherColdStormLoopbox=[uint32]
weatherWarmStormLoopbox=[uint32]
weatherHotStormLoopbox=[uint32]
weatherColdLocalStormEffect=[uint32]
weatherWarmLocalStormEffect=[uint32]
weatherHotLocalStormEffect=[uint32]
weatherRainRampMS=[uint32]
weatherRainDarkness=[float]
weatherColdStormEffect=[uint32]
weatherWarmStormEffect=[uint32]
weatherHotStormEffect=[uint32]
weatherMaxVelocity=[float]
weatherAccelFactor=[float]
weatherAtmoTempChange=[float]
weatherCloudMapWriteAge=[float]
weatherCloudMapWriteVal=[float]
weatherCloudTrailDecay=[float]
weatherWriteForceDecay=[float]
weatherMinStormCoriolis=[float]
weatherMinStormCloudAge=[float]
weatherMaxNumStorms=[int32]
weatherAtmoScoreDarken=[float]
weatherCloudType=[int32]
weatherAmbientLoopboxType=[int32]
creatureIDColorBrightness=[float]
tribeIDColorBrightness=[float]
civIDColorBrightness=[float]
spaceIDColorBrightness=[float]
creatureIDColorMinDist=[float]
creatureIDColorMaxDist=[float]
tribeIDColorMinDist=[float]
tribeIDColorMaxDist=[float]
civIDColorMinDist=[float]
civIDColorMaxDist=[float]
spaceIDColorMinDist=[float]
spaceIDColorMaxDist=[float]
socialInitialRelationship=[float]
socialExactMatchMultiplier=[float]
socialSameGroupMultiplier=[float]
socialWrongGroupMultiplier=[float]
creatureAvatarMinMouseRadius=[float]
creatureAvatarMaxMouseRadius=[float]
creatureAvatarKeyboardControl=[bool]
creatureAvatarWASDTurningSpeed=[float]
creatureAvatarWASDSlowTurningSpeed=[float]
creatureAvatarWASDReleaseStopDist=[float]
creatureAvatarGoalStopDistance=[float]
creatureAvatarAcceptableStopDist=[float]
creatureGoalDistanceLimit=[float][50.0]
creatureAvatarSpeedMultiplier=[float][1.5]
creatureAvatarDamageMultiplier=[float][1.5]
creatureUntargetDistance=[float]
creatureAvatarDeathEffectScaleMultiplier=[float][1.0]
nerfMultForBabies=[float]
creature_volume_range=[vector2]
average_speed_range=[vector2]
herd_size_range=[vector2]
herd_radius=[float]
herd_audio_on=[bool]
min_herd_size=[uint32]
baby_scale=[float]
egg_hatch_time=[uint32]
herd_call_frequency=[uint32]
eggModelKeys=[keys]
brokenEggModelKeys=[keys]
hatchedEggModelKeys=[keys]
creatureNewbieGameTime=[int32]
creatureNoAttackTimer=[float]
creatureEvoPointEffectDelay=[uint32]
creatureBattleroarDelay=[uint32]
creatureEvoPointsPerCarcass=[float]
creatureEvoPointsPerFruit=[float]
creatureEvoPointsPerEgg=[float]
creatureMaxGrowlDistance=[float]
creatureEvoPointsToLevel_1=[float]
creatureEvoPointsToLevel_2=[float]
creatureEvoPointsToLevel_3=[float]
creatureEvoPointsToLevel_4=[float]
creatureEvoPointsToMigrate_1=[float]
creatureEvoPointsToMigrate_2=[float]
creatureEvoPointsToMigrate_3=[float]
creatureEvoPointsToMigrate_4=[float]
creatureEvoPoints_S=[float]
creatureEvoPoints_M=[float]
creatureEvoPoints_L=[float]
creatureEvoPoints_XL=[float]
creatureNestRespawnTime=[int32]
creatureNestRespawnTime_PlayerSpecies=[int32]
creatureHealthPointsPerCarcassPerSec=[float]
creatureHealthPointsPerFruit=[float]
creatureHealthPointsPerEgg=[float]
creatureStartTimeOfDay=[float]
creatureDistanceToActivateVerb=[float]
creatureSecondsInHeat=[float]
timeOfDayMultiplier=[floats]
timeOfDayMultiplierCreature=[floats]
timeOfDayMultiplierTribe=[floats]
timeOfDayMultiplierCityCiv=[floats]
timeOfDayMultiplierSpace=[floats]
creatureStepEffectMinSpeed=[float]
separationForce=[float]
separationDistance=[float]
cohesionForce=[float]
cohesionDistance=[float]
alignmentForce=[float]
avoidEnemyDistance=[float]
avoidEnemyForce=[float]
avoidStrangerDistance=[float]
avoidStrangerForce=[float]
alertDistance=[float]
alertCooldown=[float]
forceToGoal=[float]
tooCloseToGoalToFlock=[float]
angleDifferenceToFlock=[float]
exponent=[float]
localRadius=[float]
maxSpeedVariance=[float]
forceDelta=[float]
draftingDistance=[float]
draftingForce=[float]
draftingDotAngle=[float]
creatureNPCReactionTime=[int32]
creatureNPCReactionTimeVariance=[int32]
creatureSetupAskWhichScenario=[bool]
creatureSetupDefaultScenario=[string]
creatureSetupDefaultSpecies=[string]
creatureSetupEmergeFromWaterMoment=[bool]
cameraMode=[int32]
cameraInitialDistance=[float]
cameraInitialRotation=[float]
cameraMinDistance=[float]
cameraMaxDistance=[float]
cameraEnableFreePitch=[bool]
cameraEnableAutoPitch=[bool]
cameraAutoPitchCloseMin=[float]
cameraAutoPitchCloseStd=[float]
cameraAutoPitchCloseMax=[float]
cameraAutoPitchFarMin=[float]
cameraAutoPitchFarStd=[float]
cameraAutoPitchFarMax=[float]
cameraMinPitch=[float]
cameraMaxPitch=[float]
cameraMouseSensitivityX=[float]
cameraMouseSensitivityY=[float]
cameraMouseSensitivityZ=[float]
cameraMaxAcceleration=[float]
cameraApproachTime=[float]
cameraVelocityDecayTime=[float]
cameraAnchorInterpDistMultiplier=[float]
cameraInterpolateAnchorTime=[float]
cameraInterpolateOrientationTime=[float]
cameraInterpolateAzimuthTime=[float]
cameraInterpolatePitchTime=[float]
cameraInterpolateDistanceTime=[float]
cameraEnableBreathing=[bool]
cameraBreathAffectsAim=[bool]
cameraBreathSpeedMin=[float]
cameraBreathSpeedMax=[float]
cameraBreathFrequencyMin=[float]
cameraBreathFrequencyMax=[float]
cameraBreathAmplitudeMin=[float]
cameraBreathAmplitudeMax=[float]
cameraEnableShaking=[bool]
cameraShakeAffectsAim=[bool]
cameraShakeSpeedMin=[float]
cameraShakeSpeedMax=[float]
cameraShakeFrequencyMin=[float]
cameraShakeFrequencyMax=[float]
cameraShakeAmplitudeMin=[float]
cameraShakeAmplitudeMax=[float]
cameraShakeRoll=[float]
cameraEnableTreeAvoidance=[bool]
cameraEnableTreeHiding=[bool]
cameraEnableMiddleMouseLook=[bool][true]
cameraShowDebugVisuals=[bool]
cameraPrintDebugData=[bool]
creatureBabyScale=[float]
creatureScale=[vector2]
DOFMinHeight=[float]
DOFMaxHeight=[float]
CRGMinDepth=[float]
CRGMaxDepth=[float]
TRGMinDepth=[float]
TRGMaxDepth=[float]
CVGMinDepth=[float]
CVGMaxDepth=[float]
SPGMinDepth=[float]
SPGMaxDepth=[float]
spaceBGCamNear=[float]
spaceBGCamFar=[float]
spaceBGCamFOV=[float]
creatureAbilityName=[text]
creatureAbilityDescription=[text]
creatureAbilityReqAnyParts=[keys]
creatureAbilityReqAllParts=[keys]
creatureAbilityReqNumberOfParts=[keys]
creatureAbilityNumberRequired=[int32]
creatureAbilityDamage=[float]
creatureAbilityRangedDamage=[float]
creatureAbilityRazeDamage=[float]
creatureAbilityEffectType=[int32]
creatureAbilityEffectKind=[int32]
creatureAbilityMuzzleEffectId=[uint32]
creatureAbilityTrailEffectId=[uint32]
creatureAbilityImpactEffectId=[uint32]
creatureAbilityConeDist=[float]
creatureAbilityConeRadius=[float]
creatureAbilityEffectDuration=[float]
creatureAbilityEffectDamage=[float]
creatureAbilityRefresh=[float]
creatureAbilityDuration=[float]
creatureAbilityRecharge=[float]
creatureAbilityRange=[float]
creatureAbilityRangeMin=[float]
creatureAbilityAvatarRangeMin=[float]
creatureAbilitySpeed=[float]
creatureAbilityType=[int32]
creatureAbilityCategory=[int32]
creatureAbilitySocialCategory=[int32]
creatureAbilityIsSpecial=[bool]
creatureAbilityEnergyCost=[float]
creatureAbilityIcon=[key]
creatureAbilityDNAPoints=[float]
creatureAbilityRequiredCAPs=[uint32s]
creatureAbilityExcludedCAPs=[uint32s]
creatureAbilityRequiredCAPsMaxValueRange=[vector2s]
creatureAbilityRequiredCAPsSumValueRange=[vector2s]
creatureAbilityAttackStatSumValueRange=[vector2]
creatureAbilitySocialStatSumValueRange=[vector2]
creatureAbilityCombatEffectPercentages=[floats]
creatureAbilityCombatEffectEffectIds=[uint32s]
creatureAbilityCombatEffectTypes=[uint32s]
creatureAbilityUseForBabyGame=[bool]
creatureAbilityConeDamageMultiplier=[float]
creatureAbilitySpeedGear=[uint32]
creatureAbilityUnit=[text]
creatureAbilityRolloverValueDescription=[text]
creatureAbilityLockedDescription=[text]
creatureAbilityLevelMultiplier=[float]
creatureAbilityRushingAnimationID=[uint32]
creatureAbilityRushingRange=[float]
creatureAbilityRushingSpeed=[float]
creatureAbilityRushingTargetedCharge=[bool]
creatureAbilityRushingDoDamage=[bool]
creatureAbilityNoRequirements=[int32]
creatureAbilityAnimationIDs=[uint32s]
creatureAbilityFollowerAnimationIDs=[uint32s]
creatureAbilityBabyGameAnimationID=[uint32]
creatureAbilityBuildingSpecificAnimationID=[uint32]
creatureAbilityJumping=[float]
creatureAbilityGliding=[float]
creatureAbilityFlapping=[float]
creatureAbilitySprintBuff=[int32]
creatureAbilityAreaOfEffect=[float]
creatureAbilityReactionAnimation=[uint32]
creatureAbilityReactionDeathAnimation=[uint32]
creatureAbilityReactionLiveAnimation=[uint32]
creatureAbilityReactionDuration=[float]
creatureAbilityAdventurerEnergyCost=[float]
interactiveOrnamentType=[int32]
interactiveOrnamentLifetime=[int32] Input in sec.
interactiveOrnamentDisablePickup=[bool]
interactiveOrnamentIsPickable=[bool] Sets pickable flags.  True by default.
interactableObjectPhysicsPropertyListId=[int32][0] Specifies what type of physics to use.
interactableObjectName=[text]
interactableObjectDefaultScale=[float]
interactableObjectMinScale=[float]
interactableObjectMaxScale=[float]
nounDefinition_CanBeHeld=[bool]
halfWidth=[float]
halfHeight=[float]
lookDirection=[vector3]
lookDistance=[float]
nearClip=[float]
farClip=[float]
flipUpVector=[bool]
orthoProjection=[bool]
zoomVal=[float]
shadowDepthOffset=[float]
shadowDarkness=[float]
AmbOccAOMul=[float]
AmbOccAOBias=[float]
AmbOccBlurAmount=[float]
AmbOccViewWindow=[float]
AmbOccSamplesType=[int32] 0- sphere 1- top hemisphere 2 - bottom hemisphere.
AmbOccSamplesZOffset=[float] Lower or raise all the lights.
AmbOccSamplesInvert=[int32] Some value n, where every nth sample's z is inverted based on SamplesType.
AmbOccNumSamples=[int32] How many AO passes? 64, 128, 256, 512, 1024?.
modelAmbOccTuningFile=[key] The file in Data\Lighting that holds the above tunings, specify this in the model prop.
modelAmbOccStreamMesh=[bool][true] Use StreamMeshToRW instead of Modelworld->Drawlayer.
clickDragDistance=[float]
creatureSpeedMediumLODMultiplier=[float]
eventDescription=[text] The description of the event that the player will see.
eventStartFadeTime=[float] The time (in seconds) to display the event before it begins fading.
eventIsShown=[bool] Whether or not this event should be shown.
eventCategory=[key] The category event - info, warning, mission, tutorial, reward.
eventAwardSubCategory=[key] The subcategory for award events.
eventLogSound=[key]
eventSporeGuidePage=[text]
eventCinematicTrigger=[string8]
eventCinematicObjectNameGUID=[uint32] E.g. (hash("myObjectName")) -- register the userdata of the event with the cinematic manager as a referenceable object.
eventCinematicAutoDeleteEvent=[bool] Automatic deletion of the event when the cinematic starts.
eventCinematicAutoStart=[bool] Start cinematic automatically when event is triggered.
eventAllowDuplicates=[bool] Allows triggering of multiple events with the same event ID.
eventRemoveTime=[float] The time (in seconds) to display the event before removing it.
eventRemoveOnContextChange=[bool][false] Allows removal of event based on change of context.
spaceToolPaletteButtonID=[uint32] Button id for palette.
spaceToolPaletteID=[uint32] Control id of palette window.
spaceToolPaletteList=[keys] List of tools in the palette.
spaceToolPaletteShowsFoodweb=[bool] Whether or not the palette shows the foodweb.
spaceToolPanelList=[keys] List of panels in the palette.
spaceToolLayoutKey=[key] Layout used to draw a normal tool.
spaceToolUseLayoutKey=[key] Layout used to draw a use on activate tool.
spaceToolToggleLayoutKey=[key] Layout used to draw a toggle tool.
spaceToolSuperLayoutKey=[key] Layout used to draw a super tool.
spaceToolEmptyLayoutKey=[key] Layout used for empty spaces.
spaceToolImageColors=[uint32s] Overrides the icon color states (needs 8).
spaceToolPanelControlID=[uint32] ControlID of the panel.
spaceToolScrollDirection=[uint32] Hash of horizontal or vertical.
spaceToolScrollTimeSecs=[float] Time of scroll animation in secs.
spaceToolItemsPerRow=[uint32] Tiles shown per row.
spaceToolItemsPerCol=[uint32] Tiles shown per col.
spaceToolHorizontalSpace=[float] Horizontal space btw tiles.
spaceToolVerticalSpace=[float] Vertical space btw tiles.
spaceToolTotalItems=[uint32] Initial empty tile count (-1 for auto).
spaceToolSaveItemPosition=[bool] Save item position? (true by default).
spaceToolKeySelectMode=[uint32] How to activate key selection (-1 for none).
spaceToolKeyBindingEnabledColor=[uint32] Color used to shade key binding when enabled.
spaceToolKeyBindingDisabledColor=[uint32] Color used to shade key binding when disabled.
spaceToolCountNormalColor=[uint32] Color used to shade count.
spaceToolCountEmptyColor=[uint32] Color used to shade count when empty.
spaceToolPanelKey=[key] Which panel the tool belongs to.
spaceToolPanelPosition=[uint32] Tool's pos in panel (-1 for auto).
spaceToolValidCursor=[string16] The name of the cursor.
spaceToolInvalidCursor=[string16] The name of the cursor.
spaceToolActiveCursor=[string16] The name of the cursor.
spaceToolRechargeCursor=[string16] The name of the cursor.
spaceDefaultMainTool=[key] Scan.prop.
spaceDefaultWeaponTool=[key] Laser.prop.
spaceDefaultCargoTool=[key] Abduct.prop.
spaceDecline101Tools=[keys] Tools to give player if he declines flight school 101.
spaceInitTools=[keys] The configuration array of init tools.
spaceEnabledTools=[keys] The configuration array of available tools.
spaceBuyableTools=[keys] The configuration array of buyable tools.
spaceUnlockableTools=[keys] The configuration array of unlockable tools.
spaceDiscoverableTools=[keys] The list of special tools that can be randomly discovered on planets.
meaningOfLifeRewardTools=[keys] When you discover the meaning of life, you get these tools.
ericTools=[keys] Special list of tools for testing, guid must match hash of property name.
spaceCheatTools=[keys] List of tools to unlock when using the cheat.
spaceToolGroupNames=[texts] List of tool group names for ui.
spaceToolGroupList1=[keys] List of tools for each group in 'groupnames'.
spaceToolGroupList2=[keys]
spaceToolGroupList3=[keys]
spaceToolGroupList4=[keys]
spaceToolGroupList5=[keys]
spaceToolGroupList6=[keys]
spaceToolGroupList7=[keys]
spaceToolGroupList8=[keys]
toolDiscoverableCommonChance=[float][60.0]
toolDiscoverableUncommonChance=[float][30.0]
toolDiscoverableRareChance=[float][8.0]
toolDiscoverableSuperRareChance=[float][2.0]
spaceToolStrategy=[key] Strategy class to use for custom behavior beyond normal tool usage.
spaceToolBuyCost=[int32] The amount of money required to buy the tool.
spaceToolUsesAmmo=[bool][true] Flag if the tool requires the use of ammo.
spaceToolInitialAmmoCount=[int32] The initial ammo for the tool.
spaceToolMaxAmmoCount=[int32] The maximum ammo for the tool.
spaceToolAmmoUsedPerShot=[int32] The amount of ammo each shot consumes.
spaceToolUseCost=[int32] The cost to use the tool once.
spaceToolContext=[key] Defines where the tool can be used (always, planet, space, passive).
toolMinimapSlotsToggleEffect=[uint32] Hash of slots, map, or none.
spaceToolEnergyCost=[float][0] Energy required per use.
spaceToolHide=[bool][false] If true the tool will not appear in the ui until aquired.
spaceToolShowCollectedOrUnlockedText=[bool][true] Should we show unlock/collected text for tool.
spaceToolImageID=[key] Corresponds to the guid in the UI layout file for the icon image for this tool.
spaceToolThumbnailID=[key] Corresponds to the guid in the UI layout file for the thumbnail image for this tool.
spaceToolDescription=[text] Rollover description.
spaceToolDetailDescription=[text] Expanded rollover description.
spaceToolLockedDescription=[text] If present,this text is shown in the ui to describe the tool if it is not yet earned/unlocked. if not present detaildescription is used instead.
spaceToolDamageArea=[float] The world unit radius in which the tool will destroy game objects.
spaceToolMinDamage=[float] Minimum damage the tool will cause if it registers for damage.
spaceToolMaxDamage=[float] Maximum damage the tool will cause if it registers for damage.
spaceToolMaxProjectileScale=[float] Maximum projectile scaling for this tool.
spaceToolRechargeRate=[float] The time (in seconds) that it takes the tool to recharge before it can be used again.
spaceToolType=[key] Weapon, terraforming, special, other (a grouping for the tool in the various UI buckets).
spaceToolAutoFireRate=[float] The time (in seconds) between repeat firings of a weapon (-1 means never).
spaceToolChargeRate=[float] The time (in seconds) for the weapon to fully charge before firing.
spaceToolMinRange=[float] Min range for a tool to be fireable (-1 means no range constraint).
spaceToolMaxRange=[float] Max range over which a tool can fire (-1 means no range constraint).
spaceToolDamageRadius=[float] Damage radius (only used by Area of Effect weapons).
spaceToolUpgradeFile=[key] The file which serves as an upgrade to this tool.
spaceToolWeaponSubType=[key] Projectile, etc.
spaceToolWeaponSubType=[key] Projectile, etc.
spaceToolRaiseWaterDelta=[float] The amount of raise of water.
spaceToolArtifactModel=[string] The name of the model of the artifact if the tool is related to an artifact.
spaceToolDetectableRange=[float] The range at which cities can detect the usage of weaponry.
spaceToolDisableOnHomeworld=[bool][true] Disable this tool on the users homeworld.
spaceToolDisableOnSaveGames=[bool][false] Disable this tool when visiting savegame worlds.
spaceToolDisableOn201Ruins=[bool][false] Disable this tool when visiting 201 world.
spaceToolMinDiscoveredAmmo=[int32] The minimum amount of ammo if this tool is discovered on a planet.
spaceToolMaxDiscoveredAmmo=[int32] The maximum amount of ammo if this tool is discovered on a planet.
toolDiscoverableRarity=[key] Common, uncommon, rare, superRare.
toolOnlyOnPlayerColonies=[bool]
toolOnlyOnNPCColonies=[bool]
toolGenericEffectID=[key] The name of the effect to be bound to this tool's use.
toolProjectileType=[key] Artillery, pulse.
toolProjectileSpeed=[float] Projectile speed.
toolProjectileAcceleration=[float] Projectile acceleration.
toolProjectileLobAngle=[float] Degree angle up from horizontal  that the projectile will be lobbed from.
toolBeamEffectID=[key] Effect component for beam style weapons.
toolHitGroundEffectID=[key] Effect component for beam style weapons.
toolHitWaterEffectID=[key] Effect component for beam style weapons.
toolHitCombatantEffectID=[key] Effect component for beam style weapons.
toolHitPlayerEffectID=[key] Effect component for hitting the player.
toolBeamPassThrough=[bool][false] If the beam effect passes through any combatants to hit the terrain or water.
toolProjectilePassThrough=[bool][false] If the projectile effect passes through any combatants to hit the terrain or water.
toolDamagesFriendlies=[bool][true] If the projectile damages friendlies.
toolPassThroughAll=[bool][false] If the projectile ignores all collisions.
toolProjectileEffectID=[key] Effect that plays as the projectile flies through the air.
toolMuzzleEffectID=[key] Effect that is emitted from the shooter.
toolTargetEffectID=[key] Effect that is pinned to the terrain for the duration of a deep space projectile's life.
toolProjectileExplosionExpansionRate=[float] Rate at which a projectile's explosion spreads (use a high number for instantaneous).
toolProjectileTimeOut=[float] Time in seconds before the projectile will explode naturally.
toolDestroysFloraAndFauna=[bool][true] Does this tool destroy flora and fauna?.
toolPicksFlora=[bool][false] Does this tool need to interact with creature trees?.
toolDoActionPostEffect=[bool][true] If the tool waits for the hit effect to resolve.
toolHitOrientsToTerrain=[bool][true] If the beam takes the surface orientation on hit or uses the beam.
toolUseOnActivate=[bool][true] When this tool is selected in the interface, it will be automatically used and deselected.
toolCanPlayerLockOn=[bool][true]
toolIsSuperWeapon=[bool][false]
toolDeselectsAfterUse=[bool][true] If the player uses a tool with this flag then their tool will be deselected after use.
toolDeselectsOnPlanetExit=[bool][true]
toolInterruptedByDamage=[bool][true] Gives the tool the opportunity to cancel if the player is damaged.
toolRelationshipDelta=[float][0.0] How much relationship changes when this tool hits.
toolGalacticRelationshipDelta=[float][0.0] How much all empires' relationship changes when this tool hits.
toolGalacticRelationshipRadius=[float][0.0]
toolProjectileTurnRate=[float] How fast it can turn, used by turret defense missiles.
toolProjectileMaxAltitude=[float] Altitude at which it explodes.
toolProjectileMinAltitude=[float] Lowest altitude the projectile can explode at.
toolProjectileDetonationDistance=[float] Distance from target, inside of which it explodes.
toolCulturalRewardCount=[int32] How many charges rewarded to the player on civ transition.
toolMilitaryRewardCount=[int32] How many charges rewarded to the player on civ transition.
toolEconomicRewardCount=[int32] How many charges rewarded to the player on civ transition.
toolMeaningOfLifeRewardCount=[int32] How many charges rewarded to player when they discover the meaning of life (enter the galactic core).
toolHitGroundAtmosphereVelocity=[float] Velocity added to atmosphere terraforming element when the tool is used on the ground.
toolHitGroundWaterVelocity=[float] Velocity added to water terraforming element when the tool is used on the ground.
toolHitGroundTemperatureVelocity=[float] Velocity added to temperature terraforming element when the tool is used on the ground.
toolHitWaterAtmosphereVelocity=[float] Velocity added to atmosphere terraforming element when the tool is used on the water.
toolHitWaterWaterVelocity=[float] Velocity added to water terraforming element when the tool is used on the water.
toolHitWaterTemperatureVelocity=[float] Velocity added to temperature terraforming element when the tool is used on the water.
toolHitCombatantAtmosphereVelocity=[float] Velocity added to atmosphere terraforming element when the tool is used on a combatant.
toolHitCombatantWaterVelocity=[float] Velocity added to water terraforming element when the tool is used on a combatant.
toolHitCombatantTemperatureVelocity=[float] Velocity added to temperature terraforming element when the tool is used on a combatant.
toolHitAirAtmosphereVelocity=[float] Velocity added to atmosphere terraforming element when the tool that detonates in air.
toolHitAirWaterVelocity=[float] Velocity added to water terraforming element when the tool is used on detonates in air.
toolHitAirTemperatureVelocity=[float] Velocity added to temperature terraforming element when the tool is used on detonates in air.
toolTerrainColorIndex=[int32]
toolWaterColorIndex=[int32]
toolAtmosphereColorIndex=[int32]
toolIsHoming=[bool]
toolProjectileMotion=[key]
toolProjectileEccentricity=[float]
toolTargetFlags=[int32s]
toolTargetFlagsFailMessage=[text]
toolPreventsPlanetExit=[bool]
monolithWorshipTimeSeconds=[float]
monolithCircleRadius=[int32]
toolPlacedModelKey=[key]
toolTerraformingIconKey=[uint32]
inventoryItemArtifactModel=[key] The name of the model of the artifact if the inventory (cargo) item is related to an artifact.
inventoryItemArtifactNormalScale=[float][-1.0] The normal scale of the artifact if the inventory (cargo) item is related to an artifact.
inventoryItemArtifactPlumpScale=[float][-1.0] The plumped scale of the artifact if the inventory (cargo) item is related to an artifact.
inventoryItemExtraEffect=[key][0] An additional effect physical inventory items can play when on the planet surface (eg rare decals).
cropCircleDecalEffectID=[key] Effect id for crop circle decals.
spaceToolSetiChanceFalsePositiveRare=[float]
spaceToolSetiChanceFalseNegativeRare=[float]
spaceToolSetiChanceFalsePositiveEmpire=[float]
spaceToolSetiChanceFalseNegativeEmpire=[float]
spaceUITerraformRingColorOff=[uint32]
spaceUITerraformRingColorLocked=[uint32]
spaceUITerraformRingColorEmpty=[uint32]
spaceUITerraformRingColorPlants=[uint32]
spaceUITerraformRingColorFull=[uint32]
spaceUITerraformDotColorT0=[uint32]
spaceUITerraformDotColorT1=[uint32]
spaceUITerraformDotColorT2=[uint32]
spaceUITerraformDotColorT3=[uint32]
spaceTerraformT1ColonyMaxBuildings=[int32][5] Includes the city hall.
spaceTerraformT2ColonyMaxBuildings=[int32][10] Includes the city hall.
spaceTerraformT3ColonyMaxBuildings=[int32][15] Includes the city hall.
spaceTerraformFloraChanceSpread=[float]
spaceTerraformAnimalChanceSpread=[float]
spaceTerraformSimpleFloraDecayRate=[float]
spaceTerraformSimpleFloraGrowthRate=[float]
spaceTerraformExtinctionDelay=[float][0.0]
spaceTerraformWaterDivergenceRate=[float]
spaceTerraformAtmosphereDivergenceRate=[float]
spaceTerraformBullseyeSteepnessPower=[float]
spaceTerraformFloraBullseyeRadius=[float]
spaceTerraformFloraBullseyeForce=[float]
spaceTerraformBullseyeMarbleMass=[float]
spaceTerraformBullseyeTimeScale=[float]
spaceTerraformBullseyeMarbleDamping=[float]
spaceTerraformBullseyeMarbleDrag=[float]
spaceTerraformHotColdZoneBias0=[float][0]
spaceTerraformHotColdZoneBias1=[float][0]
spaceTerraformHotColdZoneBias2=[float][0]
spaceTerraformLevel1Threshold=[float][0.1]
spaceTerraformLevel2Threshold=[float][0.2]
spaceTerraformLevel3Threshold=[float][0.3]
spaceTerraformMinWaterWithPerfectScore=[float][0.4]
spaceTerraformMinWaterRadius=[float][0.4]
spaceTerraformMinWaterIceThreshold=[float][0.2]
spaceTerraformMinWaterIceVacuum=[float][0.1]
spaceTerraformMinWaterIceAtmosphere=[float][0.4]
spaceTerraformMinWaterAtmosphere=[float][0.8]
spaceTerraformMinWaterVacuumThreshold=[float][0.2]
spaceTerraformMinWaterHeatThresholdLow=[float][0.7]
spaceTerraformMinWaterHeatThresholdHigh=[float][0.8]
spaceTerraformMaxWater=[float][0.7]
spaceTerraformMaxWaterThreshold=[float][0.7]
spaceTerraformLavaThreshold=[float][0.8]
spaceTerraformLavaMaxCoverage=[float][0.4]
spaceTerraformIceThreshold=[float][0.2]
spaceTerraformZooSpecies=[int32][100]
terraformClearFloraRadius=[float][0]
terraformClearFloraExtraRadiusCity=[float][0]
universeSimBuildingsForTargetingHomePlanet=[int32][100]
universeSimulatorGenericPressureFrequency=[float][600]
universeSimulatorPirateRaidFrequency=[float][600]
universeSimulatorPirateRaidMinTime=[float][300]
universeSimulatorPirateRaidDefendedRatio=[int32][500]
universeSimulatorPirateRaidAllyFrequency=[float][600]
universeSimulatorPirateRaidAllyMinTime=[float][300]
universeSimulatorPirateRaidPlunderFrequency=[float][600]
universeSimulatorPirateRaidPlunderMinTime=[float][300]
universeSimulatorWarAttackMinTime=[float][100]
universeSimulatorWarAttackFrequency=[float][300]
universeSimulatorHappinessDisasterMinTime=[float][100]
universeSimulatorHappinessDisasterFrequency=[float][300]
universeSimulatorGrobTeaseAttackFrequency=[float][100]
universeSimulatorGrobTeaseAttackMinTime=[float][300]
universeSimulatorGrobWarAttackFreqExtremelyAware=[float][40]
universeSimulatorGrobWarAttackFreqVeryAware=[float][80]
universeSimulatorGrobWarAttackFreqAware=[float][160]
universeSimulatorGrobWarAttackMinTime=[float][60]
universeSimulatorBiosphereCollapseTime=[float][600]
universeSimulatorBiosphereCollapseFrequency=[float][300]
universeSimulatorNewEventFrequency=[float] In seconds.
universeSimulatorMaxEventCount=[float]
universeSimulatorChanceOfNoEvent=[float] Percent chance with respect to all other chances.
universeSimulatorChanceOfRaidEvent=[float]
universeSimulatorArtifactFrequency=[float] Average seconds between artifacts.
universeSimulatorArtifactMinTime=[float] Seconds.
universeSimulatorMaxArtifactsPerPlanet=[int32] Maximum artifacts on a single planet.
loyaltyBoosterTimeBonusFactor=[float]
bioStabilizerInfectionTimeBonusFactor=[float]
bioStabilizerCollapseTimeBonusFactor=[float]
uberTurretProtectionFactor=[float]
nearbyEmpiresSearchRadius=[float]
universeSimulatorMinTimeBetweenDisasters=[int32]
universeSimulatorMinTimeAfterColonyPlacement=[int32]
recentDeathConversationDuration=[float]
grobShockDuration=[float]
grobThresholdNotAware=[float]
grobThresholdAware=[float]
grobThresholdVeryAware=[float]
grobThresholdExtremelyAware=[float]
grobAwarenessCap=[float]
grobAwarenessDecayRate=[float]
grobDetectionRadius=[float]
grobDelayBetweenHighAwarenessUpdates=[float]
grobAwarenessAdjustmentAngeredGrob=[float]
grobAwarenessAdjustmentVisitedGrobPlanet=[float]
grobAwarenessAdjustmentVisitedGrobStar=[float]
grobAwarenessAdjustmentEnteredGrobStar=[float]
grobAwarenessAdjustmentVisitedStarNearGrob=[float]
grobAwarenessAdjustmentAttackedGrobUFO=[float]
empireThresholdNotAware=[float]
empireThresholdAware=[float]
empireThresholdVeryAware=[float]
empireThresholdExtremelyAware=[float]
empireAwarenessCap=[float]
empireAwarenessDecayRate=[float]
empireDetectionRadius=[float]
empireAwarenessAdjustmentAngeredEmpire=[float]
empireAwarenessAdjustmentVisitedEmpirePlanet=[float]
empireAwarenessAdjustmentVisitedEmpireStar=[float]
empireAwarenessAdjustmentEnteredEmpireStar=[float]
empireAwarenessAdjustmentVisitedStarNearEmpire=[float]
empireAwarenessAdjustmentAttackedEmpireUFO=[float]
empireAwarenessAdjustmentPlacedColony=[float]
galaxyInterceptRange=[float][10]
galaxyInterceptFireRange=[float][1]
galaxyInterceptDamage=[float][20]
empireStartLocations=[floats]
GalaxyReservedStars=[floats]
grobHintChanceLow=[float][5]
grobHintChanceHigh=[float][15]
grobHintT1=[float][60]
grobHintT2=[float][120]
meaningOfLifeHintChanceLow=[float][0]
meaningOfLifeHintChanceHigh=[float][25]
meaningOfLifeHintT1=[float][180]
meaningOfLifeHintT2=[float][240]
lategameTools=[keys] Array of tool keys to give.
lategameTutorialMissionsToComplete=[uint32]
lategameDistance=[float]
lategameOutposts=[uint32]
lategameT1Colony=[uint32]
lategameT2Colony=[uint32]
lategameT3Colony=[uint32]
lategameAllies=[uint32]
lategameEnemies=[uint32]
lategameMoney=[uint32]
lootMinMoneyDrop=[floats]
lootMaxMoneyDrop=[floats]
lootMinCityMoneyDrop=[floats]
lootMaxCityMoneyDrop=[floats]
lootCityMoneyChance=[float]
lootBomberMoneyChance=[float]
lootRaiderMoneyChance=[float]
lootDefenderMoneyChance=[float]
lootInterceptorMoneyChance=[float]
lootThiefMoneyChance=[float]
UFOHealthPlayer=[float][5000]
UFOHealthFighter=[floats]
UFOHealth201Drone=[floats]
UFOHealthAlly=[floats]
UFOHealthDefender=[floats]
UFOHealthInterceptor=[floats]
UFOHealthBomber=[floats]
UFOHealthPirate=[floats]
UFOHealthUberTurret=[floats]
turretHealth=[floats]
spaceColonyObjectHealth=[float][2000.0]
minOutpostDefenders=[int32s]
maxOutpostDefenders=[int32s]
minColonyDefenders=[int32s]
maxColonyDefenders=[int32s]
minHomeworldDefenders=[int32s]
maxHomeworldDefenders=[int32s]
minTributeMultiplier=[floats]
maxTributeMultiplier=[floats]
minPeaceOfferMultiplier=[floats]
maxPeaceOfferMultiplier=[floats]
spaceDestroyOnCaptureChance=[float][0.2]
spaceOutpostDestroyOnCaptureChance=[float][1.0]
spaceshipWeaponRadii=[floats]
spaceshipWeaponEmpireSize=[int32s]
weaponPlayerSolar=[keys]
weaponPlayerGalaxy=[keys]
weaponPlayerShortRange=[keys]
weaponPosseShortRange=[keys]
weaponPosseMediumRange=[keys]
weaponPosseLongRange=[keys]
weaponPosseGround=[keys]
weaponPosseSolar=[keys]
weaponPosseGalaxy=[keys]
weaponDefenderShortRange=[keys]
weaponDefenderMediumRange=[keys]
weaponDefenderLongRange=[keys]
weaponDefenderGround=[keys]
weaponRaiderShortRange=[keys]
weaponRaiderMediumRange=[keys]
weaponRaiderLongRange=[keys]
weaponRaiderGround=[keys]
weaponBomberLongRange=[keys]
weaponBomberGround=[keys]
weaponInterceptorShortRange=[keys]
weaponInterceptorMediumRange=[keys]
weaponInterceptorLongRange=[keys]
weaponInterceptorSolar=[keys]
weaponInterceptorGalaxy=[keys]
weaponTurretDefenseMissle=[keys]
weaponTurretFlak=[keys]
weaponTurretLaser=[keys]
spaceWarSurrenderThreshold=[float]
spaceBuildingCaptureMultiplier=[float][1.0] Multiplier on the capture bonus of buildings in space game.
spaceCaptureMinBuildingFactor=[float][1.0] Percentage of capture when hitting city hall with no buildings.
spaceCaptureMaxBuildingFactor=[float][0.1] Percentage capture when hitting city hall with max buildings.
spaceMilitaryCaptureFactor=[float]
spaceMilitaryCaptureDecayTime=[int32]
spaceMilitaryCaptureRemainingPlanetRatio=[float][1.0] Zero to one, will always leave one.
spaceMilitaryCaptureRemainingCityRatio=[float][1.0] Zero to one, will always leave one.
spaceStolenSpicePerSecond=[float]
spaceTurretNPCDamageMultiplier=[float]
spaceCombatAirRaidSirenTime=[float][4.0] Time to wait before cities attack.
spaceCombatEnemyUFOAttackRange=[float][150.0] Enemy UFOs will wait until they are within this range before firing on the player.
spaceCityAngerTime=[float][20.0] Time in seconds that a city stays mad.
spaceCombatRespawnTime=[float][30.0]
spaceCombatReinforceTime=[float][30.0]
spaceCombatReinforceSecondTime=[float][60.0]
spaceCombatReinforceCount=[int32][3]
spaceCombatFighterBackgroundDPS=[floats]
spaceCombatBomberBackgroundDPS=[floats]
spaceCombatTurretBackgroundDPS=[floats]
spaceCombatUberTurretBackgroundDPS=[float]
waitTimeSecAlliedNPCMedAirWeapon=[float]
waitTimeSecPassiveNPCMedAirWeapon=[float]
waitTimeSecInterceptorMedAirWeapon=[float]
waitTimeSecRaidFighterMedAirWeapon=[float]
waitTimeSecUberTurretMedAirWeapon=[float]
waitTimeSecStory201NPCMedAirWeapon=[float]
waitTimeSecAlliedNPCFarAirWeapon=[float]
waitTimeSecPassiveNPCFarAirWeapon=[float]
waitTimeSecInterceptorFarAirWeapon=[float]
waitTimeSecRaidFighterFarAirWeapon=[float]
waitTimeSecUberTurretFarAirWeapon=[float]
waitTimeSecStory201NPCFarAirWeapon=[float]
waitTimeSecRaidBomberFarAirWeapon=[float]
NPCLaserOnTimeSec=[float]
NPCLaserOffTimeSec=[float]
avatarWeaponColor=[colorRGB]
posseWeaponColor=[colorRGB]
enemyWeaponColor=[colorRGB]
friendWeaponColor=[colorRGB]
spacePirateMoneyPenalty=[int32][100] Amount each pirate takes when you fail to stop them airlifting....
secondsBetweenColonySimulatorTicks=[int32][29]
spaceCombatMaxLockOnRange=[float][500.0]
grobSizeRadiusMultipliers=[vector3]
LengthGame=[int32][1]
DistanceStartGame=[float][100.0]
DistanceQuitGame=[float][150.0]
HighlightUIButtons=[bool][true]
NoteWaitTime=[int32][500]
LightDurationRound1=[int32][500]
LightDurationRound2=[int32][500]
LightDurationRound3=[int32][500]
LightDurationRound4=[int32][500]
LightDurationRound5=[int32][500]
LightDurationRound6=[int32][500]
LightDurationRound7=[int32][500]
LightDurationRound8=[int32][500]
LightDurationRound9=[int32][500]
LightDurationRound10=[int32][500]
spaceUItravelTrailLength=[int32][5]
spaceUICommMaxBlinkCount=[int32][20]
spaceUIStarmapFilterZoom=[float][100]
spaceUIEmpireOverlap=[float][150.0]
spaceUIEmpireNodeScale=[float][500.0]
spaceUIEmpireRadius=[float][1000.0]
spaceUIEmpireSampleDist=[float][50.0]
floraSpeciesBracket=[key] Key to indicate which size bracket the species is in.
floraMinDesiredNiche=[float] (-1.0f to 1.0f) the minimum perceived altitude required for this plant to survive.
floraMaxDesiredNiche=[float] (-1.0f to 1.0f) the maximum perceived altitude required for this plant to survive.
floraImposterScale=[float][10] Scale of imposter textures.
faunaChanceSpread=[float][0] Percent chance animal will spread to neighboring cell this tick.
faunaIsCarnivore=[bool][true] Flag to indicate if the creature eats other creatures.
faunaIsHerbivore=[bool][true] Flag to indicate if the creature eats plants.
faunaModelID=[key] ID of the animal model prop file to be used.
terrainThemeFlora=[keys] Ids of flora used on a specific terrain scripted planet.
terrainThemeFloraBracketIndexes=[int32s] Bracket index (stored so they persist).
terrainThemeFloraGlobalDensity=[float] Global flora density.
terrainThemeFloraDensities=[floats] Density of each flora species specified above.
effectSpawnedRocksEnabled=[bool] Determines whether physics rocks will be spawned from rock distribute effects.
rockModelData=[key] ID of the model prop file holding all model info.
rockObstacleAllowed=[bool] Flag that will allow this rock type to be added as obstacle.
rockPhysicsModelAllowed=[bool] Flag that determines if this rock can be switched out for a physics rock.
treeOrnamentsEnabled=[bool] Determines if ornaments (sticks/flowers) will be automatically placed around trees as they come in and out of high lod.
obstacleModelData=[key] ID of the model prop file holding model LOD info.
obstacleAlphaModelID=[key] ID of the alpha model used for swapping when obstacle is between avatar & camera.
obstacleBaseCollisionRadius=[float] Radius at the base of the obstacle.
obstacleBaseHideableRadius=[float] UNUSED - radius at the base of the obstacle beyond the collision radius where a creature can hide.
obstacleCanopyCollisionRadius=[float] Radius at the canopy level of the obstacle.
obstacleCollisionHeight=[float] Height of the obstacle.
obstacleSpeciesType=[key] Species type (This is the hashed value of the creature species prop filename.).
obstacleUses2DFootprint=[bool][false] Whether or not an obstacle will use a 2D footprint, by default, false.
modelPlacementSpacingRing=[float] Only used in the terrain editor to show how far objects should be from each other.
obstacleBaseRadiusCalcHeights=[floats] Defines a list of positions as a percent of total height for calculating obstacle base radius (default, small, medium, large).
numberOfBaseRadCalcsToAvg=[int32] The number of base obstacle radiuses that should be taken to produce an average.
obstacleObjectExclusionRadius=[float] Radius that the obstacle "takes up" in the world, where no game object will be placed within (game will use the max of this and the obstacleBaseCollisionRadius).
obstacleOcclusionObjectRadiusMultiplier=[float][1.0] Object (avatar, tribe member, ect.) radius that is multipled to expand alpha region around object.
obstacleOcclusionMinAlpha=[float][0.25] [0..1] alpha value of models that completely occlude the avatar.
obstacleOcclusionAlphaConvergenceSpeed=[float][0.3] [0..1] convergence speed; fraction of difference between old and new alpha value, applied per frame.
obstacleOcclusionRadiusBlendFactor=[vector3][(0.0, 0.0, 0.0)] [0..1] effective radius of occlusion cylinder; blend between inner- and outer-most radius of tree obstacle [large|medium|small].
obstacleHeightPercentToCanopyAlpha=[float][0.9] LOS obstacle penetration height percent to add canopy alpha multiplier.
obstacleCanopyAlphaMultiplier=[float][0.25] Alpha multipler when interpenetrating canopy.
obstacleMaxDistToCanopyAlpha=[float][75.0] Max dist from camera to allow extra canopy alpha.
obstacleCameraAlphaRadius=[float][5.0] Radius around camera alpha position.
creatureTreesEnabled=[bool] Determines whether creature trees will spawn in the game.
planetFruitModel=[key] Key for the fruit model used on this planet.
planetFruitModelRotten=[key] Key for the fruit model (when rotten) used on this planet.
planetFruitDistributeEffect=[key] Distribute effect script ID that uses the same fruit model as what's listed in planetFruitModel.
fruitEnabled=[bool] Controls dynamic enable/disable of fruit and associated cleanup/init work.
fruitAutoDroppingEnabled=[bool] Determines if fruit will drop from trees periodically.
fruitRegrowthEnabled=[bool] Determines if fruit will regrow on trees periodically.
fruitPropMinHangingTime=[float]
fruitPropMaxHangingTime=[float]
fruitPropMaxOnGroundTime=[float]
fruitPropMaxRegrowthTime=[float]
fruitPropMaxRottingTime=[float]
maxSmallTreeFruitPerGrove=[int32]
maxMediumTreeFruitPerGrove=[int32]
maxLargeTreeFruitPerGrove=[int32]
clickFruitOrTrees=[int32] Allows for fruit interaction either by clicking fruit or by clicking trees. ( 0 = fruit, 1 = trees ).
planetStaticRocks=[keys]
planetPhysicsRocks=[keys]
galaxyMinRadius=[float][1.0]
galaxyZoomFloor=[float][1.1]
galaxyZoomOutStartRadius=[float][1.0]
galaxyZoomOutEndRadius=[float][5.0]
galaxyMaxRadius=[float][1500.0]
galaxyDiscreteZoom=[floats]
galaxyMouseClicks=[float][10.0]
galaxyCameraPhi=[vector2s] This array of floats specifies the curve of phi for the galaxy camera from zoomed in to zoomed out.
galaxyZoomRateMin=[float][100.0]
galaxyZoomRateMax=[float][10000.0]
galaxyAutoZoomRateMin=[float][100.0]
galaxyAutoZoomRateMax=[float][10000.0]
solarMinRadius=[float][25.0]
solarZoomFloor=[float][26.0]
solarZoomOutStartRadius=[float][25.0]
solarZoomOutEndRadius=[float][50.0]
solarZoomInEndRadius=[float][500.0]
solarZoomInStartRadius=[float][800.0]
solarZoomCeiling=[float][999.0]
solarMaxRadius=[float][1000.0]
solarDiscreteZoom=[floats]
solarCameraPhi=[vector2s] This array of floats specifies the curve of phi for the solar camera from zoomed in to zoomed out.
solarZoomRateMin=[float][100.0]
solarZoomRateMax=[float][10000.0]
solarAutoZoomRateInMin=[float][100.0]
solarAutoZoomRateInMax=[float][10000.0]
solarAutoZoomRateOutMin=[float][100.0]
solarAutoZoomRateOutMax=[float][10000.0]
planetTransitionEnable=[bool][true]
planetTransitionCheatToDaylightOnce=[bool][false]
planetTransitionCheatToDaylightAlways=[bool][false]
planetTransitionZoomControl=[bool][false]
planetTransitionEnterOnDaySide=[bool][false]
planetTransitionExitOnNightSide=[bool][false]
planetTransitionTime=[float][5]
planetZoomInEndHeight=[float][400.0]
planetZoomInStartHeight=[float][1500.0]
planetZoomCeiling=[float][1000.0]
planetMaxHeight=[float][2000.0]
planetAtmosphereStart=[float][500]
planetAtmosphereEnd=[float][800]
solarPullOutUp=[float][1.4] This is a measure of how quickly the camera focuses on the sun when zooming out.
solarPullOutRight=[float][1.4] This is a measure of how quickly the camera focuses on the sun when zooming out.
solarPullOutDebugDraw=[bool][false] Help for tuning the above.
planetZoomRateMin=[float][10.0]
planetZoomRateMax=[float][1000.0]
allianceTiltMinAngle=[float][25.0]
allianceTiltMaxAngle=[float][70.0]
allianceTiltMaxAlpha=[float][0.35]
spaceFOV=[float][60.0]
spaceNearClip=[float][0.1]
spaceFarClip=[float][1500.0]
solarFOVStart=[float][30.0]
solarFOVEnd=[float][80.0]
galaxyFOVStart=[float][60.0]
galaxyFOVEnd=[float][95.0]
spacePhiOffsetGalaxy=[float][0]
spacePhiOffsetSolar=[float][0]
driftFrequency0=[float][1.0]
driftFrequency1=[float][1.0]
driftFrequency2=[float][1.0]
driftAmplitude0=[float][0.25]
driftAmplitude1=[float][0.03]
driftAmplitude2=[float][0.03]
planetCameraDistanceFOV=[vector4s][(500, 100, 45, 0)]
horizonAngle=[float][0.5]
planetCameraInterpolationRamp=[float][0.5]
planetCameraInterpolationTolerance=[float][0.001]
planetCameraMaxAltitudeForRotation=[float][200.0]
planetCameraRotationSpeed=[float][180.0]
planetCameraMouseRotationSpeed=[float][0.5]
planetCameraDistanceInterpolationRate=[float][1.0]
planetCameraTerrainInterpolationRate=[float][1.0]
planetCameraFOVInterpolationRate=[float][1.0]
spaceCameraDebugMouseWheel=[bool][false]
planetCameraCombatModeEnabled=[bool][false]
planetCameraCombatTuning=[vector4s][(500, 200, 0, 80)]
planetCameraBusterTuning=[vector4s][(500, 200, 0, 80)]
archetypeWarrior=[int32][10] Curmudgeon Military.
archetypeTrader=[int32][10] Curmudgeon Trade.
archetypeScientist=[int32][10] Robotic Explorative.
archetypeShaman=[int32][10] Robotic Cultural.
archetypeBard=[int32][10] Flowery Sporty.
archetypeZealot=[int32][10] Flowery Military.
archetypeDiplomat=[int32][10] KissAss Diplomatic.
archetypeEcologist=[int32][10] KissAss Explorative.
traitWeightNone=[int32][10]
traitWeightStingy=[int32][10]
traitWeightGenerous=[int32][10]
traitWeightAccidentProne=[int32][10]
tradeChance=[float][1]
surrenderChance=[float][1.0]
surrenderChanceNearDeath=[float][1.0]
debugDrawSpaceRelations=[bool][true]
grobInitialRelationship=[float][0.0]
empireSizeRatioMinCap=[float][0.0]
empireSizeRatioMaxCap=[float][1000.0]
largeGiftAmount=[int32][3000]
mediumGiftAmount=[int32][2000]
smallGiftAmount=[int32][2000]
largeGiftRelationshipMultiplier=[float]
mediumGiftRelationshipMultiplier=[float]
smallGiftRelationshipMultiplier=[float]
npcGiftAmount=[int32][1000]
npcTributeAmount=[int32][5000]
npdTributeTimeLimit=[float][60]
empireSizeRatioFactor=[float][1]
currentRelationshipFactor=[float][1]
alliedUFOHealthMultiplier=[float][25]
escortThreshold=[float][-3.0]
hostileThreshold=[float][-5.0]
warThreshold=[float][-7.0]
warPassiveThreshold=[float][-5.0]
warEndThreshold=[float][-3.0]
warTimeDelay=[float][10.0]
createAllianceBase=[float][3.0]
createAllianceChance=[float][0.3]
endAlliance=[float][1.0]
tradeRouteWarn=[float][3.0]
tradeRouteEnd=[float][0.0]
tribeFeedbackActivationDistance=[float][25.0]
tribeFeedbackDeactivationDistance=[float][75.0]
runTribeGameBehaviors=[bool][true]
missionThreshold=[float][-7.0]
embassyUpdateRate=[float][30.0]
missionManagerMaxNumMissions=[uint32][0]
missionManagerGapBetweenNPCMissions=[float][0.0]
missionManagerGapBetweenColonyMissions=[float][0.0]
missionManagerTrackColors=[uint32s]
missionManagerMinEmpireSizeForArchetypeMissions=[uint32]
missionManagerDefaultMissionIcon=[key]
missionManagerDefaultDisasterIcon=[key]
missionManagerTeachingExploreMissions=[keys]
missionManagerTeachingExpandMissions=[keys]
missionManagerTeachingInteractMissions=[keys]
tradeCaptureOfferPrices=[int32s] Must always be 5 entries.
tradeCaptureBadOfferDelta=[int32][-1000]
tradeCaptureVeryBadOfferDelta=[int32][-2000]
tradeCaptureGoodOfferDelta=[int32][1000]
tradeCaptureCostBuildingCountFactor=[float][200.0]
tradeCaptureCostTurretCountFactor=[float][200.0]
tradeCaptureCostT0=[int32][0]
tradeCaptureCostT1=[int32][0]
tradeCaptureCostT2=[int32][0]
tradeCaptureCostT3=[int32][0]
tradeCapturePerMS=[float][0.001]
tradeCaptureDistanceFactor=[float][0.001]
tradeCaptureDistanceBase=[float]
tradeCaptureMinRate=[float]
tradeCaptureMaxRate=[float]
tradeRouteShipIntervalGalaxy=[float][5]
tradeRouteShipIntervalSolar=[float][5]
tradeRouteBundleInterval=[float][60]
tradeRouteMaxNumber=[int32][5]
tradeRouteRemainingPlanetRatio=[float][1.0] Zero to one, will always leave one.
tradeRouteRemainingCityRatio=[float][1.0] Zero to one, will always leave one.
tradeRouteRemainingBuildingRatio=[float][1.0] Zero to one, does not include city halls.
peaceOfferPrices=[int32s] Must always be 5 entries.
peaceBadOfferDelta=[int32][-1000]
peaceVeryBadOfferDelta=[int32][-2000]
peaceGoodOfferDelta=[int32][1000]
peacePricePlayerSizeFactor=[float]
peacePriceEnemySizeFactor=[float]
peacePriceCaptureFactor=[float]
peacePriceRelationshipFactor=[float]
peacePriceElapsedSecondsFactor=[float]
attackRequestBaseCost=[float][100.0]
attackRequestCostBuildingCountFactor=[float][100.0]
attackRequestCostTurretCountFactor=[float][200.0]
spaceEconomySpiceModifiers=[floats]
spaceEconomySpiceHomeworldMultiplier=[float][0.50]
spaceEconomySpiceProductionMultiplier=[float][0.01]
spaceEconomySpiceStorageMultiplier=[float][2.0]
spaceEconomySpiceColor=[uint32][0xffd3d3d3]
spaceEconomyDebugDrawEconomy=[bool][false]
spaceEconomyTravelFuelCost=[float]
spaceEconomyFuelRechargeTime=[float]
spaceEconomyTravelCost=[float][1.0]
spaceEconomyTravelDamage=[float][1.0]
spaceEconomyColonyTravelDiscount=[float][1.0]
spaceEconomyAllianceTravelDiscount=[float][1.0]
spaceEconomyTradeSpecialsOffered=[int32s]
spaceEconomyTradeMaxSpiceBought=[int32]
spaceEconomyStartingMoney=[int32][1000]
spaceEconomyCheatMoneyAmount=[int32][10000]
spaceEconomyBuildingIncome=[float][10.0]
spaceEconomyTribeMemberIncome=[float][0.004]
spaceEconomyMaxMoneyStoredPerTribe=[float][200.0]
spaceEconomyProductionBuildingCost=[int32][103]
spaceEconomyDefensiveBuildingCost=[int32][103]
spaceEconomyVehicleCost=[int32][103]
spaceEconomyCivicObjectCost=[int32][103]
spaceEconomyHomeWorldBuildingMultiply=[int32][20]
spaceEconomyRepairCost=[floats]
spaceEconomyRechargeCost=[floats]
spaceEconomyEnergyRechargeDelay=[float][5.0]
spaceEconomyEnergyRechargeRate=[float][0.1]
spaceEconomyMaxCargoCount=[int32][50]
spaceTransitionEconomicReward=[int32][0] Money rewarded on transition from civ based on play style.
spaceTransitionCulturalReward=[int32][0] Money rewarded on transition from civ based on play style.
spaceTransitionMilitaryReward=[int32][0] Money rewarded on transition from civ based on play style.
spaceTradingAbundance=[float][5.0]
spaceTradingBaseCost=[float][10.0]
spaceTradingChance=[float][0.0]
spaceTradingExchangeFor=[key][0]
spaceTradingBonusTool=[keys]
spaceTradingType=[key][0]
spaceTradingAlliesOnly=[bool][false]
spaceTradingQuantityToOffer=[uint32][3]
spaceTradingToolClass=[key][0] Passive/social/colonization/combat/terraform.
spaceTradingNoNeed=[text]["tradetext"]
spaceTradingNeed=[text]["tradetext"]
spaceTradingRareGroupID=[int32][0]
spaceTradingRareGroup=[text]["Rares"]
spaceTradingRareCount=[int32][1]
spaceTradingToolReofferRate=[int32][0]
spaceTradingRequires=[key][0]
spaceTradingRequiresAnd=[key][0]
spaceTradingRequiresOr=[key][0]
spaceTradingRequiresBadge=[key][0]
spaceTradingRequiresBadgeAnd=[key][0]
spaceTradingRequiresBadgeOr=[key][0]
spaceTradingRequiresTier=[int32][1]
spaceTradingChanceWarrior=[float][0]
spaceTradingChanceTrader=[float][0]
spaceTradingChanceScientist=[float][0]
spaceTradingChanceShaman=[float][0]
spaceTradingChanceBard=[float][0]
spaceTradingChanceZealot=[float][0]
spaceTradingChanceDiplomat=[float][0]
spaceTradingChanceEcologist=[float][0]
spaceTradingChanceGrob=[float][0]
spaceTradingChancePlayerWarrior=[float][0]
spaceTradingChancePlayerTrader=[float][0]
spaceTradingChancePlayerScientist=[float][0]
spaceTradingChancePlayerShaman=[float][0]
spaceTradingChancePlayerBard=[float][0]
spaceTradingChancePlayerZealot=[float][0]
spaceTradingChancePlayerDiplomat=[float][0]
spaceTradingChancePlayerEcologist=[float][0]
spaceTradingChancePlayerWanderer=[float][0]
spaceTradingChancePlayerKnight=[float][0]
spaceTradingChanceBlueEasy=[float][0]
spaceTradingChanceBlueHard=[float][0]
spaceTradingChanceRedEasy=[float][0]
spaceTradingChanceRedHard=[float][0]
spaceTradingChanceYellowEasy=[float][0]
spaceTradingChanceYellowHard=[float][0]
spaceTradingCostMultiplierWarrior=[float][1]
spaceTradingCostMultiplierTrader=[float][1]
spaceTradingCostMultiplierScientist=[float][1]
spaceTradingCostMultiplierShaman=[float][1]
spaceTradingCostMultiplierBard=[float][1]
spaceTradingCostMultiplierZealot=[float][1]
spaceTradingCostMultiplierDiplomat=[float][1]
spaceTradingCostMultiplierEcologist=[float][1]
spaceTradingCostMultiplierGrob=[float][1]
spaceTradingCostMultiplierUserEco=[float][1]
spaceTradingCostMultiplierUserMil=[float][1]
spaceTradingCostMultiplierUserCul=[float][1]
SuperPowerSpiceIncreaseMultiplier=[float][1]
SuperPowerSpeedMultiplier=[float][1]
SuperPowerHealthMultiplier=[float][1]
SuperPowerEnergyMultiplier=[float][1]
SuperPowerRaidFrequencyMultiplier=[float][1]
SuperPowerBioDisasterFrequencyMultiplier=[float][1]
SuperPowerToolCostMultiplier=[float][1]
difficultySpaceTradeReoffer=[floats]
difficultySpaceTradeToolCost=[floats]
difficultySpacePlayerHealth=[floats]
difficultySpaceAllyHealth=[floats]
difficultySpaceEnemyHealth=[floats]
difficultySpaceDisaster=[floats]
difficultySpaceMissionTime=[floats]
difficultySpaceMissionRewardCash=[floats]
difficultySpaceNPCAwareness=[floats]
difficultySpaceSpiceCost=[floats]
difficultySpiceProduction=[floats]
colonyTerritoryRadius=[float][50.0]
colonyTerritorySamplePoints=[int32][12]
colonyTerritoryHeightOffset=[float][10.0]
colonyMaxSpiceStoredPerColony=[int32][200]
scenarioHazardThresholdLow=[float][0.2]
scenarioHazardThresholdHigh=[float][0.8]
spaceHazardEffect=[key]
spaceHazardHitEffect=[key]
spaceHazardHitEffectNPC=[key]
spaceHazardHitAnimation=[key]
spaceHazardType=[key]
spaceHazardLocations=[key]
spaceHazardTemperatures=[keys]
spaceHazardAtmospheres=[keys]
spaceHazardRadius=[float][10]
spaceHazardHeight=[float][10]
spaceHazardScale=[float][1]
spaceHazardSpawnTime=[float][10]
spaceHazardSpawnLookAheadTime=[float][3]
spaceHazardSpawnRadius=[float][50]
spaceHazardWarmUpTime=[float][3]
spaceHazardDangerTime=[float][12]
spaceHazardSpeed=[float][0]
spaceHazardPush=[float][0]
spaceHazardWindBorne=[bool][false]
spaceHazardChasesAvatar=[bool][false]
spaceHazardDamage=[float][10]
spaceHazardDamageIsPerSecond=[bool][false]
spaceHazardDamageIsPercent=[bool][false]
spaceHazardDamageMultiplierNPC=[float][1.0]
spaceHazardDamageMultiplierCreature=[float][1.0]
ufoMaxAltitudeDestinationDelta=[float][30.0]
ufoMinAltitude=[float][20.0]
ufoMaxAltitude=[float][1000.0]
ufoInitialPlanetZoom=[float][0.3]
ufoHitTerrainDamage=[float][800.0]
ufoVelocityFactor=[float][500.0]
ufoFighterVelocityFactor=[float][500.0]
ufoBomberVelocityFactor=[float][500.0]
ufoVelocityFactorNPC=[float][500.0]
ufoAllyVelocityFactor=[float][500.0]
ufoUberTurretVelocityFactor=[float][500.0]
ufoAccelerationFactor=[float][.001]
ufoAccelerationFactorNPC=[float][.001]
ufoVelocityFactorZoomedOut=[float][1]
ufoAccelerationBankBonus=[float][2]
ufoLeavePlanetTimePad=[float][1.0] Time in seconds before the player can exit the planet.
ufoEscapeSequenceVelocity=[float][1000.0]
ufoEscapeSequenceSpinRate=[float][10.0]
ufoTargetFallOffRadius=[float][20.0]
ufoHitSphereRadius=[float][2.0] Size of picking spheres for NPCs.
ufoAllyHitSphereRadius=[float][2.0] Size of pick spheres on allied ships.
ufoHitSphereActiveDistance=[float][50.0] Distance of camera from NPC before spheres are used.
ufoBasePlanetScale=[float][2.0]
ufoBomberScale=[float][2.0]
ufoFighterScale=[float][0.8]
ufoUberTurretScale=[float][1.0]
ufoAllyScale=[float][1.0]
ufoDefenderScale=[float][2.0]
ufoBomberGalaxyScale=[float][1]
ufoFighterGalaxyScale=[float][0.5]
ufoMerchantGalaxyScale=[float][0.5]
ufoDefenderGalaxyScale=[float][0.5]
ufoPlumpDistance=[float][550.0]
ufoPlumpScale=[float][2.0]
ufoPlumpTransitionScale=[float][8.0]
ufoNPCPlumpScale=[float][2.0]
ufoMinExtent=[float][1.0] Minimum dimension that must be exceeded by a UFO.
ufoMaxExtent=[float]
ufoNoseTiltFactor=[float][5.0]
ufoMaxNoseTilt=[float][45.0]
ufoVerticalTiltFactor=[float][0.1]
ufoMaxVerticalTilt=[float][45.0]
ufoNoseTiltRate=[float][5.0]
ufoBankTiltFactor=[float][5.0]
ufoMaxBankTilt=[float][45.0]
ufoBankTiltRate=[float][5.0]
ufoRotationPercentageRate=[float][2.0] Percentage per second that the UFO will rotate.
ufoMaxRotation=[float][9.0] Maximum rotation in degrees.
ufoBrakeFactor=[float][2.0] Factor by which velocity is cut when a destination is set with the braking flag.
ufoKeyboardAccelerationZoomedOut=[float][30.0] Divide by speed to see how long it takes to reach max speed.
ufoKeyboardAccelerationZoomedIn=[float][10.0] Divide by speed to see how long it takes to reach max speed.
ufoKeyboardMovementSpeedZoomedOut=[float][30.0]
ufoKeyboardMovementSpeedZoomedIn=[float][3.0]
ufoMouseMovementSpeedZoomedOut=[float][6.0]
ufoMouseMovementSpeedZoomedIn=[float][1.0]
ufoMouseRotationSpeedZoomedOut=[float][6.0] Scale how fast the ufo rotates when holding down the mouse (when zoomed out).
ufoMouseRotationSpeedZoomedIn=[float][1.0] Scale how fast the ufo rotates when holding down the mouse (when zoomed in).
ufoWidthFactor=[float][1.0]
ufoHeightFactor=[float][1.0]
ufoDistFactor=[float][1.0]
ufoHeightOffset=[float][7.0]
ufoMouseDriveTurnWidth=[float][20.0]
ufoMouseDriveMoveWidth=[float][200.0]
ufoMouseDriveEdgeZoomHeight=[float][75.0]
ufoSmoothingFactor=[float][.1]
ufoTiltFactor=[float][1.0]
ufoCameraAngleSpeed=[float][1.0]
ufoDamageToDestScale=[float][3.0]
ufoDamageToVelocityScale=[float][2.0]
ufoBaseDamagePush=[float][2.0]
ufoMaxDamagePush=[float][2.0]
ufoDamageVelocityDecayRate=[float][1000.0]
ufoVerticalAccelerationUp=[float][0.3]
ufoVerticalAccelerationDown=[float][0.2]
ufoCollisionElasticity=[float][1.0]
ufoCollisionRestitution=[float][0.2]
ufoTrailEffectAlwaysOn=[bool][true]
ufoTrailEffectMinSize=[float][0.25]
ufoTrailEffectMaxSpeedPlanet=[float][100.0]
ufoTrailEffectMaxSpeedSolar=[float][100.0]
ufoTrailEffectMaxSpeedGalaxy=[float][100.0]
ufoSolarSpeed=[float][0.1]
ufoSolarAcceleration=[float][0.001]
ufoGalaxySpeed=[float][0.0001]
ufoGalaxyAcceleration=[float][0.000001]
ufoGalaxyUseWarp=[bool]
ufoGalaxyWarpMultipliers=[floats]
ufoGalaxyBomberWarpMultiplier=[float]
ufoGalaxyWarpTimes=[floats]
ufoSolarMinPlump=[float][1.0]
ufoSolarMaxPlump=[float][10.0]
ufoSolarMinPlumpDistance=[float][5.0]
ufoSolarMaxPlumpDistance=[float][1500.0]
ufoSolarOffsetMin=[float][1.0]
ufoSolarOffsetMax=[float][100.0]
ufoSolarOffsetMinDistance=[float][1.0]
ufoSolarOffsetMaxDistance=[float][1.0]
ufoGalaxyMinPlump=[float][1.0]
ufoGalaxyMaxPlump=[float][10.0]
ufoGalaxyMinNPCPlump=[float][0.00085]
ufoGalaxyMaxNPCPlump=[float][0.1]
ufoGalaxyMinPlumpDistance=[float][1.0]
ufoGalaxyMaxPlumpDistance=[float][500.0]
ufoGalaxyOffsetMin=[float][1.0]
ufoGalaxyOffsetMax=[float][100.0]
ufoGalaxyOffsetMinDistance=[float][1.0]
ufoGalaxyOffsetMaxDistance=[float][1.0]
ufoPlanetCinematicsScale=[float][1.0]
ufoSolarCinematicsScale=[float][5.0]
ufoGalaxyCinematicsScale=[float][.1]
abductSpeedLowAltitude=[float][14]
abductSpeedHighAltitude=[float][28]
dropOffSpeedLowAltitude=[float][28]
dropOffSpeedHighAltitude=[float][56]
artifactPlumpDistance=[float]
artifactPlumpSize=[float]
impostorResolution=[int32][128]
ptolemaicSunScale=[float][.6]
galacticPrimaryStarModelScale=[float][1.0]
galacticSecondaryStarModelScale=[float][.75]
galacticBinaryModelOffset=[vector3]
solarSystemImpostors=[bool][false]
galacticRevolutionMinDistance=[float][1000.0]
galacticRevolutionMaxDistance=[float][1500.0]
galacticRevolutionRateMin=[float][0.0]
galacticRevolutionRateMax=[float][1.0]
galacticCoreTravelLimit=[float]
galacticCoreTravelRadii=[vector2]
planetStartingOrientation=[float][0.0]
orbitEccentricity=[vector2s][(0, 0)]
orbitPlanarDeviation=[vector2s][(0, 0)]
rotationAxisDevation=[vector2s][(0, 0)]
rotationPeriod=[vector2s][(0, 0)]
averagePlanetaryOrbitPeriod=[float][300.0]
averageMoonOrbitPeriodGasGiant=[float][100.0]
averageMoonOrbitPeriodRocky=[float][500.0]
defaultDayLength=[float][1320.0]
solarSpeedMultiplier=[float][10.0]
percentChanceStarHasRare=[int32][0]
galaxyDustEffectLerpMS=[uint32][2000]
galaxyMaxZoomDustColor=[vector3s]
numAdventuresPreserved=[int32][10]
numPlanetsMin=[int32][2]
numPlanetsMax=[int32][5]
empireSizeWeights=[int32s]
grobEmpireSize=[int32]
grobStarsSpreadRadius=[float]
grobColor=[colorRGB]
grobOnlyRadius=[float]
grobSpecies=[key]
grobUFOInstance=[int32]
GrobCityHallInstance=[int32]
GrobHouseInstance=[int32]
GrobFactoryInstance=[int32]
GrobEntertainmentInstance=[int32]
GrobGroundVehicleInstance=[int32]
GrobAirVehicleInstance=[int32]
GrobWaterVehicleInstance=[int32]
chanceGasGiantHasMoon=[float][0.6]
chanceGasGiantHasRings=[float][0.8]
chanceTerrestrialHasMoon=[float][0]
chanceTerrestrialHasRings=[float][0.1]
chanceAdditionalPlanetsAreSpaceTech=[float][0.3]
weightBarren=[int32]
weightTerrestrial1=[int32]
weightTerrestrial2=[int32]
weightTerrestrial3=[int32]
weightGasGiant=[int32]
weightAsteroidBelt=[int32]
weightArtDirected=[int32]
weightTechLevelCreature=[int32]
weightTechLevelTribe=[int32]
weightTechLevelCiv=[int32]
weightTechLevelEmpire=[int32]
TScoreTribePlanet=[int32]
TScoreCivPlanet=[int32]
TScoreColonyPlanet=[int32]
TScoreEmpireHomeWorld=[int32]
TScoreGrobPlanet=[int32]
chanceStarIsHomeStar=[float]
desireToGrowInfluence=[float]
empireLinesMaxAngle=[float][45.0]
empireLinesMaxDetour=[float][1.5]
percentChanceCivPlanetIsGonnaDoTransitionMiniGame=[int32]
solarStarRadius=[float][30]
solarStarMass=[float][1]
solarStarTemperature=[float][1]
solarStarRotationRate=[float][6]
galaxyOpacityGraph=[vector2s][(0, 1)]
planetScaleGraph=[vector2s][(0, 1)]
planetScaleFromPlanet=[float][0.0]
moonScaleGraph=[vector2s][(0, 1)]
moonScaleFromPlanet=[float][0.0]
starScaleGraph=[vector2s][(0, 1)]
starScaleFromPlanet=[float][0.0]
gasGiantScaleGraph=[vector2s][(0, 1)]
gasGiantScaleFromPlanet=[float][0.0]
homeStarBuffer=[float][5]
empireRadiusMean=[float][20]
empireRadiusVariation=[float][10]
evolutionMeanTime=[float]
tickFrequencyEGS=[int32][0]
minTimeEGS=[int32][0]
maxTimeEGS=[int32][0]
maxProbabilityEGS=[float][0]
colonizationWeightsNormal=[int32s]
outpostWeightsNormal=[int32s]
attackWeightsNormal=[int32s]
niceWeightsNormal=[int32s]
selfColorWeights=[int32s]
selfRelationshipWeights=[int32s]
NPCActionRulesMilitary=[string8s]
NPCActionRulesColonise=[string8s]
NPCActionRulesEconomic=[string8s]
NPCForcedTurnCount=[int32]
hackPlanetLoadEffectArray=[strings] List of effects to run immediately following a planet load.
gameModelIntersectionRadius=[float][.00001]
civCityRolloverPopulationPerIcon=[int32][5] People/icon city rollover population icons.
cursorMgrAttachmentOffsetX=[float][25] How much a cursor attachment offset away from the cursor tip.
cursorMgrAttachmentOffsetY=[float][25] How much a cursor attachment offset away from the cursor tip.
crtAttackChargedColor=[int32][0xff00af00] Charged area of the attack dial.
crtAttackChargingColor=[int32][0xffaf0000] Charging area of the attack dial.
crtAttackUnchargedColor=[int32][0xff3f0000] Uncharged area of the attack dial.
crtAttackSeparatorColor=[int32][0xFF1F1F1F] Dial section separators' color.
crtAttackSelectionColor=[int32][0xFFFFFFFF] Selected attack color.
crtAttackDialHaloColorNormal=[int32][0xFF2F2F3F] Color of normal halo.
crtAttackDialHaloColorActive=[int32][0xFFCFFF00] Color of halo in blink or highlight mode.
crtAttackDialPosAnimTime=[float][0.25] Time taking for a dial to slide into it's final.
crtAttackDialBlinkTime=[float][0.15] Time of a blink for the dial when used for attacks.
crtAttackDialHighlightTime=[float][0.15] Time of a highlight for an attack dial.
crtAttackDialDefaultIcon=[string]["crg-level-icon"] Color of halo in blink or highlight mode.
crtAttackHaloHighColor=[int32][0xFFFFFFFF] Highlighted dial color.
crtAttackHaloLowColor=[int32][0xFFFFFFFF] Lowlighted dial color.
crtAttackHaloBlinkColor=[int32][0xFFFFFFFF] Blink dial color.
crtAttackHaloFlashColor=[int32][0xFFFF0000] Flash dial halo color.
crtAttackPerimFlashColor=[int32][0xFFFF0000] Flash dial perimeter bars color.
RolloverRltnshpVBadCap=[float][-7]
RolloverRltnshpBadCap=[float][-3]
RolloverRltnshpNeutralCap=[float][3]
RolloverRltnshpGoodCap=[float][7]
RolloverVUnhappyCap=[float][15]
RolloverUnhappyCap=[float][35]
RolloverNeutralHappyCap=[float][65]
RolloverHappyCap=[float][85]
IdentityColors=[colorRGBs]
paramNames=[string8s]
paramOffsets=[int32s]
createRandomNames=[bool][true]
starNames=[keys]
planetNames=[keys]
blackHoleNames=[keys]
creatureNames=[keys]
tribeNames=[keys]
cityNames=[keys]
vehicleNames=[keys]
buildingNames=[keys]
excludedWords=[keys]
excludedSubstrings=[keys]
minNameLength=[int32][4]
maxNameLength=[int32][10]
exactlyOneOf=[string]
duplicateSuffixes=[strings]
starNamesFallback=[key]
planetNamesFallback=[key]
tribeNamesFallback=[key]
cityNamesFallback=[key]
creatureNamesFallback=[key]
vehicleNamesFallback=[key]
buildingNamesFallback=[key]
starNamesWordOne=[keys]
starNamesWordTwo=[keys]
starNamesWordThree=[keys]
planetNamesWordOne=[keys]
planetNamesWordTwo=[keys]
planetNamesWordThree=[keys]
tribeNamesWordOne=[keys]
tribeNamesWordTwo=[keys]
tribeNamesWordThree=[keys]
cityNamesWordOne=[keys]
cityNamesWordTwo=[keys]
cityNamesWordThree=[keys]
creatureNamesWordOne=[keys]
creatureNamesWordTwo=[keys]
creatureNamesWordThree=[keys]
buildingNamesWordOne=[keys]
buildingNamesWordTwo=[keys]
buildingNamesWordThree=[keys]
vehicleNamesWordOne=[keys]
vehicleNamesWordTwo=[keys]
vehicleNamesWordThree=[keys]
compoundSpaceWord12=[keys]
compoundSpaceWord23=[keys]
missionType=[key]
missionIsEvent=[bool][false]
missionIsTutorial=[bool][false]
missionIsAdventure=[bool][false]
missionAcceptCost=[int32]
missionDuration=[float][-1.0]
missionTimerStartsOnFirstEntry=[bool]
missionDurationEmpireMultiplier=[floats]
missionRewardEmpireMultiplier=[floats]
missionGenericRewardMoney=[float][0.0]
missionGenericRewardTool=[keys]
missionGenericRewardRelation=[float][0.0]
missionGenericRewardUnlockCount=[int32][0]
missionGenericRewardUnlock=[keys]
missionPartUnlock=[uint32s]
missionStingyRewardMoney=[float][0.0]
missionStingyRewardTool=[keys]
missionStingyRewardRelation=[float][0.0]
missionStingyRewardUnlockCount=[int32][0]
missionStingyRewardUnlock=[keys]
missionGenerousRewardMoney=[float][0.0]
missionGenerousRewardTool=[keys]
missionGenerousRewardRelation=[float][0.0]
missionGenerousRewardunlockCount=[int32][0]
missionGenerousRewardUnlock=[keys]
missionAccidentProneRewardMoney=[float][0.0]
missionAccidentProneRewardTool=[keys]
missionAccidentProneRewardRelation=[float][0.0]
missionAccidentProneRewardUnlockCount=[int32][0]
missionAccidentProneRewardUnlock=[keys]
missionOnRejectUnlockTool=[keys]
missionFailPunishmentRelation=[float][0.0]
missionRejectPunishmentRelation=[float][0.0]
missionAbortPunishmentRelation=[float][0.0]
missionLandmarkSearchRadius=[float][2.0]
missionRangeMin=[float][0.0]
missionRangeMax=[float][2.5]
missionPickTargetPlanet=[key]
missionPickTargetAnimalSpecies=[key]
missionPickClosestStar=[bool][false]
missionPlanetTScore=[int32]
missionPreferAllies=[bool]
missionPreferEnemies=[bool]
missionNumJumps=[int32][2]
missionVisibleToPlayer=[bool][true]
missionConversation=[key]
missionTypeOfFetch=[key]
missionFetchItem=[keys]
missionDropOffRequired=[bool]
missionDropOffRadius=[float]
missionTargetAnimalSpecies=[key]
missionTargetPlantSpecies=[key]
missionStarMapEffect=[key]
missionStarMapEffectGroup=[key]
missionGiveOnAcceptTools=[keys]
missionGiveOnAcceptMoney=[float][0.0]
missionGiveOnAcceptPlants=[bool][false]
missionGiveOnAcceptAnimals=[bool][false]
missionGiveOnAcceptToolsCost=[int32]
missionNumOfRowsRequired=[int32][0]
missionHideStarName=[bool][false]
missionHidePlanetName=[bool][false]
missionExportTargetPlanetTo=[key]
missionExportTargetSpeciesTo=[key]
missionCanAbort=[bool]
missionUnlockToolsSpecial=[keys]
missionChangeArchetypeTo=[key]
missionChangeArchetypeNumActionsNeeded=[uint32]
missionInitDataImport=[keys]
missionInitDataExport=[keys]
missionExitDataExport=[keys]
missionAcceptDataImport=[keys]
missionUseToolID=[keys]
missionNumAliensToFind=[int32][1]
missionContactGrob=[bool][false]
missionColonizePlanetFullRow=[bool][true]
missionColonizeBuildingsRequired=[int32][0]
missionEradicateType=[key]
missionEradicateNumCreatures=[int32]
missionEradicateMaxNumHealthyKills=[int32]
missionEradicateNumKillsNeeded=[int32]
missionEradicateDiseaseEffect=[key]
missionEradicateCanFail=[bool][true]
missionEradicateMinPerHerd=[int32]
missionEradicateMaxPerHerd=[int32]
missionWarTurretsOnly=[bool][false]
missionRaidBuildingsDestroyed=[float] Number of buildings destroyed if the raid is completed.
missionRaidBuildingsSavedPerTurret=[float] Number of buildings saved per turret if the raid is complete.
missionRaidDuration=[float] Seconds.
missionRaidMinBombers=[int32s]
missionRaidMaxBombers=[int32s]
missionRaidMinFighters=[int32]
missionRaidMaxFighters=[int32]
missionRaidMinPirates=[int32s]
missionRaidMaxPirates=[int32s]
missionRaidAllyWaitDuration=[float] Seconds.
missionRaidAllyFailRelationshipDelta=[float]
missionRaidAllyCompleteRelationshipDelta=[float]
missionRaidUFOsLeaveOnArrival=[bool][false]
MissionGenericPressureTimeToRespond=[int32][120]
missionTerraformStartScore=[int32][-1]
missionTerraformTargetScore=[int32][-1]
missionBiosphereCollapseAnimalTime=[float][120]
missionBiosphereCollapsePlantTime=[float][30]
missionMinBuildingsForAdditionalPlanet=[int32][52]
missionBuildingsPerAdditionalPlanet=[int32][12]
missionVisitCities=[bool]
missionCityEffectNonVisited=[key]
missionCityEffectVisited=[key]
missionVisitRadius=[float]
missionCityEffectHeight=[float]
missionCityEffectHeightJitter=[float]
missionNumCitiesToVisit=[int32]
missionExploreType=[key]
missionMultiDeliveryMinNumBuyers=[int32]
missionMultiDeliveryMaxNumBuyers=[int32]
missionMultiDeliveryMinNumItems=[int32]
missionMultiDeliveryMaxNumItems=[int32]
missionMultiDeliveryBuyerPaymentItem=[keys]
missionSubMissions=[keys]
missionTradeItemType=[key]
missionTradeKind=[key]
missionTrackBadgeID=[key]
missionAdventureID=[key]
missionAchievementID=[key]
missionGeneratorMissionIDs=[keys]
missionGeneratorWeight=[int32s]
missionGeneratorWeightDuringWar=[int32s]
missionGeneratorWeightDuringAlliance=[int32s]
missionGeneratorWeightColony=[int32s]
missionGeneratorWeightColonyDuringWar=[int32s]
missionGeneratorWeightColonyDuringAlliance=[int32s]
badgeName=[text]
badgeCargoReward=[int32] Number of cargo slots (please use multiples of 10).
badgeToolReward=[keys]
badgeUnlockString=[text]
badgeLockedImageID=[key]
badgeUnlockedImageID=[key]
badgeEffectID=[uint32][0]
badgeReplacesBadge=[key][0]
badgePointValue=[int32][0]
badgeInitiallyHidden=[bool][false]
badgeDescriptionString=[text]
badgeHintAction=[text]
badgeCardDescription=[text]
badgeMissionRewardMultiplier=[float][1.0]
badgeMissionDurationMultiplier=[float][1.0]
badgeHintEnabled=[bool][true]
badgeEarnPosse=[bool][false]
badgeGroup=[text]
badgeRequirementList=[keys] This array of keys should only list properties included below that are required for the current badge.
badgeReqPlanetsColonized=[int32]
badgeReqRaresCollected=[int32]
badgeReqAlliancesFormed=[int32]
badgeReqStarsExplored=[int32]
badgeReqPlanetsTerraformed=[int32]
badgeReqEmpiresMet=[int32]
badgeReqWarsStarted=[int32]
badgeReqFetchMissionsComplete=[int32]
badgeReqEradicateMissionsComplete=[int32]
badgeReqEcoDisasterMissionsComplete=[int32]
badgeReqFoodWebsComplete=[int32]
badgeReqBadgePointsEarned=[int32]
badgeReqTradesComplete=[int32]
badgeReqMissionsComplete=[int32]
badgeReqGrobDefeated=[int32]
badgeReqGrobAllied=[int32]
badgeFlight101Complete=[int32]
badgeReqArchetypeSwitches=[int32]
badgeFriendsDefended=[int32]
badgeCivspromoted=[int32]
badgeCreaturespromoted=[int32]
badgeSightseer=[int32]
badgeFlightsmade=[int32]
badgeAestheticTools=[int32]
badgeStorybooksvisited=[int32]
badgeTraderoutes=[int32]
badgeSystemspurchased=[int32]
badgePlanetsconquered=[int32]
badgeToolspurchased=[int32]
badgeEmpiresize=[int32]
badgeJoker=[int32]
badgeReachedCash=[int32]
poison_count=[vector2s][(0, 0)]
electric_recharge_vs_small_count=[vector2s][(0, 0)]
electric_recharge_count=[vector2s][(0, 0)]
electric_jumps_count=[vector2s][(0, 0)]
electric_range_count=[vector2s][(0, 0)]
flagella_count=[vector2s][(0, 0)]
jet_count=[vector2s][(0, 0)]
eye_count=[vector2s][(0, 0)]
jet_graph=[vector2s][(0, 0)]
jet_count=[vector2s][(0, 0)]
cilia_graph=[vector2s][(0, 0)]
cilia_count=[vector2s][(0, 0)]
time_dilation=[vector2s][(0, 0)]
anim_dilation=[vector2s][(0, 0)]
awareness_dilation=[vector2s][(0, 0)]
npc_turn_factor=[vector2s][(0, 0)]
evo_points=[vector2s][(0, 0)]
camera_lookahead=[vector2s][(0, 0)]
camera_lerpfactor=[vector2s][(0, 0)]
mouse_zoom=[vector2s][(0, 0)]
nounDefinition_ID=[uint32]
nounDefinition_ClassID=[uint32]
nounDefinition_ResourceID=[uint32]
nounDefinition_ResourceKey=[key]
nounDefinition_ResourceDescription=[string8]
nounDefinition_GameplayTrigger=[uint32s]
nounDefinition_FixedSpatialObject=[bool]
nounDefinition_HasAttractorEffect=[bool]
nounDefinition_RotateAroundYWhenHeld=[bool]
nounDefinition_TerrainThemeOverride=[bool]
nounDefinition_OrientationWhenHeld=[vector3]
toolData_ToolType=[uint32][0]
toolData_ToolClass=[uint32][0]
toolData_RackModelKey=[key]
toolData_IconID=[uint32][0]
toolData_DefaultToolIdle=[uint32]
toolData_LookaroundToolIdle=[uint32]
toolData_GrasperOverlay=[uint32]
toolData_EnRouteAnim=[uint32]
toolData_MaxNumSlots=[int32]
debug_numflags=[uint32]
debug_flags=[uint32]
debug_dimensions=[vector4]
debug_favoritecheatnames=[string8s]
debug_favoritecheats=[string8s]
perfLabels=[string8s] Names.
perfColors=[vector3s] Colours.
perfPositions=[vector2s] (line#, 0|1 = left|right).
perfLimits=[vector2s] (limit, maxLimit).
GalaxyCamAngularVelocity=[float]
GGEtoCellZoomDuration=[float]
tutorialLayout=[key]
tutorialText=[uint32s]
tutorialLinksText=[uint32s]
tutorialLinks=[keys]
tutorialStringTable=[key]
tutorialSelectedLinks=[uint32s]
creditsNames=[keys]
creditsOrder=[uint32]
creditsButtonIcon=[key]
creditsButtonBackground=[key]
creditsButtonTooltip=[text]
creditsUSOnlyTextGroup=[uint32]
creditsAppPackID=[uint32]
creditsMACOnlyTextgroup=[uint32]
movieRes=[int32]
photoRes=[int32]
vi_name=[string]
vi_tableau=[uint32] 0 = facing center, 1 = facing forward.
vi_vox=[string] A vox sound to play over the whole vignette after assembly.
vi_actor_sequences=[uint32s] Which sequence below to use for each actor.
vi_actor_offsets=[vector2s] Offset from center in creature-radii.
vi_actor_offsets_unscaled=[bool] The actor offsets are not scaled by creature radii.
vi_actor_orientations=[floats] Initial orientations offset from tableau settings, 0-359 degrees.
vi_actor_alternate_color=[bools] When true, use alternate color (set by code) for actor identity color.
vi_fourCC=[string]
vi_effects_general=[keys]
vi_effects_general_offsets=[vector2s]
vi_animations_0=[uint32s]
vi_loops_0=[uint32s]
vi_effects_0=[uint32s]
vi_effect_limbs_0=[uint32s]
vi_animations_1=[uint32s]
vi_loops_1=[uint32s]
vi_effects_1=[uint32s]
vi_effect_limbs_1=[uint32s]
vi_animations_2=[uint32s]
vi_loops_2=[uint32s]
vi_effects_2=[uint32s]
vi_effect_limbs_2=[uint32s]
vi_animations_3=[uint32s]
vi_loops_3=[uint32s]
vi_effects_3=[uint32s]
vi_effect_limbs_3=[uint32s]
vi_animations_4=[uint32s]
vi_loops_4=[uint32s]
vi_effects_4=[uint32s]
vi_effect_limbs_4=[uint32s]
vi_animations_5=[uint32s]
vi_loops_5=[uint32s]
vi_effects_5=[uint32s]
vi_effect_limbs_5=[uint32s]
vi_animations_6=[uint32s]
vi_loops_6=[uint32s]
vi_effects_6=[uint32s]
vi_effect_limbs_6=[uint32s]
vi_animations_7=[uint32s]
vi_loops_7=[uint32s]
vi_effects_7=[uint32s]
vi_effect_limbs_7=[uint32s]
vi_animations_8=[uint32s]
vi_loops_8=[uint32s]
vi_effects_8=[uint32s]
vi_effect_limbs_8=[uint32s]
vi_animations_9=[uint32s]
vi_loops_9=[uint32s]
vi_effects_9=[uint32s]
vi_effect_limbs_9=[uint32s]
vi_animations_10=[uint32s]
vi_loops_10=[uint32s]
vi_effects_10=[uint32s]
vi_effect_limbs_10=[uint32s]
vi_animations_11=[uint32s]
vi_loops_11=[uint32s]
vi_effects_11=[uint32s]
vi_effect_limbs_11=[uint32s]
vi_min_happy=[float]
vi_max_happy=[float]
vi_city_specialty=[uint32] 0 = any (default), 1 = military, 2 = religious, 3 = diplomatic.
vi_capture_event=[uint32] As above.
vi_time_of_day=[uint32] 0 = any time, 1 = day only, 2 = night only.
vi_protest_event=[bool]
vi_attitude_towards_player=[uint32] -1 = don't care, 0 = furious, 1 = annoyed, 2 = cautious, 3 = pleased, 4 = friendly.
vi_has_mouth_type=[uint32] 0 = don't care, 1 = herbivore, 2 = carnivore.
vi_required_tools=[uint32s] 1 = clubs, 2 = axes, 3 = spears, 4 = horns, 5 = maracas, 6 = didgeridoo, 7 = gather, 8 = fish, 9 = heal.
dialogOKButton=[bool][false]
dialogTitle=[text]
dialogText=[text]
dialogButton0=[text]
dialogButton1=[text]
dialogButton2=[text]
dialogButton3=[text]
dialogTimeout=[uint32][0]
dialogSelectedButton=[int32]
dialogEscButton=[int32]
dialogEnterButton=[int32]
dialogLayout=[key]
dialogDisableByOptions=[bool][false]
dialogCalloutHighlightUiChildren=[bool][true] Whether or not targets children have to be highlighted as well.
dialogCalloutHighlightUiMaterial=[string]["ui_material_blink -color (1,1,1) -frequency 1 -intensity .8 -func 1 -func_inv 1"] Material to use.
dialogCalloutUiParent=[uint32][0] Parent of ui targets. Defaults to the main window.
dialogCalloutHighlightUiIds=[uint32s][0] Ui targets to highlight. Defaults to nothing.
dialogCalloutHighlightTargetUiId=[uint32][0] Child window of target window that should be highlighted.
dialogCalloutUiId=[uint32][0] Ui target to point the arrow at. Defaults to center a box with no arrow.
dialogCalloutAccept0UiId=[bool][false] Make 0 a valid control ID.
dialogCalloutIgnoreUIVisibility=[bool][false]
dialogCalloutLocationHorizontal=[float][0.5] 1 - callout is at the right of the screen, 0 - left, 0.5 - middle of the screen.
dialogCalloutLocationVertical=[float][0.5] 1 - callout is at the very top of the screen, 0 - very bottom, 0.5 - middle of the screen.
dialogCalloutUiIdDismissButton=[uint32][0] A button ID to dismiss the callout as an alternative to the button in the callout dialog itself.
dialogCalloutUiIdSpaceTool=[key] Specify a tool ID instead of a control ID.
flashAmplitude=[float]
flashLength=[uint32]
pulseAmplitude=[float]
pulseFrequency=[float]
highlightCurve=[floats]
highlightLife=[float]
timelineCircleNumber=[uint32s]
timelineImages=[keys]
timelinePositions=[vector2s]
timelineRotations=[floats]
timelineScales=[vector2s]
timelineLayerOrders=[uint32s]
timelineEventLevelTraits=[keys]
timelineEventLevelTraitsIndex=[int32]
timelineEventTrait=[key]
timelineEventGameLevel=[key]
timelineEventShowRollover=[bool]
timelineEventRolloverText=[text]
timelineEventStackedRolloverText=[text]
timelineEventAlternateRolloverText=[text]
timelineEventAlternateStackedRolloverText=[text]
timelineEventSporepediaView=[key]
timelineEventLayout=[key]
timelineEventUseDisposition=[bool]
timelineEventIsStackable=[bool]
timelineEventCreateStackedEvents=[bool]
timelineEventStopStackSeconds=[int32]
timelineEventStopStackEvents=[keys]
timelineEventStackEvents=[keys]
timelineEventIcon=[key]
timelineEventTitle=[text]
timelineEventRolloverLayout=[key]
timelineEventImageType=[key]
timelineEventShowUpArrow=[bool]
timelineEventShowDownArrow=[bool]
timelineEventContainsAvatarKey=[bool]
timelineEventCanWrap=[bool]
timelineEventVerticalLineStyle=[key]
partUnlockLayout=[uint32]
partUnlockItemLayout=[uint32]
partUnlockFeedList=[uint32]
partUnlockCurrency=[uint32]
totalFlashTimeMS=[uint32]
flashMaterialName=[string16]
flashRecursive=[bool]
gameLaunchScreenImages=[keys]
gameLaunchScreenTexts=[texts]
CasualsBackground=[key]
CasualsLight=[key]
CasualsCreature=[key]
CasualsLayout=[key]
CasualModule=[key]
CasualsBigMomentInterval=[float]
TerrariumInvIcon=[key]
TerrariumInvIconHilite=[key]
TerrariumInvObjID=[key]
TerrariumInvUnlockLevel=[int32]
TerrariumInvName=[string]
TerrariumInvCost=[uint32]
TerrariumInvXMLFileName=[string]
Ter_Inv_CanPickup=[bool] Creature can pickup the item.
Ter_Inv_CanThrow=[bool] Creature can throw the item.
Ter_Inv_CanTwirl=[bool] Creature can twirl the item.
Ter_Inv_CanClimb=[bool] Creature can climb on the item.
Ter_Inv_CanAttemptEat=[bool] Creature can try to eat the item.
Ter_Inv_CanEat=[bool] Creature can actually eat the item.
Ter_Inv_CanPoke=[bool] User can poke the creature with item.
Ter_Inv_CanSleepOn=[bool] Creature can sleep on the item.
Ter_Inv_CanRcvFromUser=[bool] Creature can receive the item from user.
Ter_Inv_CanPush=[bool] Creature can "push" the item.
Ter_Inv_CanToss=[bool] User can toss this item.
Ter_Inv_IsFoodDish=[bool] Used for testing whether food dish.
Ter_Inv_IsAmbientCreature=[bool] Used for testing whether ambient creature.
Ter_Inv_IsToy=[bool] Side effect of increasing happiness if tossed/given.
Ter_Inv_IsEdible_Carnivore=[bool] Is this edible by a carnivore, if false, assume that it's edible by herbivore.
Ter_Inv_EatValue=[float] Amount to ease hunger when eaten.
Ter_Inv_ExcludeCreatureCheck=[bool] Used when item is the cursor and checking to see if it is over something.
Ter_Inv_InfiniteMass=[bool] Used to set Havok mass value -- for items to not be bounced against the floor.
Ter_Inv_PinnedToFloor=[bool] Used to specify keeping on floor when moving it as a cursor.
Ter_Inv_CanCollide=[bool] Used to set whether we should check creature collision against item.
Ter_Inv_Cylindrical=[bool] Used to specify model type in havok.
Ter_Inv_Spherical=[bool] Used to specify model type in havok.
Ter_Inv_PlacementRestricted=[bool] Used to restrict placement in the terrarium.
Ter_Inv_Movable=[bool] Specify whether item can be moved by creature (e.g. tree and bed are not).
Ter_Inv_Rotation=[float] Initial rotation value when model loaded.
Ter_Inv_Axis=[int32] Axis used for initial rotation - 0 = x, 1 = y, 2 = z.
Ter_Inv_CursorHeightOfsScale=[float] Used to offset the cursor when item is the cursor (see InteractionMgr::Update).
Ter_Inv_OffsetClickPos=[bool] Use to indicate whether the clickPos should be offset when clicked on item (for larger items).
Ter_Inv_ClickPosOffsetRadius=[float] Used to specify how much to offset from the center of the object if above is true.
Ter_Inv_InMouthOffset=[vector3] Offset values when picked up with mouth.
Ter_Inv_InMouthRot=[float] Rotation value (degrees) when picked up with mouth.
Ter_Inv_PokeRotation=[float] Angle of rotation (degrees) when poking with item.
Ter_Inv_PokeAxis=[int32] Axis of rotation when poking with item.
Ter_Inv_Affinity=[float] Creature's affinity for the inventory item 0.0 - 1.0 (higher means likes it), if not specified, defaults to 0.5 (neutral).
TerrariumModuleBackground=[key]
TerrariumModuleGround=[key]
TerrariumModuleLight=[key]
TerrariumModuleObjProp=[keys]
TerrariumModuleObjType=[int32]
TerrariumModuleObjID=[key]
TerrariumModuelObjPos=[vector3]
TerrariumModuleObjRot=[float]
TerrariumModuleObjScale=[float]
CasualsCreatureOpp=[key]
CasualCombatAnimIDs=[keys] Array of animIDs.
CasualCombatAnimSpeedScales=[floats] Array of speedscale.
TerrariumBadgeIconOff=[key]
TerrariumBadgeIconOn=[key]
TerrariumBadgeEnum=[uint32]
TerrariumBadgeTooltip=[string]
TerrariumBadgeType=[uint32]
TerrariumBadgeOrder=[uint32]
TerrariumBadgeTooltip2=[string]
TerrariumBadgeIconDim=[key]
accessoryEffectSmoke=[bool][false]
creatureSimulationLOD_MinDistanceLow=[float][100.0]
creatureSimulationLOD_MinDistanceMed=[float][75.0]
IllegalCharacters=[string16][""]
minnumblocks=[int32][2]
validEditorKeys=[keys]
validAdditionalManifestGroupIDs=[keys]
validationLoadableTests=[int32s]
validationEditableTests=[int32s]
validationSporepediaViewableTests=[int32s]
validationPlayableTests=[int32s]
validationPollinatableTests=[int32s]
validationWarningTests=[int32s]
validationEditorToIgnoreTests=[int32s]
validationSporepediaViewableLargeTests=[int32s]
validationEditorLoadableTests=[int32s]
validationSporepediaPlayableTests=[int32s]
validationSporepediaEditableTests=[int32s]
pickabilityMaxDimensionRatio=[float]
pickabilityMinScore=[float]
transmissionCancelConditions=[keys]
expansionHighlight=[keys]
stanceNames=[keys]
stanceIcons=[keys]
teamNames=[keys]
teamIcons=[keys]
teamColors=[keys]
terraformToolPreviewEffect=[key]
terraformWaterScoreRange=[vector2]
terraformBrushIntensityRange=[vector2]
terraformBrushIntensityDefault=[float]
terraformBrushSizeRange=[vector2]
terraformBrushSizeDefault=[float]
terraformBrushComplexity=[float]
terraformBrushColor=[vector3]
terraformColors=[vector4]
terraformModelID=[key]
terraformMarkerModelID=[key]
terraformBrushCategory=[uint32]
terraformTerrainColorValues=[vector3s]
terraformTerrainColorElevationPercents=[floats]
terraformTerrainColorCliff=[vector3]
terraformTerrainColorBeach=[vector3]
visualStyleEffects=[keys]
adventurerDamageToEnergyFactor=[float]
adventurerShieldGeneratorDamageToEnergyFactor=[float]
adventurerShieldGeneratorDamagePreventionFactor=[float]
adventurerAbsorptionShieldDamageToEnergyFactor=[float]
adventurerAbsorptionShieldDamagePreventionFactor=[float]
adventurerBattleArmorDamagePreventionFactor=[float]
adventureHealthMultipliers=[floats]
powerupType=[uint32]
powerupModel=[key]
useEffect=[uint32]
useEffect_onPlayer=[uint32]
powerupDuration=[float]
powerupAmount=[float]
powerupRadius=[float]
powerupExplodeStrength=[float]
editModeUsesCivCamera=[bool][false]
placeableEffectId=[uint32]
healthSliderValues=[floats]
avatarHealthSliderValues=[floats]
damageSliderValues=[floats]
creatureSpeedSliderValues=[floats]
vehicleSpeedSliderValues=[floats]
creatureAvatarJumpDelay=[float][0.3]
creatureAvatarJumpMinPercent=[float][0.5]
isMyCaptain=[bool]
isSpaceCaptain=[bool]
scenarioCaptainName=[string16]
scenarioCaptainAdventureHistory=[keys]
scenarioCreaturesKilled=[int32]
scenarioBuildingsDestroyed=[int32]
scenarioVehiclesDestroyed=[int32]
scenarioCreaturesBefriended=[int32]
scenarioObjectsCollected=[int32]
scenarioGoalsCompleted=[int32]
scenarioSporePoints=[int32]
scenarioCaptainLevel=[int32]
scenarioTimesDied=[int32]
scenarioPosseMembersLost=[int32]
scenarioAvatarDamageDone=[int32]
scenarioAvatarDamageTaken=[int32]
scenarioAvatarUsedJetPack=[int32]
scenarioAvatarUsedSprint=[int32]
scenarioAmountAvatarHealed=[int32]
scenarioAmountAvatarEnergyUsed=[int32]
scenarioNumBarrelsDestroyed=[int32]
scenarioNumCreaturesMet=[int32]
scenarioNumDefended=[int32]
scenarioNumPlayed=[int32]
scenarioNumWins=[int32]
scenarioNumLosses=[int32]
scenarioTimePlayed=[int32]
editorModelForceSaveOver=[bool]
editorModelCopyConsequence=[bool]
editorModelSaveLastChild=[bool]
editorModelLastChildModelKey=[key]
editorModelCollectableConfig=[key]
editorModelUnlockedItems=[keys]
editorModelNewItems=[keys]
editorModelNameOverride=[string16]
adventureIntroScripts=[string8s]
adventureWinScripts=[string8s]
adventureLoseScripts=[string8s]
adventureDeathScripts=[string8s]
partUnlocksAchievement=[key]
partUnlocksTool=[key]
adventureLastPlayedTime=[uint32] The last time player played this, we can't store 64-bit ints in props, so this will run out in year 2106.
adventurePlayerPlayCount=[int32] How many times a player has played this particular adventure.
adventurePlayerRating=[int32] Player's own rating on this adventure. -1: Thumbs down, 0: Rate later, +1: Thumbs up.
MaxNotes=[uint32]
AmbienceIcons=[keys]
BeatIcons=[keys]
InstrumentIcons=[keys]
paletteItemUIClassId=[uint32]
DisplayFilterUI=[bool]
AssetGridBorderSize=[float]
GridScrollButtonPixelsPerSecond=[int32]
ScrollCatchupSpeed=[float]
MaxNumAssetsLoaded=[int32]
AssetGridVerticalSpacer=[float]
AssetLoadInterval=[int32]
ScrollSingleChunkAmount=[float]
MakeNewButtonSizeOffset=[int32]
FeedListScrollButtonPixelsPerSecond=[int32]
DisabledCardColor=[colorRGBA]
CardMovementSoundProgressThreshold=[float]
CardMovementThreshold=[float]
FeedTextColorRolloverSelected=[colorRGBA]
FeedTextColorRollover=[colorRGBA]
FeedColorRolloverSelected=[colorRGBA]
FeedColorRollover=[colorRGBA]
FeedTextColorDefault=[colorRGBA]
FeedTextColorSelected=[colorRGBA]
FeedColorDefault=[colorRGBA]
FeedColorSelected=[colorRGBA]
FeedItemSelectedHeightOffset=[float]
NetworkSpinnyColor=[colorRGBA]
FeedItemNameAndCountGapPixels=[float]
SearchPauseTimeMS=[int32]
globalFindPercentageMultiplier=[float]
findPercentageLevelMultiplier=[float]
unlocksPerLevel=[int32s]
rampOffsetStartDistance=[float]
avatarCenterCloseUpDistFromCenter=[float]
eyeEffectEnabled=[bool]
cameraIsMayaStyle=[bool]
plantSummaryVersionForPollinator=[uint32]
creatureSummaryVersionForPollinator=[uint32]
creatureNPCMinBabyTime=[uint32]
globalCreatureSpeedGear0=[float]
globalCreatureSpeedGear1=[float]
globalCreatureSpeedGear2=[float]
globalCreatureSpeedGear3=[float]
globalCreatureSpeedGear4=[float]
globalCreatureSpeedGear5=[float]
globalCreatureSprintSpeedBoost=[float]
creatureBaseHealth_Level1=[float]
creatureBaseHealth_Level2=[float]
creatureBaseHealth_Level3=[float]
creatureBaseHealth_Level4=[float]
creatureBaseHealth_Level5=[float]
creatureHealthIncrement=[float]
creatureBasePerception=[float]
creatureBaseLoudness=[float]
creatureHerdSizeFallback=[float]
growthRate=[float]
creatureScaleForBrainLevel0=[float]
creatureScaleForBrainLevel1=[float]
creatureScaleForBrainLevel2=[float]
creatureScaleForBrainLevel3=[float]
creatureScaleForBrainLevel4=[float]
creatureScaleForBrainLevel5=[float]
alphaCreatureScale=[float]
eggScaleMaxMultiplier=[float]
postureCapRange=[vector3s]
gestureCapRange=[vector3s]
attacked_MaxSpeciesToAlert=[int32]
attacked_SpeciesHelpRadius=[float]
socialDrainRate=[float]
socialTimeBeforeDrain=[float]
numSocialProposals=[uint32]
extinctionReward=[int32]
relationshipFearedReward=[int32]
relationshipBestFriendsReward=[int32]
relationshipFriendlyReward=[int32]
relationshipCuriousReward=[int32]
numToKillForFearfulRelationship=[int32]
numInGroupToStartWithSpecial=[int32]
standardAttacksPerSpecial=[int32]
fightGroupSize=[int32]
schedules=[uint32s]
groupSizeRange=[vector2]
initialAvatarRelationship=[uint32]
defaultPersonality=[uint32]
guardLocationAreaBuffer=[float]
guardPositionDurationRange=[vector2]
guardLocationRadiusRange=[vector2]
guardsPerLocation=[int32]
percentBabiesRange=[vector2]
percentGuards=[float]
exclusiveAreaRadiusGroupLarge=[float]
exclusiveAreaRadiusGroupMedium=[float]
exclusiveAreaRadiusGroupSmall=[float]
socialPower=[float]
basePerceptionRadius=[float]
baseSightAngle=[float]
baseSightRadius=[float]
relatedArchetypes=[uint32s]
optionalOriginDistances=[vector2s]
slopeArea=[float]
partUnlockLevelReward=[int32]
evoPointsRewardedSocial=[float]
evoPointsRewarded=[float]
dnaPointsEvolutionThresholds=[vector2]
creatureShortfall=[vector2]
useOrigin=[bool]
initialDistance=[float]
VerbButtonGap=[float]
cameraRotateScaleKeyboard=[float]
cameraZoomScaleKeyboard=[float]
scenarioObjectType=[uint32]
StateName=[texts] Used in Discord Rich Presence mod for state name (2nd line).
DetailName=[texts] Used in Discord Rich Presence mod for detail name (1st line).
LargeImage=[string16] Used in Discord Rich Presence mod for large icon name.
SmallImage=[string16] Used in Discord Rich Presence mod for small icon name.
SmallHoverName=[texts] Used in Discord Rich Presence mod for small image tooltip.
LargeHoverName=[texts] Used in Discord Rich Presence mod for large image tooltip.
paletteItemClassId=[uint32]
eventLogOffset=[vector2]
FeedColorLocked=[colorRGBA]
FeedColorNewAssets=[colorRGBA]
FoodChainLevel=[int32]
LevelEditorColor=[colorRGB]
NumCreatures=[vector2]
NumGuardLocations=[int32]
NumNests=[vector2]
RespawnRate=[float]
SocialGroupSize=[int32]
WaterDistance=[vector2]
OriginDistance=[vector2]
Altitude=[vector2]
Attack=[vector3s]
BaseGear=[vector3s]
Cost=[vector3s]
HasNest=[bool]
HitpointOverride=[float]
NumFeet=[vector3s]
NumGraspers=[vector3s]
OverrideSize=[float]
Social=[vector3s]
TerritoryRadius=[float]
DamageMultiplier=[float]
PlacementPercentage=[float]
ModelTypes=[uint32s]
EggIndex=[int32]
MeanLooking=[vector3s]
NumToImpressForBestFriends=[int32]
NumToImpressForCurious=[int32]
NumToImpressForFriendly=[int32]
NumToKillForExtinction=[int32]
ScaleMultiplier=[float]
TotalAttack=[vector3s]
TotalSocial=[vector3s]
upgradeHerdList=[uint32s]
slope=[vector2]
ArcheType=[uint32]
CreatureArchetype=[uint32]
fishplans=[uint32s]
gatherplans=[uint32s]
huntplans=[uint32s]
initialfood=[uint32]
initialpopulation=[uint32]
maxpopulation=[uint32]
raidplans=[uint32s]
toolprefs=[uint32s]
CheatMemberPlans=[uint32s]
FoodRate=[float]
StealFoodPlans=[uint32s]
buytoolsplans=[uint32s]
giftplans=[uint32s]
idleplans=[uint32s]
mateplans=[uint32s]
CheckTime=[float]
InitialDelay=[float]
NumRequiredTribeMembers=[uint32]
RequiredTools=[uint32s]
_membersToolsProb=[vector2s]
_numberMembersToUse=[uint32]
desiredTools=[uint32s]
frequency=[uint32]
FoodRate=[float]
desiredFood=[int32]
AlphaCreatureHitPointMultiplier=[float]
AbilityPerceptionMultiplier=[float]
ActivationThreshold=[vector2]
ActivationType=[uint32]
CheckTime=[float]
EventMask=[uint32]
RequiresAvatar=[bool]
duration=[float]
MeteorEffects=[uint32s]
MeteorImpactDamage=[float]
MeteorImpactRange=[float]
MeteorImpactStunTime=[float]
MeteorInitialDelay=[floats]
MeteorSpawnDelayRange=[vector2s]
MeteorSpawnHeight=[float]
MeteorStrikeRange=[floats]
NumMeteorStrikes=[int32s]
NightPredatorHerdDistance=[float]
NightPredatorPercentage=[float]
StormLevel=[float]
AmountToEat=[float]
TimeToEat=[float]
strip_style=[float]
DNAPointsMultipliers=[floats]
MigrationDNALevels=[int32s]
roadWidth=[float]
definitionId=[uint32]
definition_ResourceType=[uint32]
spacing=[vector2]
useEffect_onNPC=[uint32]
foodValue=[float]
healthCapRange=[vector3s]
biteCapRange=[vector3s]
strikeCapRange=[vector3s]
spitCapRange=[vector3s]
chargeCapRange=[vector3s]
danceCapRange=[vector3s]
glideCapRange=[vector3s]
isEpic=[bool]
isMiniboss=[bool]
senseCapRange=[vector3s]
singCapRange=[vector3s]
socialDecay=[float]
sprintCapRange=[vector3s]
stealthCapRange=[vector3s]
replacementList=[string8s] Used in Universal Property Enhancer mod.
postinitList=[string8s] Used in Universal Property Enhancer mod.
editorNudgeHandleTuningFile=[key]
modelTranslucent=[bool] Labs-specific baked creature property.
prebakedCreatureCount=[uint] Labs-specific prebaked property.
forceLoadLayerGroup=[key] Labs-specific level generation property.
editorBackgroundLevel=[string8] Labs-specific editor config property.
